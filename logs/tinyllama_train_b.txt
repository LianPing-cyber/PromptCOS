2
**********timedial**********
LlamaModel is using LlamaSdpaAttention, but `torch.nn.functional.scaled_dot_product_attention` does not support `output_attentions=True`. Falling back to the manual attention implementation, but specifying the manual implementation will be required from Transformers version v5.0.0 onwards. This warning can be removed using the argument `attn_implementation="eager"` when loading the model.
0
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 16549, 1900, 23994, 278, 529, 1529, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 7197, 17724, 1738, 7440, 366, 1246, 363, 263, 715, 2807, 29973, 13, 29933, 29901, 3869, 29892, 4874, 306, 1258, 29889, 3529, 2041, 297, 1738, 306, 29915, 29885, 577, 10932, 366, 2996, 1738, 910, 2030, 3699, 338, 20327, 12435, 1738, 16760, 373, 964, 278, 27683, 8345, 29889, 2823, 29892, 1244, 29892, 727, 29915, 29879, 4094, 454, 5086, 16978, 1738, 13, 29909, 29901, 306, 1074, 29889, 2803, 592, 505, 263, 1106, 29889, 739, 2444, 393, 596, 304, 488, 29873, 338, 274, 1188, 3192, 29892, 322, 393, 29915, 29879, 2020, 372, 2113, 29915, 29873, 28371, 29889, 2803, 592, 925, 679, 590, 715, 686, 261, 29889, 1939, 29892, 393, 29915, 29879, 451, 1985, 2845, 29889, 306, 12326, 393, 727, 29915, 29879, 777, 2656, 310, 9117, 1203, 297, 278, 8450, 267, 393, 5129, 269, 10805, 263, 2908, 482, 29889, 2193, 29915, 29879, 825, 29915, 29879, 3907, 596, 304, 488, 29873, 11969, 29889, 13, 29933, 29901, 6439, 29892, 393, 1818, 367, 1363, 310, 590, 529, 1529, 16033, 29958, 8750, 29889, 2296, 338, 2337, 1652, 21616, 2712, 1623, 278, 304, 488, 29873, 29889, 887, 1073, 920, 413, 4841, 526, 29889, 13, 29909, 29901, 15011, 29892, 306, 505, 263, 2217, 697, 6142, 29889, 18110, 29892, 1438, 4094, 8450, 267, 526, 2289, 21580, 29891, 29892, 577, 896, 884, 881, 367, 3939, 29889, 2193, 26680, 367, 10805, 4094, 304, 451, 270, 6038, 6446, 29892, 393, 1795, 3275, 304, 901, 4828, 297, 278, 5434, 29889, 306, 723, 884, 4368, 27826, 445, 285, 14766, 300, 393, 3508, 29915, 29873, 12522, 1259, 1283, 6284, 29889, 306, 1033, 505, 372, 599, 7743, 491, 9826, 565, 372, 29915, 29879, 5065, 5362, 29889, 13, 29933, 29901, 2193, 723, 367, 2107, 1738, 1317, 372, 19390, 29973, 13, 29909, 29901, 2803, 29915, 29879, 1074, 856, 306, 723, 1827, 1048, 9475, 6893, 17208, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 16549, 1900, 23994, 278, 529, 1529, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 5619, 17462, 292, 29892, 1122, 306, 2041, 297, 29973, 29871, 13, 29933, 29901, 16760, 297, 3113, 29889, 29871, 13, 29909, 29901, 7197, 6421, 29892, 8889, 29889, 2610, 306, 437, 596, 5716, 1286, 29973, 29871, 13, 29933, 29901, 1128, 1472, 674, 372, 2125, 29973, 29871, 13, 29909, 29901, 3575, 5716, 674, 367, 7960, 297, 4203, 385, 7234, 29889, 29871, 13, 29933, 29901, 5674, 29892, 723, 366, 3113, 2041, 1250, 529, 1529, 16033, 29958, 29973, 1334, 526, 304, 6493, 278, 23615, 29889, 29871, 13, 29909, 29901, 4587, 3236, 29892, 8889, 29889, 6975, 263, 1781, 2462, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 16549, 1900, 23994, 278, 529, 1529, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 2610, 306, 2041, 297, 29973, 13, 29933, 29901, 16760, 297, 29892, 3113, 29889, 13, 29909, 29901, 306, 29915, 29885, 7423, 304, 7458, 366, 29892, 541, 306, 29915, 29881, 763, 304, 2244, 746, 306, 674, 679, 263, 12020, 29889, 13, 29933, 29901, 512, 29871, 29941, 7378, 470, 577, 29889, 13, 29909, 29901, 887, 1497, 278, 1021, 2655, 529, 1529, 16033, 15513, 13, 29933, 29901, 7440, 306, 29973, 5674, 29892, 8763, 29892, 366, 674, 679, 596, 12020, 746, 278, 26504, 8665, 5839, 292, 701, 29889, 13, 29909, 29901, 887, 2099, 393, 306, 2113, 29915, 29873, 679, 263, 12020, 2745, 278, 337, 985, 291, 10614, 29973, 13, 29933, 29901, 3869, 29889, 13, 29909, 29901, 306, 2355, 278, 2643, 29889, 306, 29915, 29885, 439, 11407, 29889, 13, 29933, 29901, 405, 801, 29892, 1016, 29915, 29873, 367, 577, 5172, 29889, 1334, 763, 596, 664, 1244, 29892, 541, 445, 5001, 338, 373, 2898, 3064, 322, 306, 508, 29915, 29873, 367, 1361, 292, 714, 1153, 4637, 363, 5019, 29889, 13, 29909, 29901, 306, 29915, 345, 1063, 1244, 363, 29871, 29941, 2440, 29892, 322, 306, 7359, 29915, 29873, 750, 263, 12020, 297, 599, 393, 931, 29889, 960, 366, 763, 590, 664, 29892, 372, 881, 367, 25312, 297, 590, 5146, 29892, 322, 306, 4459, 372, 3508, 29915, 29873, 29889, 13, 29933, 29901, 306, 8293, 825, 366, 29915, 276, 5934, 29892, 322, 306, 6398, 727, 892, 1554, 306, 1033, 437, 29889, 13, 29909, 29901, 18064, 1532, 29892, 2050, 592, 7695, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 16549, 1900, 23994, 278, 529, 1529, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 960, 306, 2274, 278, 4958, 5149, 29892, 278, 3309, 310, 278, 8078, 723, 367, 697, 1629, 411, 263, 529, 1529, 16033, 29958, 2984, 29889, 1317, 393, 1959, 29973, 13, 29933, 29901, 1938, 366, 2099, 278, 8078, 363, 21083, 364, 13703, 470, 278, 697, 363, 6694, 29973, 13, 29909, 29901, 306, 471, 1090, 278, 17188, 393, 1716, 8078, 29879, 750, 278, 1021, 4958, 29889, 13, 29933, 29901, 3869, 322, 694, 29889, 2803, 592, 1074, 565, 306, 508, 15544, 393, 29889, 450, 4958, 526, 278, 1021, 5174, 393, 278, 8078, 363, 6694, 756, 263, 11845, 393, 6511, 363, 278, 508, 22603, 1156, 278, 937, 4832, 7378, 29889, 13, 29909, 29901, 6527, 366, 19430, 373, 393, 29973, 13, 29933, 29901, 18585, 29889, 1724, 306, 2099, 338, 393, 2845, 2625, 1033, 12611, 278, 6694, 8078, 1156, 278, 4832, 7378, 408, 1472, 408, 372, 29915, 29879, 297, 5007, 29889, 13, 29909, 29901, 2803, 592, 1074, 565, 306, 505, 393, 1492, 29889, 910, 8078, 338, 363, 4832, 7378, 310, 6694, 29892, 541, 565, 372, 3508, 29915, 29873, 12611, 839, 29892, 18172, 363, 1790, 4832, 7378, 29889, 1317, 393, 1492, 29973, 13, 29933, 29901, 3869, 29892, 393, 29915, 29879, 1492, 29889, 13, 29909, 29901, 20419, 29892, 393, 29915, 29879, 2821, 3307, 29889, 2803, 29915, 29879, 4337, 373, 304, 278, 916, 4958, 29889, 29871, 10604, 29901, 29871]] [[697, 4723], [13611, 1023, 7378], [1048, 29871, 29946, 29945, 6233], [25020, 6233]]
/data/home/Yuchen/anaconda3/envs/HF/lib/python3.8/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
Initial Loss: 13.646539688110352
start ij pos optimization
optimized
4 Loss: 10.62353515625
mania sechsVor Which phrase best fits the <MASK> span?


optimized
5 Loss: 8.06600284576416
mania sureVor Which phrase best fits the <MASK> span?


optimized
6 Loss: 7.5936384201049805
mania surepository Which phrase best fits the <MASK> span?


optimized
12 Loss: 7.0352630615234375
mania surepository Which phrase best fits the destinMASK> span?


optimized
13 Loss: 6.848450660705566
mania surepository Which phrase best fits the destineperSK> span?


14 Loss: 6.848450660705566
mania surepository Which phrase best fits the destineperSK> span?


Initial VF Loss: 3.028930425643921
start vf pos optimization
optimized
23 Loss: 2.7576935291290283
AndreadefinedLprev西

optimized
24 Loss: 2.6028621196746826
AndreaodioLprev西

25 Loss: 2.6028621196746826
AndreaodioLprev西

optimized
26 Loss: 2.4800524711608887
AndreaodioLdern西

optimized
27 Loss: 2.239053249359131
AndreaodioLdernlongrightarrow

1
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 20977, 1854, 7036, 8449, 16549, 1900, 23994, 278, 15422, 11356, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 3467, 264, 29892, 437, 366, 505, 263, 11015, 29973, 306, 29915, 29881, 763, 304, 2244, 366, 1048, 1554, 29889, 29871, 13, 29933, 29901, 18585, 29889, 1724, 338, 372, 29973, 29871, 13, 29909, 29901, 306, 1348, 366, 508, 2367, 592, 777, 9848, 29889, 3492, 505, 3796, 1244, 5520, 29892, 322, 306, 925, 864, 304, 1073, 825, 366, 1348, 29889, 29871, 13, 29933, 29901, 306, 29915, 29885, 10932, 304, 1371, 366, 29889, 1205, 825, 338, 372, 366, 864, 304, 2244, 1048, 29973, 29871, 13, 29909, 29901, 306, 626, 6365, 1255, 1048, 278, 11781, 445, 7250, 29889, 29871, 13, 29933, 29901, 3750, 29973, 306, 1348, 278, 11781, 3512, 1532, 29889, 29871, 13, 29909, 29901, 830, 635, 29973, 29871, 13, 29933, 29901, 3869, 29889, 1205, 825, 526, 366, 6365, 1255, 1048, 29973, 29871, 13, 29909, 29901, 306, 29915, 29885, 13421, 306, 471, 2086, 364, 1151, 29889, 29871, 13, 29933, 29901, 390, 1151, 29973, 887, 2949, 264, 29915, 29873, 364, 1151, 472, 599, 29892, 530, 2786, 29889, 3750, 437, 366, 1348, 366, 892, 364, 1151, 29973, 29871, 13, 29909, 29901, 5674, 29892, 306, 5505, 24867, 304, 3237, 29889, 4942, 398, 8315, 2086, 4153, 29889, 306, 2714, 306, 5505, 1497, 2086, 1568, 29889, 306, 1016, 29915, 29873, 864, 1075, 304, 367, 26230, 29889, 29871, 13, 29933, 29901, 306, 2274, 29889, 1205, 2289, 366, 2949, 264, 29915, 29873, 364, 1151, 472, 599, 29889, 3492, 1497, 825, 366, 2714, 29889, 306, 1348, 540, 5108, 1078, 393, 29889, 29871, 13, 29909, 29901, 830, 635, 29973, 29871, 13, 29933, 29901, 3869, 29889, 29871, 13, 29909, 29901, 1205, 306, 626, 716, 1244, 29892, 322, 306, 29915, 29885, 451, 1854, 540, 338, 1304, 304, 393, 29889, 29871, 13, 29933, 29901, 887, 2099, 1363, 366, 526, 263, 6114, 29973, 29871, 13, 29909, 29901, 3869, 29889, 1126, 540, 338, 278, 6673, 310, 278, 5001, 29889, 29871, 13, 29933, 29901, 2391, 264, 29892, 530, 2786, 29889, 887, 9273, 29915, 29873, 15982, 1048, 3237, 29889, 4942, 398, 8315, 29889, 3868, 338, 263, 1407, 1781, 767, 304, 664, 363, 29889, 940, 338, 451, 7916, 391, 472, 599, 29889, 3868, 5108, 1078, 2305, 363, 1009, 7014, 29889, 2855, 540, 338, 17762, 304, 2125, 10529, 515, 1757, 470, 5866, 29889, 29871, 13, 29909, 29901, 306, 626, 1407, 9796, 304, 8293, 393, 29892, 3467, 264, 29889, 3112, 29915, 29879, 1781, 304, 1073, 306, 29915, 29885, 1985, 297, 1316, 263, 5001, 29889, 29871, 13, 29933, 29901, 306, 8661, 411, 366, 373, 393, 29892, 530, 2786, 29889, 306, 29915, 345, 3796, 363, 360, 20400, 4942, 398, 8315, 363, 529, 1529, 16033, 29958, 1286, 29889, 306, 4459, 540, 5108, 1078, 670, 22873, 363, 1009, 664, 29892, 451, 1009, 23346, 29889, 306, 723, 2360, 1735, 17643, 29889, 29871, 13, 29909, 29901, 7197, 29889, 3374, 366, 363, 14509, 592, 445, 29889, 29871, 13, 29933, 29901, 3139, 931, 29889, 960, 366, 505, 263, 1781, 2969, 29892, 1016, 29915, 29873, 367, 13421, 304, 7726, 701, 29889, 4013, 338, 263, 5001, 393, 5108, 1078, 14511, 1230, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 20977, 1854, 7036, 8449, 16549, 1900, 23994, 278, 15422, 11356, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 7197, 7250, 29889, 1724, 2444, 304, 367, 278, 1108, 29973, 13, 29933, 29901, 7197, 7250, 29892, 11619, 29889, 306, 4459, 16403, 29889, 306, 29915, 29963, 29872, 7339, 263, 11220, 322, 306, 505, 263, 364, 1161, 1244, 373, 590, 18873, 29889, 306, 29915, 29885, 451, 8709, 292, 1532, 2845, 29889, 1724, 437, 366, 1348, 278, 1108, 1033, 367, 29973, 13, 29909, 29901, 306, 29915, 29881, 1827, 366, 29915, 29963, 29872, 1063, 1985, 2086, 2898, 470, 526, 1090, 22884, 363, 777, 2769, 29889, 6975, 366, 1063, 5622, 3099, 363, 596, 11220, 29973, 13, 29933, 29901, 3869, 29892, 306, 18093, 777, 26602, 472, 278, 8950, 391, 29915, 29879, 29889, 306, 29915, 29963, 29872, 1063, 5622, 372, 363, 529, 1529, 16033, 15513, 13, 29909, 29901, 7197, 29889, 306, 29915, 29885, 2675, 304, 2225, 29581, 1554, 23505, 29889, 739, 674, 1207, 366, 4459, 270, 5727, 29891, 29892, 577, 366, 8959, 881, 1791, 29889, 13, 29933, 29901, 9280, 29889, 306, 508, 21750, 304, 2125, 263, 2846, 3841, 1283, 664, 29889, 13, 29909, 29901, 6975, 366, 1063, 1985, 2898, 10325, 29973, 13, 29933, 29901, 3869, 29892, 306, 505, 29889, 306, 750, 304, 679, 263, 2060, 7743, 29889, 739, 29915, 29879, 2309, 1286, 29892, 577, 306, 508, 26681, 263, 2217, 29889, 13, 29909, 29901, 7197, 29889, 2803, 29915, 29879, 2125, 263, 1106, 472, 393, 364, 1161, 856, 372, 3430, 15029, 1135, 372, 338, 29889, 306, 29915, 29885, 2675, 304, 2225, 29581, 777, 288, 524, 358, 363, 372, 29889, 960, 278, 364, 1161, 1838, 29915, 29873, 2821, 701, 297, 263, 2846, 3841, 29892, 2041, 1250, 322, 1074, 592, 29889, 1938, 366, 505, 738, 916, 25828, 4835, 29973, 13, 29933, 29901, 306, 505, 263, 4319, 2343, 1829, 29892, 541, 856, 13, 29909, 29901, 3872, 29915, 29873, 15982, 1048, 393, 29889, 739, 29915, 29879, 3117, 310, 278, 22884, 366, 29915, 29963, 29872, 1063, 1090, 29889, 3387, 2125, 777, 7051, 381, 262, 29889, 422, 29890, 1312, 411, 278, 23505, 274, 820, 26602, 29892, 372, 674, 1207, 366, 4459, 1407, 23407, 29889, 887, 9273, 29915, 29873, 664, 470, 671, 738, 21083, 607, 6858, 26702, 29889, 960, 306, 892, 366, 29892, 306, 29915, 29881, 925, 8709, 29892, 1303, 263, 3143, 29892, 470, 6505, 5648, 29889, 2266, 338, 596, 2225, 3395, 29889, 13, 29933, 29901, 1834, 11619, 29889, 306, 29915, 645, 679, 1438, 7389, 29889, 7197, 26966, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 20977, 1854, 7036, 8449, 16549, 1900, 23994, 278, 15422, 11356, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 6527, 366, 3113, 4612, 363, 592, 529, 1529, 16033, 29958, 29973, 13, 29933, 29901, 18585, 29889, 3139, 2702, 2769, 306, 881, 1073, 1048, 297, 1206, 2305, 2244, 988, 366, 526, 29889, 13, 29909, 29901, 306, 505, 304, 1074, 278, 12042, 391, 29889, 1334, 505, 385, 28573, 363, 445, 7250, 515, 29871, 29929, 304, 29871, 29896, 29896, 288, 29915, 13058, 29889, 1105, 565, 727, 338, 738, 9008, 1246, 29892, 3113, 5839, 701, 363, 592, 29889, 960, 727, 338, 1554, 5065, 5362, 29892, 2649, 963, 306, 674, 367, 1250, 297, 1023, 6199, 29889, 13, 29933, 29901, 1939, 1108, 29889, 7197, 9885, 29889, 13, 29909, 29901, 3869, 29892, 306, 674, 817, 372, 29889, 1834, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 20977, 1854, 7036, 8449, 16549, 1900, 23994, 278, 15422, 11356, 16033, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1222, 29883, 1509, 592, 29889, 12703, 306, 1074, 278, 8455, 310, 596, 3787, 29973, 29871, 13, 29933, 29901, 306, 626, 278, 8455, 29889, 6028, 306, 1371, 366, 29973, 29871, 13, 29909, 29901, 6439, 29892, 2107, 29892, 306, 4446, 263, 4982, 594, 5377, 596, 3787, 29889, 306, 626, 8852, 297, 278, 4982, 18811, 3368, 29889, 306, 626, 6421, 304, 1074, 565, 727, 338, 738, 15130, 3625, 363, 592, 29889, 29871, 13, 29933, 29901, 2178, 1492, 29889, 26772, 263, 12949, 29892, 3113, 29889, 29956, 483, 366, 763, 304, 367, 263, 18296, 20255, 470, 263, 274, 1161, 631, 29973, 29871, 13, 29909, 29901, 306, 508, 437, 278, 664, 310, 18296, 20255, 322, 306, 3796, 760, 931, 297, 263, 2319, 14311, 3787, 2645, 590, 11801, 7931, 362, 1833, 1629, 29889, 29871, 13, 29933, 29901, 1105, 1286, 437, 366, 864, 263, 2989, 29899, 2230, 4982, 470, 760, 29899, 2230, 4982, 29973, 29871, 13, 29909, 29901, 2180, 2198, 29892, 1716, 526, 9280, 363, 592, 29889, 5618, 437, 366, 817, 1556, 29892, 769, 29973, 29871, 13, 29933, 29901, 2567, 591, 2289, 817, 777, 760, 29899, 2230, 17162, 29889, 3492, 1074, 29892, 1749, 2989, 29899, 2230, 13925, 18232, 29879, 1283, 472, 529, 1529, 16033, 10202, 541, 1286, 591, 4966, 304, 10985, 278, 6199, 304, 9475, 26354, 29889, 4806, 817, 777, 760, 29899, 2230, 18296, 6985, 1934, 304, 664, 29871, 29941, 6199, 263, 2462, 515, 5320, 26354, 304, 9475, 26354, 29889, 6246, 306, 626, 451, 1854, 565, 366, 526, 18698, 363, 278, 4982, 29889, 23036, 1556, 310, 1749, 20330, 526, 9117, 29892, 5100, 663, 310, 1781, 12084, 297, 4223, 338, 5181, 1244, 29889, 29871, 13, 29909, 29901, 306, 1348, 306, 508, 29889, 306, 505, 1063, 6509, 4223, 363, 4359, 29871, 29945, 2440, 322, 7148, 306, 626, 1652, 8122, 472, 13590, 4223, 29889, 17351, 29892, 306, 505, 1754, 777, 9117, 414, 7875, 2645, 278, 7271, 310, 6509, 4223, 29889, 29871, 13, 29933, 29901, 2193, 338, 2691, 29889, 306, 1348, 366, 505, 278, 4021, 8232, 4312, 363, 278, 4982, 29892, 577, 306, 674, 1235, 366, 505, 278, 4982, 29889, 25125, 278, 664, 20410, 14726, 366, 29973, 29871, 13, 29909, 29901, 739, 3755, 480, 1169, 592, 29889, 306, 626, 3889, 297, 278, 11005, 1438, 3841, 29892, 306, 674, 505, 694, 14656, 6257, 472, 5320, 26354, 29889, 29871, 13, 29933, 29901, 7197, 29889, 8439, 338, 871, 2655, 304, 367, 17141, 29889, 29911, 264, 390, 8979, 385, 7234, 338, 278, 7472, 591, 508, 5146, 366, 29889, 3624, 278, 6554, 310, 5146, 22691, 304, 366, 29973, 29871, 13, 29909, 29901, 739, 2444, 15590, 29889, 2059, 278, 982, 29892, 306, 508, 679, 590, 2326, 1076, 10425, 411, 263, 15129, 4180, 29892, 508, 29915, 29873, 306, 29973, 29871, 13, 29933, 29901, 18585, 29889, 3492, 674, 679, 901, 565, 366, 508, 2437, 568, 901, 20330, 411, 596, 1781, 2669, 29889, 29871, 13, 29909, 29901, 306, 1074, 29889, 306, 674, 1018, 590, 1900, 304, 437, 278, 4982, 1532, 29889, 29871, 13, 29933, 29901, 2193, 338, 1781, 310, 366, 304, 1827, 577, 29889, 10401, 508, 366, 1369, 1985, 29973, 29871, 13, 29909, 29901, 1128, 1048, 2446, 7398, 388, 29973, 29871, 13, 29933, 29901, 3674, 29889, 12024, 29915, 29879, 1207, 338, 2446, 27822, 29889, 306, 302, 278, 1095, 29892, 366, 817, 304, 5445, 714, 278, 2280, 883, 29889, 29871, 13, 29909, 29901, 3374, 366, 363, 596, 2924, 2264, 29892, 611, 29915, 314, 29889, 2823, 366, 2446, 27822, 29889, 29871, 29871, 10604, 29901, 29871]] [[29871, 29953, 29900, 2440, 2030], [17680, 2440], [2211, 3841, 8020], [29871, 29896, 29906, 7234, 29871]]
Initial Loss: 11.345780372619629
start ij pos optimization
optimized
4 Loss: 8.878263473510742
Brook surepository Which phrase best fits the destineperSK> span?


5 Loss: 8.878263473510742
Brook surepository Which phrase best fits the destineperSK> span?


optimized
6 Loss: 8.155614852905273
Brook surevoy Which phrase best fits the destineperSK> span?


12 Loss: 8.155614852905273
Brook surevoy Which phrase best fits the destineperSK> span?


13 Loss: 8.155614852905273
Brook surevoy Which phrase best fits the destineperSK> span?


optimized
14 Loss: 7.710582733154297
Brook surevoy Which phrase best fits the destineperACE> span?


Initial VF Loss: 2.484086036682129
start vf pos optimization
optimized
23 Loss: 2.0736207962036133
NYodioLdernlongrightarrow

optimized
24 Loss: 1.8105143308639526
NY KevinLdernlongrightarrow

optimized
25 Loss: 1.6373547315597534
NY Kevin Viendernlongrightarrow

optimized
26 Loss: 1.6104426383972168
NY Kevin Vien Centrolongrightarrow

optimized
27 Loss: 1.4537581205368042
NY Kevin Vien Centro Berg

2
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 18737, 1854, 18644, 8449, 16549, 1900, 23994, 278, 15422, 11356, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1724, 892, 366, 322, 6123, 9963, 1048, 8859, 29973, 739, 5148, 17818, 344, 29889, 29871, 13, 29933, 29901, 15011, 29892, 6123, 1497, 1554, 304, 592, 393, 306, 3282, 29915, 29873, 11188, 29889, 29871, 13, 29909, 29901, 6439, 29892, 694, 29889, 306, 1073, 920, 1663, 575, 3321, 540, 508, 367, 29889, 1724, 756, 540, 2309, 1286, 29973, 29871, 13, 29933, 29901, 940, 4433, 592, 920, 1472, 372, 3614, 592, 304, 5110, 4223, 29889, 29871, 13, 29909, 29901, 1205, 29892, 366, 892, 6345, 322, 10425, 297, 8046, 1738, 29871, 13, 29933, 29901, 15011, 29892, 541, 306, 679, 393, 6041, 29889, 739, 1838, 29915, 29873, 4383, 920, 1784, 1176, 800, 590, 3942, 756, 10600, 297, 278, 501, 29889, 317, 1696, 591, 29915, 645, 2337, 367, 9117, 414, 297, 1009, 5076, 29889, 29871, 13, 29909, 29901, 1724, 263, 11021, 391, 1738, 1128, 508, 366, 2317, 1985, 411, 278, 1410, 29891, 29973, 29871, 13, 29933, 29901, 887, 1073, 29892, 6123, 3508, 29915, 29873, 1316, 263, 4319, 1410, 29891, 29889, 940, 1754, 278, 3440, 714, 310, 16245, 749, 29892, 451, 4439, 625, 29889, 29871, 13, 29909, 29901, 1105, 29892, 825, 1258, 366, 1827, 746, 540, 4433, 366, 920, 1472, 372, 3614, 366, 304, 5110, 4223, 29973, 29871, 13, 29933, 29901, 306, 5429, 1075, 29871, 29906, 29947, 2440, 29889, 1126, 29892, 540, 9906, 306, 29915, 29885, 29871, 29906, 29947, 2440, 2030, 1951, 306, 925, 26301, 590, 12060, 3250, 1833, 4723, 29889, 940, 471, 20285, 839, 363, 263, 11015, 29892, 322, 769, 540, 2355, 372, 29889, 29871, 13, 29909, 29901, 4683, 366, 1854, 540, 2289, 2355, 278, 2643, 29973, 29871, 13, 29933, 29901, 15011, 29892, 306, 29915, 29885, 5051, 1854, 1951, 306, 769, 4433, 1075, 920, 1472, 372, 3614, 1075, 304, 5110, 4223, 29889, 29871, 13, 29909, 29901, 2193, 29915, 29879, 298, 309, 1306, 681, 1738, 1724, 1258, 540, 1827, 29973, 29871, 13, 29933, 29901, 940, 1497, 29892, 529, 1529, 16033, 29958, 5501, 392, 591, 1716, 19090, 1048, 372, 29889, 940, 27746, 1891, 322, 1286, 29892, 372, 29915, 29879, 599, 1781, 29889, 29871, 13, 29909, 29901, 306, 29915, 29885, 10932, 29889, 306, 1010, 540, 2113, 29915, 29873, 1207, 393, 10171, 1449, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18737, 1854, 18644, 8449, 16549, 1900, 23994, 278, 15422, 11356, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 15043, 29892, 445, 338, 5845, 515, 1060, 29979, 29999, 6938, 29889, 306, 723, 763, 304, 5353, 411, 366, 1048, 263, 716, 2060, 777, 931, 2446, 4723, 29889, 1938, 366, 505, 931, 304, 5870, 29973, 13, 29933, 29901, 5674, 29892, 306, 626, 451, 1854, 29889, 365, 1691, 592, 1423, 590, 946, 8395, 13, 29909, 29901, 3674, 29889, 13, 29933, 29901, 306, 626, 3889, 373, 323, 1041, 3250, 17724, 529, 1529, 16033, 10202, 338, 372, 19192, 363, 366, 29973, 13, 29909, 29901, 739, 338, 3431, 411, 592, 29889, 1105, 306, 674, 367, 6974, 292, 472, 596, 8034, 2820, 1023, 25020, 11278, 29889, 13, 29933, 29901, 3869, 29892, 727, 338, 29889, 2823, 366, 769, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18737, 1854, 18644, 8449, 16549, 1900, 23994, 278, 15422, 11356, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1815, 366, 7751, 445, 9853, 310, 20118, 880, 2629, 5320, 470, 4832, 11405, 29973, 29871, 13, 29933, 29901, 1724, 2924, 310, 274, 1501, 787, 526, 896, 29973, 2610, 306, 1074, 596, 1051, 29973, 9070, 29892, 4933, 14677, 29889, 29871, 13, 29909, 29901, 3869, 29892, 14364, 14677, 29889, 1670, 526, 263, 2846, 8656, 408, 1532, 29889, 2266, 896, 526, 29889, 29871, 13, 29933, 29901, 306, 1074, 29889, 1126, 278, 26855, 29889, 29871, 13, 29909, 29901, 29871, 29906, 29900, 29900, 9679, 29879, 310, 1269, 29889, 8561, 372, 29871, 29906, 29900, 29900, 9679, 29879, 363, 1269, 4559, 29889, 29871, 13, 29933, 29901, 1128, 1784, 9679, 29879, 19148, 29973, 29871, 13, 29909, 29901, 8168, 6478, 14677, 322, 5320, 8656, 29889, 2193, 3732, 29871, 29945, 29892, 29900, 29900, 29900, 9679, 29879, 297, 599, 29889, 29871, 13, 29933, 29901, 18372, 11405, 29892, 1258, 366, 1827, 29973, 29871, 13, 29909, 29901, 3869, 29892, 5320, 304, 529, 1529, 16033, 15513, 29871, 13, 29933, 29901, 1334, 1033, 10933, 278, 8656, 9679, 29879, 297, 4832, 11405, 29889, 450, 14677, 1795, 367, 1925, 1283, 304, 9475, 11405, 29889, 29871, 13, 29909, 29901, 382, 523, 11405, 29973, 1334, 508, 4480, 393, 1472, 29889, 29871, 13, 29933, 29901, 2193, 29915, 29879, 278, 1900, 591, 508, 437, 925, 1286, 29892, 306, 29915, 29885, 13421, 29889, 29871, 13, 29909, 29901, 1815, 29915, 29873, 366, 1207, 372, 9881, 11405, 363, 278, 14677, 29973, 29871, 13, 29933, 29901, 1724, 1048, 5622, 278, 14677, 297, 1023, 7751, 1860, 29973, 7803, 10405, 9679, 29879, 297, 9881, 11405, 29892, 322, 278, 9488, 263, 4723, 2678, 29889, 29871, 13, 29909, 29901, 2193, 1795, 367, 22691, 29889, 306, 4091, 505, 304, 21387, 1749, 1522, 823, 292, 8034, 304, 679, 1009, 2134, 791, 29889, 887, 508, 11630, 11421, 297, 278, 931, 366, 29915, 345, 2183, 592, 29892, 306, 7755, 29889, 29871, 13, 29933, 29901, 3869, 29892, 306, 29915, 645, 1074, 393, 366, 679, 1906, 28289, 29889, 1383, 17347, 491, 29915, 29903, 29889, 317, 29889, 3082, 29915, 294, 9670, 29892, 338, 393, 599, 1492, 29973, 29871, 13, 29909, 29901, 2193, 29915, 29879, 1492, 29889, 29871, 13, 29933, 29901, 1932, 508, 591, 2149, 596, 9659, 362, 310, 278, 1797, 29973, 29871, 13, 29909, 29901, 1094, 4720, 408, 306, 8293, 515, 1522, 823, 292, 29892, 393, 674, 367, 2845, 28728, 470, 24211, 29889, 29871, 13, 29933, 29901, 2178, 1492, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18737, 1854, 18644, 8449, 16549, 1900, 23994, 278, 15422, 11356, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 1334, 29915, 345, 1063, 2181, 314, 4056, 363, 6454, 22396, 29915, 29879, 4955, 4392, 1951, 4688, 445, 7250, 29889, 1724, 437, 366, 1827, 591, 2125, 263, 2867, 322, 11621, 304, 777, 4696, 29892, 20759, 29973, 13, 29933, 29901, 2567, 393, 366, 3585, 372, 29892, 306, 29915, 29885, 2805, 263, 2217, 289, 21571, 29899, 449, 515, 23382, 1661, 9847, 29892, 2086, 29889, 2391, 8333, 304, 777, 4696, 363, 263, 1550, 723, 14726, 592, 925, 2691, 29889, 13, 29909, 29901, 5806, 366, 29915, 276, 5839, 292, 714, 263, 2407, 304, 1708, 29892, 306, 29915, 645, 17229, 263, 7303, 310, 367, 414, 714, 310, 278, 337, 1341, 4087, 1061, 29889, 13, 29933, 29901, 887, 1854, 505, 263, 3287, 310, 2313, 29879, 1244, 29889, 13, 29909, 29901, 15011, 29892, 306, 29915, 345, 2355, 4129, 515, 7679, 302, 29915, 1245, 304, 278, 9281, 716, 448, 10742, 6433, 29889, 13, 29933, 29901, 1763, 2649, 366, 278, 8760, 29892, 306, 29915, 29885, 18719, 964, 14499, 4696, 29889, 887, 1016, 29915, 29873, 3799, 304, 505, 738, 13620, 470, 18129, 442, 29892, 437, 366, 29973, 13, 29909, 29901, 8221, 29892, 590, 21779, 297, 4696, 1838, 29915, 29873, 748, 1250, 738, 4340, 1135, 278, 529, 1529, 16033, 16299, 29879, 29889, 6125, 3971, 1434, 769, 338, 925, 4955, 304, 592, 29889, 13, 29933, 29901, 5674, 29892, 13590, 310, 4955, 29892, 1235, 29915, 29879, 679, 1250, 304, 278, 8277, 29889, 4806, 29915, 29963, 29872, 2355, 385, 4392, 6454, 22396, 29892, 6456, 29973, 29871, 10604, 29901, 29871]] [[2211, 2440], [2211, 3841], [3006, 13862], [3023, 304, 4832, 11405]]
Initial Loss: 7.25496244430542
start ij pos optimization
optimized
4 Loss: 4.6135454177856445
Zh surevoy Which phrase best fits the destineperACE> span?


5 Loss: 4.6135454177856445
Zh surevoy Which phrase best fits the destineperACE> span?


6 Loss: 4.6135454177856445
Zh surevoy Which phrase best fits the destineperACE> span?


optimized
12 Loss: 4.6089396476745605
Zh surevoy Which phrase best fits the transformationseperACE> span?


optimized
13 Loss: 4.590047359466553
Zh surevoy Which phrase best fits the transformationsrongACE> span?


14 Loss: 4.590047359466553
Zh surevoy Which phrase best fits the transformationsrongACE> span?


Initial VF Loss: 1.983289361000061
start vf pos optimization
optimized
23 Loss: 1.7201337814331055
Db Kevin Vien Centro Berg

optimized
24 Loss: 1.7021559476852417
Db Larry Vien Centro Berg

optimized
25 Loss: 1.4653769731521606
Db Larry Chinese Centro Berg

optimized
26 Loss: 1.3649598360061646
Db Larry Chinese Syst Berg

optimized
27 Loss: 1.176137089729309
Db Larry Chinese Syst Jones

3
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 27134, 1854, 18644, 8449, 16549, 1900, 23994, 278, 29304, 29373, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 7197, 17724, 29892, 3237, 341, 996, 1738, 739, 29915, 29879, 7575, 304, 1074, 366, 9826, 29889, 739, 29915, 29879, 1063, 263, 1550, 29892, 22602, 29915, 29873, 372, 29973, 29871, 13, 29933, 29901, 15043, 29892, 341, 29653, 349, 292, 29889, 3869, 29892, 372, 756, 29889, 306, 29915, 345, 1063, 297, 5701, 4749, 10387, 423, 363, 529, 1529, 16033, 29958, 373, 5381, 29889, 306, 1258, 505, 263, 2217, 931, 304, 26681, 297, 11668, 1794, 29892, 2466, 29889, 29871, 13, 29909, 29901, 306, 8829, 29891, 366, 29892, 3237, 341, 996, 1738, 1724, 508, 306, 437, 363, 366, 9826, 29973, 29871, 13, 29933, 29901, 306, 817, 304, 2779, 263, 19179, 1090, 590, 365, 847, 315, 29889, 2216, 278, 2030, 697, 29892, 278, 716, 697, 590, 4007, 22137, 2996, 297, 322, 316, 1997, 411, 1833, 4723, 29889, 29871, 13, 29909, 29901, 10428, 29889, 1938, 366, 505, 278, 775, 363, 393, 697, 29973, 29871, 13, 29933, 29901, 739, 29915, 29879, 360, 29954, 29896, 29929, 29941, 29946, 29946, 29945, 29955, 29947, 29906, 29896, 29900, 29900, 29889, 1815, 366, 1284, 372, 29973, 29871, 13, 29909, 29901, 2266, 372, 338, 29889, 6975, 366, 2355, 278, 9848, 269, 3466, 411, 366, 29973, 887, 505, 8002, 29199, 297, 278, 3633, 29892, 577, 591, 508, 748, 14432, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 1854, 18644, 8449, 16549, 1900, 23994, 278, 29304, 29373, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 7197, 7250, 29892, 21776, 29889, 1128, 1258, 366, 8709, 29973, 29871, 13, 29933, 29901, 4721, 4349, 1532, 29892, 3969, 29889, 12074, 11223, 278, 9545, 310, 22588, 11755, 263, 2586, 29892, 541, 1833, 4646, 306, 2355, 472, 454, 559, 529, 1529, 16033, 29958, 310, 1791, 29889, 29871, 13, 29909, 29901, 7027, 1738, 1105, 29892, 526, 366, 7960, 363, 263, 2989, 2462, 310, 17394, 3262, 29973, 29871, 13, 29933, 29901, 612, 1022, 29889, 2803, 29915, 29879, 437, 372, 29889, 306, 29915, 29885, 5051, 24173, 1738, 29871, 13, 29909, 29901, 306, 1073, 263, 2058, 393, 881, 367, 4922, 29889, 739, 29915, 29879, 2000, 278, 7551, 20702, 3527, 17550, 3262, 7817, 322, 372, 29915, 29879, 5051, 1568, 763, 385, 3082, 286, 497, 448, 5174, 411, 901, 12875, 29889, 887, 508, 1584, 15649, 263, 5735, 521, 21475, 727, 565, 366, 864, 29889, 29871, 13, 29933, 29901, 10782, 521, 21475, 29973, 1834, 29892, 541, 694, 3969, 29889, 1105, 856, 2649, 592, 1048, 289, 1191, 17225, 29889, 1128, 508, 306, 437, 372, 763, 263, 1887, 29973, 29871, 13, 29909, 29901, 5674, 29889, 306, 29915, 645, 367, 15993, 322, 1827, 366, 29915, 645, 2360, 367, 408, 1781, 472, 289, 1191, 17225, 408, 263, 1887, 2022, 29889, 887, 29915, 276, 263, 9117, 261, 322, 278, 19417, 414, 508, 1074, 393, 29889, 1205, 856, 565, 366, 29915, 276, 15040, 29892, 366, 508, 679, 289, 1191, 2708, 393, 526, 451, 2086, 2215, 3448, 515, 278, 1887, 8666, 29889, 29871, 13, 29933, 29901, 315, 1507, 1738, 1920, 496, 592, 1738, 29871, 13, 29909, 29901, 1152, 5810, 2153, 29892, 366, 864, 304, 437, 263, 3287, 310, 885, 449, 292, 937, 29889, 887, 29915, 345, 2355, 304, 1073, 825, 2712, 3438, 29889, 29871, 13, 29933, 29901, 3834, 650, 5429, 592, 304, 748, 304, 263, 29703, 3787, 322, 1074, 920, 1568, 263, 4964, 13748, 470, 263, 260, 4003, 310, 304, 720, 16179, 21544, 29889, 450, 2969, 338, 393, 491, 17420, 278, 26094, 310, 1906, 4452, 29892, 366, 508, 4377, 714, 278, 6198, 26094, 310, 4129, 1683, 29889, 29871, 13, 29909, 29901, 2193, 1033, 367, 8444, 29889, 1205, 746, 366, 748, 964, 263, 17394, 3262, 4818, 856, 26094, 4953, 1407, 25706, 29889, 887, 505, 304, 367, 2221, 304, 1303, 278, 9999, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 1854, 18644, 8449, 16549, 1900, 23994, 278, 29304, 29373, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 3237, 29889, 5322, 29892, 306, 4459, 393, 591, 505, 750, 263, 1407, 21246, 5193, 29889, 29871, 13, 29933, 29901, 306, 1348, 577, 2086, 29892, 322, 366, 505, 263, 2498, 8004, 310, 278, 5001, 1286, 29889, 29871, 13, 29909, 29901, 3869, 29892, 596, 5001, 338, 263, 4802, 697, 297, 278, 1746, 322, 756, 2107, 7037, 29889, 29871, 13, 29933, 29901, 1724, 1683, 437, 366, 864, 304, 1073, 29973, 29871, 13, 29909, 29901, 306, 864, 304, 1073, 1048, 278, 4497, 653, 2472, 297, 596, 5001, 29889, 29871, 13, 29933, 29901, 1987, 29892, 920, 1568, 437, 366, 6398, 304, 367, 12530, 1269, 4098, 29973, 29871, 13, 29909, 29901, 306, 4966, 590, 6257, 4497, 653, 674, 367, 29871, 29941, 29892, 29900, 29900, 29900, 343, 12323, 263, 4098, 565, 306, 4953, 263, 11595, 15645, 29889, 29871, 13, 29933, 29901, 1334, 674, 2367, 366, 901, 1135, 825, 366, 4966, 29889, 29871, 13, 29909, 29901, 830, 635, 29973, 2193, 29915, 29879, 1781, 9763, 363, 592, 29889, 29871, 13, 29933, 29901, 887, 674, 505, 263, 529, 1529, 16033, 29958, 2836, 3527, 1156, 366, 3896, 1749, 5001, 29889, 7133, 445, 3785, 366, 508, 679, 29871, 29906, 29892, 29945, 29900, 29900, 343, 12323, 263, 4098, 29892, 322, 1156, 393, 366, 508, 679, 29871, 29941, 29892, 29945, 29900, 29900, 343, 12323, 639, 4098, 29889, 29871, 13, 29909, 29901, 739, 10083, 2107, 1738, 29871, 13, 29933, 29901, 887, 508, 884, 679, 263, 28920, 472, 278, 1095, 310, 278, 1629, 29892, 322, 565, 366, 508, 3013, 1985, 297, 278, 5001, 29892, 596, 4497, 653, 674, 679, 263, 12020, 1432, 1629, 29889, 29871, 13, 29909, 29901, 2648, 278, 982, 29892, 920, 1784, 3841, 437, 591, 664, 1432, 4723, 29973, 29871, 13, 29933, 29901, 22853, 3841, 1432, 4723, 29892, 541, 565, 372, 338, 5181, 29892, 366, 817, 304, 664, 975, 2230, 2748, 297, 263, 1550, 29871, 13, 29909, 29901, 9280, 29892, 306, 1074, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 1854, 18644, 8449, 16549, 1900, 23994, 278, 29304, 29373, 11538, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 15043, 29892, 445, 338, 5845, 515, 1060, 29979, 29999, 6938, 29889, 306, 723, 763, 304, 5353, 411, 366, 1048, 263, 716, 2060, 777, 931, 2446, 4723, 29889, 1938, 366, 505, 931, 304, 5870, 29973, 13, 29933, 29901, 5674, 29892, 306, 626, 451, 1854, 29889, 365, 1691, 592, 1423, 590, 946, 8395, 13, 29909, 29901, 3674, 29889, 13, 29933, 29901, 306, 626, 3889, 373, 323, 1041, 3250, 17724, 529, 1529, 16033, 10202, 338, 372, 19192, 363, 366, 29973, 13, 29909, 29901, 739, 338, 3431, 411, 592, 29889, 1105, 306, 674, 367, 6974, 292, 472, 596, 8034, 2820, 29871, 29906, 25020, 11278, 29889, 1938, 366, 505, 263, 2060, 272, 297, 596, 5716, 29973, 306, 723, 763, 304, 1510, 366, 777, 4475, 24469, 13, 29933, 29901, 3869, 29892, 727, 338, 29889, 2823, 366, 769, 29889, 29871, 10604, 29901, 29871]] [[2211, 2440], [697, 1629], [1023, 7378], [29871, 29906, 29900, 29900, 29953]]
Initial Loss: 4.442987442016602
start ij pos optimization
4 Loss: 4.442987442016602
Zh surevoy Which phrase best fits the transformationsrongACE> span?


optimized
5 Loss: 4.029253005981445
ZhMarievoy Which phrase best fits the transformationsrongACE> span?


6 Loss: 4.029253005981445
ZhMarievoy Which phrase best fits the transformationsrongACE> span?


optimized
12 Loss: 3.9918339252471924
ZhMarievoy Which phrase best fits the TulrongACE> span?


optimized
13 Loss: 3.989668846130371
ZhMarievoy Which phrase best fits the Tul ZweACE> span?


optimized
14 Loss: 3.9296085834503174
ZhMarievoy Which phrase best fits the Tul Zwe zog> span?


Initial VF Loss: 0.7937569618225098
start vf pos optimization
optimized
23 Loss: 0.7442953586578369
Bd Larry Chinese Syst Jones

optimized
24 Loss: 0.7052855491638184
Bdmez Chinese Syst Jones

25 Loss: 0.7052855491638184
Bdmez Chinese Syst Jones

optimized
26 Loss: 0.6861057877540588
Bdmez Chinese Admin Jones

27 Loss: 0.6861057877540588
Bdmez Chinese Admin Jones

4
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 27415, 9647, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 5674, 29892, 4129, 338, 4870, 287, 322, 7960, 304, 748, 29889, 13, 29933, 29901, 739, 29915, 29879, 2898, 304, 4658, 393, 591, 29915, 276, 2289, 10124, 29889, 529, 1529, 16033, 29958, 471, 763, 263, 12561, 29889, 13, 29909, 29901, 3869, 29889, 3387, 1348, 278, 7254, 14744, 29892, 6575, 845, 457, 29892, 13394, 29899, 13405, 292, 9687, 29892, 21726, 29899, 1025, 4320, 793, 448, 448, 13, 29933, 29901, 1126, 278, 2305, 892, 577, 19780, 1738, 13, 29909, 29901, 15011, 29892, 591, 723, 505, 1063, 5714, 1728, 278, 1371, 310, 278, 1180, 1338, 29889, 13, 29933, 29901, 1938, 366, 1603, 6456, 278, 2319, 27144, 472, 278, 11155, 310, 278, 11952, 29973, 13, 29909, 29901, 4587, 3236, 29889, 2193, 471, 278, 1900, 4940, 29874, 306, 29915, 345, 3926, 750, 29889, 13, 29933, 29901, 306, 263, 371, 577, 1568, 393, 306, 9007, 29915, 29873, 9074, 14793, 2745, 17724, 278, 2446, 2462, 29889, 13, 29909, 29901, 960, 871, 591, 1033, 17545, 727, 2748, 901, 1738, 13, 29933, 29901, 7198, 591, 508, 2041, 1244, 1449, 2446, 11801, 29889, 13, 29909, 29901, 7963, 278, 27144, 338, 1603, 727, 29889, 13, 29933, 29901, 18637, 29892, 825, 29915, 29879, 278, 931, 29973, 13, 29909, 29901, 6439, 29892, 590, 7339, 1738, 9333, 1023, 6199, 2175, 1434, 278, 10694, 4893, 1283, 29889, 1334, 817, 304, 367, 472, 278, 4799, 637, 1286, 29889, 13, 29933, 29901, 3872, 29915, 29873, 15982, 29889, 1334, 508, 1246, 263, 7776, 29889, 739, 29915, 645, 367, 394, 1266, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 27415, 9647, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 18637, 29892, 8818, 29875, 29889, 29871, 13, 29933, 29901, 6804, 304, 29892, 8889, 29973, 29871, 13, 29909, 29901, 1522, 823, 292, 9538, 29889, 29871, 13, 29933, 29901, 20727, 297, 29892, 3113, 29889, 29871, 13, 29909, 29901, 1317, 372, 263, 1472, 22203, 304, 1522, 823, 292, 9538, 29973, 29871, 13, 29933, 29901, 739, 674, 2125, 529, 1529, 16033, 29958, 1363, 372, 338, 278, 364, 1878, 7234, 29889, 29871, 13, 29909, 29901, 498, 13163, 6233, 29892, 393, 674, 367, 599, 1492, 29889, 1670, 526, 1603, 19044, 6233, 304, 748, 1434, 278, 3489, 338, 1722, 29889, 7419, 29892, 825, 526, 896, 2599, 373, 278, 6862, 29973, 29871, 13, 29933, 29901, 739, 338, 385, 29130, 310, 10013, 432, 3076, 29889, 739, 338, 4934, 1269, 1629, 29889, 319, 7575, 4333, 432, 3076, 310, 526, 373, 2479, 322, 5239, 29889, 29871, 13, 29909, 29901, 317, 3885, 2107, 1738, 1815, 366, 5040, 9051, 1244, 363, 263, 11015, 29973, 306, 674, 679, 777, 3669, 854, 12935, 363, 590, 7875, 29889, 29871, 13, 29933, 29901, 1939, 1108, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 27415, 9647, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 1334, 29915, 345, 1063, 10534, 1244, 363, 8886, 3006, 6233, 1286, 29892, 322, 727, 1603, 3508, 29915, 29873, 263, 3593, 297, 11126, 29889, 13, 29933, 29901, 306, 29915, 29885, 13421, 591, 29915, 645, 367, 5683, 363, 278, 6263, 29889, 13, 29909, 29901, 6975, 366, 2355, 278, 931, 29892, 4335, 29973, 13, 29933, 29901, 3869, 29892, 590, 6505, 4083, 263, 12616, 304, 9881, 29889, 541, 727, 338, 1554, 2743, 411, 590, 6505, 1738, 13, 29909, 29901, 1205, 366, 18093, 372, 871, 1833, 4098, 29889, 13, 29933, 29901, 3869, 29892, 541, 3926, 1951, 306, 18093, 372, 29892, 372, 330, 2708, 1048, 5320, 6233, 263, 2462, 29892, 577, 306, 29915, 29963, 29872, 2355, 304, 505, 372, 1634, 29874, 2859, 29889, 13, 29909, 29901, 1128, 1472, 674, 372, 2125, 502, 304, 679, 727, 29973, 13, 29933, 29901, 306, 1348, 529, 1529, 16033, 29958, 491, 3593, 29889, 13, 29909, 29901, 739, 29915, 29879, 451, 2215, 3448, 29892, 769, 29889, 2803, 29915, 29879, 6686, 29892, 372, 29915, 29879, 6763, 304, 17251, 29889, 13, 29933, 29901, 20340, 1738, 306, 1348, 306, 1074, 263, 3593, 6421, 1286, 29889, 2803, 29915, 29879, 4966, 372, 29915, 29879, 278, 1939, 29889, 29871, 29906, 29906, 3593, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 27415, 9647, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 15733, 29892, 437, 366, 1073, 920, 304, 7726, 4223, 29973, 29871, 13, 29933, 29901, 3869, 29889, 29871, 13, 29909, 29901, 6804, 1258, 366, 5110, 29973, 29871, 13, 29933, 29901, 306, 10972, 297, 12755, 29889, 29871, 13, 29909, 29901, 887, 7726, 2289, 1532, 29889, 29871, 13, 29933, 29901, 3374, 366, 29889, 29871, 13, 29909, 29901, 1128, 1472, 505, 366, 1063, 297, 278, 501, 29889, 317, 29889, 29973, 29871, 13, 29933, 29901, 529, 1529, 16033, 15513, 29871, 13, 29909, 29901, 1317, 596, 6532, 411, 366, 29973, 29871, 13, 29933, 29901, 3869, 29892, 1183, 925, 2355, 1244, 22600, 29889, 29871, 13, 29909, 29901, 6975, 366, 1063, 304, 8046, 1434, 29973, 29871, 13, 29933, 29901, 1939, 29889, 306, 29915, 345, 2360, 1063, 727, 29889, 29871, 13, 29909, 29901, 6975, 366, 3926, 1063, 304, 7413, 17236, 294, 29973, 29871, 13, 29933, 29901, 3869, 29889, 306, 3512, 727, 2748, 373, 263, 5381, 17487, 29889, 29871, 29871, 10604, 29901, 29871]] [[3006, 6233], [1432, 1023, 11405], [29871, 29896, 29900, 2440], [1432, 29871, 29906, 29900, 286, 1144]]
Initial Loss: 6.067335605621338
start ij pos optimization
4 Loss: 6.067335605621338
ZhMarievoy Which phrase best fits the Tul Zwe zog> span?


5 Loss: 6.067335605621338
ZhMarievoy Which phrase best fits the Tul Zwe zog> span?


6 Loss: 6.067335605621338
ZhMarievoy Which phrase best fits the Tul Zwe zog> span?


optimized
12 Loss: 5.9366374015808105
ZhMarievoy Which phrase best fits thejin Zwe zog> span?


optimized
13 Loss: 5.872697353363037
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


14 Loss: 5.872697353363037
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


Initial VF Loss: 1.044667363166809
start vf pos optimization
optimized
23 Loss: 1.0113402605056763
Bhmez Chinese Admin Jones

24 Loss: 1.0113402605056763
Bhmez Chinese Admin Jones

25 Loss: 1.0113402605056763
Bhmez Chinese Admin Jones

optimized
26 Loss: 0.9469159245491028
Bhmez Chinesectx Jones

27 Loss: 0.9469159245491028
Bhmez Chinesectx Jones

5
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 6324, 29892, 21116, 1460, 29889, 4683, 366, 2675, 304, 3762, 1286, 29973, 13, 29933, 29901, 612, 786, 29889, 306, 505, 4223, 472, 29871, 29929, 297, 278, 7250, 29889, 13, 29909, 29901, 15992, 738, 13900, 1156, 278, 770, 29973, 13, 29933, 29901, 2216, 2289, 29889, 1724, 1048, 366, 29973, 13, 29909, 29901, 1334, 674, 505, 1749, 7145, 8489, 429, 2232, 2446, 4098, 29889, 306, 3814, 304, 1106, 363, 777, 4100, 8277, 322, 6559, 472, 278, 3489, 29889, 1938, 366, 864, 304, 5988, 592, 29973, 13, 29933, 29901, 18585, 29889, 306, 817, 304, 736, 777, 8277, 29889, 2688, 526, 2861, 9826, 29889, 19065, 29892, 306, 508, 884, 1303, 777, 4723, 368, 25964, 29892, 2320, 834, 1475, 322, 14578, 21321, 29889, 13, 29909, 29901, 7027, 29889, 1334, 508, 748, 304, 278, 2381, 25217, 11565, 297, 278, 330, 27384, 1156, 393, 29889, 13, 29933, 29901, 2193, 10083, 763, 263, 1781, 2969, 29889, 1334, 508, 521, 453, 714, 263, 2217, 297, 1316, 263, 7375, 11801, 29889, 4683, 366, 1781, 472, 2381, 25217, 29973, 13, 29909, 29901, 5674, 29892, 393, 29915, 29879, 263, 1781, 1139, 29889, 306, 7359, 29915, 29873, 2381, 398, 363, 4359, 529, 1529, 16033, 15513, 306, 1348, 306, 817, 901, 6944, 29889, 13, 29933, 29901, 6439, 29892, 372, 29915, 29879, 4359, 29871, 29929, 29889, 306, 817, 304, 12166, 719, 29889, 306, 626, 2734, 5683, 1286, 29889, 2823, 366, 1156, 770, 297, 4565, 310, 278, 3489, 769, 29889, 2648, 29872, 1738, 13, 29909, 29901, 2823, 366, 769, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 1724, 29915, 29879, 278, 2635, 9826, 3237, 29889, 29933, 4708, 29889, 306, 1016, 29915, 29873, 505, 263, 17684, 29889, 13, 29933, 29901, 20628, 338, 323, 1041, 3250, 29892, 29871, 29906, 29945, 386, 3839, 29892, 29871, 29906, 29900, 29900, 29896, 29889, 13, 29909, 29901, 29871, 29906, 29945, 386, 29639, 29973, 6439, 29892, 306, 505, 385, 28573, 15243, 523, 29889, 13, 29933, 29901, 1724, 931, 338, 596, 28573, 29973, 13, 29909, 29901, 739, 338, 472, 529, 1529, 16033, 15513, 13, 29933, 29901, 1724, 931, 338, 1286, 29973, 1938, 366, 505, 278, 1959, 931, 29973, 13, 29909, 29901, 306, 1016, 29915, 29873, 1073, 825, 931, 372, 338, 29889, 3112, 1818, 367, 1048, 29871, 29953, 288, 29915, 13058, 29889, 306, 505, 304, 748, 1286, 29889, 306, 1016, 29915, 29873, 864, 304, 367, 5683, 29889, 13, 29933, 29901, 887, 2113, 29915, 29873, 367, 5683, 29889, 3112, 29915, 29879, 1603, 4688, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1128, 2041, 372, 338, 5232, 408, 263, 5807, 737, 9826, 29973, 29871, 13, 29933, 29901, 887, 2099, 278, 3564, 3957, 29973, 29871, 13, 29909, 29901, 3869, 29892, 306, 5131, 304, 1106, 363, 777, 2472, 373, 278, 5001, 1813, 925, 1286, 29889, 739, 3614, 592, 4359, 529, 1529, 16033, 29958, 304, 1722, 372, 29889, 1987, 727, 338, 694, 2933, 304, 738, 2828, 29889, 29871, 13, 29933, 29901, 306, 505, 278, 1021, 1139, 29889, 306, 508, 29915, 29873, 3638, 714, 611, 2719, 29889, 1334, 29915, 29881, 2253, 1246, 278, 13315, 14311, 322, 2244, 963, 304, 1423, 372, 7389, 29889, 29871, 13, 29909, 29901, 3674, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 24882, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1128, 1472, 505, 366, 1063, 297, 445, 5001, 29973, 29871, 13, 29933, 29901, 306, 2996, 529, 1529, 16033, 29958, 1156, 306, 23588, 515, 12755, 29889, 910, 338, 590, 937, 4982, 29889, 29871, 13, 29909, 29901, 887, 1818, 505, 1476, 1568, 4328, 1546, 1985, 297, 5001, 322, 23382, 297, 12755, 29889, 29871, 13, 29933, 29901, 4587, 3236, 1738, 7569, 3250, 29892, 727, 338, 263, 7123, 1220, 304, 5870, 29889, 350, 2209, 267, 21217, 322, 6724, 592, 599, 278, 931, 29892, 451, 4188, 292, 297, 12755, 29892, 29692, 297, 5650, 7378, 2678, 322, 9528, 373, 20410, 29889, 739, 338, 577, 19587, 29889, 1205, 8763, 29892, 306, 505, 1063, 1811, 590, 1900, 304, 367, 263, 1781, 19001, 29889, 29871, 13, 29909, 29901, 5674, 29892, 366, 29915, 29963, 29872, 23430, 7535, 1407, 1532, 29889, 7569, 650, 297, 1749, 8034, 22405, 366, 29915, 29963, 29872, 1754, 263, 2107, 6728, 297, 278, 4940, 1023, 2440, 29889, 1724, 338, 596, 7035, 29973, 29871, 13, 29933, 29901, 739, 338, 577, 18443, 292, 304, 8293, 445, 8509, 29889, 450, 7035, 338, 304, 1207, 13900, 29889, 14350, 1623, 596, 14433, 29892, 3273, 29899, 8489, 322, 1472, 29899, 8489, 322, 1207, 9493, 13900, 363, 263, 4723, 470, 263, 4098, 29889, 1987, 925, 664, 2898, 29889, 29871, 29871, 10604, 29901, 29871]] [[1048, 29871, 29941, 6233], [5320, 26354], [29871, 29947, 7378], [1023, 3841, 8020]]
Initial Loss: 5.7373247146606445
start ij pos optimization
4 Loss: 5.7373247146606445
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


5 Loss: 5.7373247146606445
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


6 Loss: 5.7373247146606445
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


12 Loss: 5.7373247146606445
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


13 Loss: 5.7373247146606445
ZhMarievoy Which phrase best fits thejin odkazy zog> span?


optimized
14 Loss: 5.576493263244629
ZhMarievoy Which phrase best fits thejin odkazylius> span?


Initial VF Loss: 1.144748330116272
start vf pos optimization
23 Loss: 1.144748330116272
Bhmez Chinesectx Jones

optimized
24 Loss: 1.098352313041687
Bhovie Chinesectx Jones

25 Loss: 1.098352313041687
Bhovie Chinesectx Jones

26 Loss: 1.098352313041687
Bhovie Chinesectx Jones

27 Loss: 1.098352313041687
Bhovie Chinesectx Jones

6
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 5310, 29892, 372, 29915, 29879, 931, 304, 748, 3271, 1286, 1738, 22220, 719, 701, 1738, 29871, 13, 29933, 29901, 12444, 901, 6233, 29892, 16823, 29889, 3529, 1738, 29871, 13, 29909, 29901, 379, 4992, 29892, 372, 29915, 29879, 4359, 694, 265, 29889, 1334, 505, 304, 748, 3271, 322, 1207, 301, 3322, 363, 596, 9883, 29889, 29871, 13, 29933, 29901, 306, 1010, 1183, 674, 13958, 2820, 411, 902, 286, 1078, 1156, 3762, 29889, 29871, 13, 29909, 29901, 5310, 29892, 372, 29915, 29879, 529, 1529, 16033, 15513, 2803, 29915, 29879, 748, 3271, 1286, 1738, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 7197, 11005, 29892, 8889, 29889, 21829, 304, 278, 422, 3921, 25408, 29889, 29871, 13, 29933, 29901, 15043, 29889, 306, 505, 263, 620, 20525, 29892, 1090, 278, 1024, 9371, 29892, 22533, 9371, 29889, 29871, 13, 29909, 29901, 341, 4317, 29885, 29889, 306, 29915, 29885, 451, 1854, 565, 591, 505, 366, 1623, 1244, 29889, 1128, 437, 366, 24779, 596, 1833, 1024, 29973, 29871, 13, 29933, 29901, 739, 29915, 29879, 365, 29899, 29872, 29899, 29872, 29889, 29871, 13, 29909, 29901, 6439, 29892, 1492, 29889, 887, 29915, 276, 297, 1749, 1788, 29889, 306, 471, 925, 3063, 1090, 2718, 29889, 1105, 29892, 591, 29915, 29963, 29872, 2355, 366, 1623, 363, 263, 15197, 2166, 568, 363, 529, 1529, 16033, 15513, 960, 306, 1033, 925, 505, 596, 16200, 5881, 29892, 306, 29915, 645, 1889, 596, 1423, 29899, 262, 1550, 29871, 13, 29933, 29901, 887, 2099, 306, 505, 304, 5146, 1286, 29973, 29871, 13, 29909, 29901, 6439, 694, 29892, 591, 925, 1207, 385, 17188, 310, 596, 5881, 773, 1749, 16200, 5881, 4933, 29889, 739, 29915, 29879, 297, 13003, 310, 263, 19754, 277, 29889, 960, 4129, 338, 9280, 746, 366, 1423, 714, 29892, 591, 2367, 372, 1250, 304, 366, 769, 29889, 739, 29915, 29879, 5051, 9523, 29871, 13, 29933, 29901, 306, 1074, 29889, 306, 4140, 366, 508, 2649, 306, 1016, 29915, 29873, 9850, 1568, 29889, 29871, 13, 29909, 29901, 313, 2678, 1723, 2266, 29915, 29879, 596, 5881, 29892, 8889, 29889, 887, 29915, 276, 599, 7120, 297, 29889, 1235, 592, 925, 2649, 366, 1048, 263, 2846, 310, 1749, 5786, 29889, 1334, 505, 3889, 26044, 297, 278, 301, 1309, 479, 515, 29871, 29955, 29901, 29900, 29900, 29899, 29871, 29929, 29901, 29900, 29900, 29889, 887, 1246, 278, 25647, 391, 304, 564, 3881, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 4335, 22396, 338, 590, 2462, 1283, 29889, 306, 4997, 565, 372, 29915, 29879, 19192, 304, 1735, 1749, 28573, 515, 6454, 22396, 304, 2446, 15050, 4515, 3250, 29892, 1603, 472, 278, 1021, 931, 29889, 29871, 13, 29933, 29901, 306, 29915, 29885, 13421, 306, 2113, 29915, 29873, 367, 3889, 2446, 4723, 29889, 29871, 13, 29909, 29901, 739, 29915, 29879, 263, 28503, 29889, 12984, 445, 17724, 367, 599, 1492, 29973, 1205, 306, 508, 871, 29337, 366, 385, 7234, 322, 263, 4203, 9826, 29892, 515, 529, 1529, 16033, 15513, 29871, 13, 29933, 29901, 2193, 29915, 29879, 9280, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 17871, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 306, 1073, 297, 596, 620, 2017, 393, 366, 505, 3796, 297, 596, 2198, 5001, 363, 29871, 29941, 2440, 29892, 508, 366, 2649, 592, 2020, 366, 864, 304, 5967, 596, 2198, 4982, 322, 5988, 502, 29973, 13, 29933, 29901, 7311, 278, 4982, 306, 626, 2599, 297, 590, 2198, 5001, 338, 310, 694, 18766, 29892, 541, 306, 763, 18766, 29889, 10858, 9226, 338, 263, 4123, 24788, 411, 1784, 24233, 1230, 7014, 29889, 739, 756, 1063, 1407, 9150, 297, 385, 7985, 292, 9999, 1951, 967, 25012, 529, 1529, 16033, 15513, 24176, 363, 366, 723, 367, 3721, 278, 2656, 310, 18766, 306, 626, 3063, 363, 29889, 13, 29909, 29901, 3750, 437, 366, 1348, 366, 526, 18698, 363, 445, 2602, 29973, 13, 29933, 29901, 306, 505, 15129, 12084, 25078, 322, 306, 626, 9985, 411, 278, 28648, 363, 278, 1833, 5001, 306, 3796, 363, 29889, 19065, 29892, 306, 626, 263, 3815, 4847, 322, 505, 2107, 1006, 10532, 284, 25078, 29889, 29871, 10604, 29901, 29871]] [[9475, 288, 29915, 13058], [2211, 11405], [29871, 29929, 288, 29915, 13058], [29871, 29906, 29945, 3841]]
Initial Loss: 4.31976318359375
start ij pos optimization
4 Loss: 4.31976318359375
ZhMarievoy Which phrase best fits thejin odkazylius> span?


5 Loss: 4.31976318359375
ZhMarievoy Which phrase best fits thejin odkazylius> span?


6 Loss: 4.31976318359375
ZhMarievoy Which phrase best fits thejin odkazylius> span?


12 Loss: 4.31976318359375
ZhMarievoy Which phrase best fits thejin odkazylius> span?


optimized
13 Loss: 4.249540328979492
ZhMarievoy Which phrase best fits thejinTeXlius> span?


14 Loss: 4.249540328979492
ZhMarievoy Which phrase best fits thejinTeXlius> span?


Initial VF Loss: 0.984337329864502
start vf pos optimization
optimized
23 Loss: 0.9173110127449036
Zwovie Chinesectx Jones

24 Loss: 0.9173110127449036
Zwovie Chinesectx Jones

optimized
25 Loss: 0.8034555315971375
Zwovie Chictx Jones

optimized
26 Loss: 0.738494873046875
Zwovie Chihren Jones

27 Loss: 0.738494873046875
Zwovie Chihren Jones

7
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 306, 29915, 29885, 10932, 591, 2996, 1244, 29889, 910, 338, 2289, 628, 14803, 1738, 29871, 13, 29933, 29901, 306, 471, 6365, 1255, 366, 723, 1348, 372, 471, 2086, 2215, 304, 7899, 29889, 29871, 13, 29909, 29901, 5674, 29892, 372, 29915, 29879, 1565, 306, 29915, 345, 2360, 18225, 1023, 6199, 925, 304, 679, 301, 3322, 29889, 6246, 2289, 29892, 306, 1348, 372, 29915, 29879, 7088, 372, 29889, 29871, 13, 29933, 29901, 306, 1348, 565, 366, 1018, 777, 901, 15585, 10013, 9687, 29892, 366, 1795, 2274, 920, 591, 8041, 515, 27807, 8812, 29889, 29871, 13, 29909, 29901, 1128, 437, 366, 2099, 376, 8812, 376, 29973, 29871, 13, 29933, 29901, 306, 2099, 29892, 297, 3833, 29893, 585, 23137, 727, 338, 694, 1781, 10013, 9687, 29889, 6295, 591, 3052, 278, 9687, 297, 27807, 2086, 1568, 29889, 29903, 14618, 591, 925, 505, 304, 7899, 1623, 1244, 304, 10059, 304, 1284, 1554, 2253, 29889, 29871, 13, 29909, 29901, 7753, 297, 278, 13851, 29973, 29871, 13, 29933, 29901, 3869, 29892, 1584, 297, 278, 13851, 29889, 29871, 13, 29909, 29901, 1126, 1584, 565, 372, 4893, 1023, 6199, 29892, 298, 16099, 29973, 29871, 13, 29933, 29901, 3750, 451, 29973, 306, 29915, 345, 1063, 12220, 1747, 1781, 9687, 363, 529, 1529, 16033, 29958, 1286, 29889, 306, 29915, 29885, 2086, 17319, 310, 298, 1117, 2007, 414, 322, 282, 24990, 1738, 29871, 13, 29909, 29901, 5674, 29892, 445, 2289, 338, 628, 14803, 29892, 306, 505, 304, 20000, 29889, 306, 508, 2274, 2253, 1286, 2020, 366, 322, 596, 7875, 526, 2337, 377, 2827, 29889, 29871, 13, 29933, 29901, 3872, 29915, 29873, 734, 559, 592, 1738, 7197, 9687, 338, 2289, 4100, 304, 10013, 1738, 29871, 13, 29909, 29901, 306, 1073, 29889, 306, 508, 1074, 393, 29889, 910, 338, 825, 338, 2000, 376, 3964, 2533, 29892, 376, 1492, 29973, 29871, 13, 29933, 29901, 3869, 29892, 599, 1438, 270, 17006, 526, 1422, 376, 3964, 2533, 376, 270, 17006, 29889, 3492, 508, 29915, 29873, 1284, 445, 2924, 310, 2655, 5174, 363, 297, 263, 2846, 14368, 297, 6813, 29889, 29871, 13, 29909, 29901, 1105, 746, 366, 10013, 1348, 310, 678, 262, 271, 776, 29892, 366, 11149, 1348, 310, 9687, 29889, 1317, 393, 1492, 29973, 29871, 13, 29933, 29901, 4587, 3236, 29889, 306, 674, 1018, 304, 15649, 777, 2712, 472, 278, 20021, 4071, 29883, 708, 1623, 278, 2908, 2086, 29889, 11760, 306, 508, 437, 263, 2217, 7984, 292, 297, 590, 263, 8076, 29889, 29871, 13, 29909, 29901, 1126, 5505, 591, 508, 748, 304, 263, 1781, 10545, 27144, 363, 17803, 29892, 1156, 278, 19133, 29889, 1451, 9384, 756, 777, 2107, 10545, 12374, 1934, 29889, 29871, 13, 29933, 29901, 1939, 982, 1738, 29871, 13, 29909, 29901, 1724, 437, 366, 2099, 29973, 29871, 13, 29933, 29901, 1334, 29915, 276, 2675, 701, 304, 278, 376, 716, 376, 678, 262, 271, 776, 363, 17803, 29889, 306, 2307, 1073, 988, 591, 29915, 276, 2675, 304, 748, 29889, 29871, 13, 29909, 29901, 838, 1266, 29892, 394, 1266, 29889, 306, 626, 9796, 304, 1018, 901, 10013, 9687, 29889, 12984, 372, 367, 3964, 2533, 1449, 29973, 29871, 13, 29933, 29901, 1939, 29892, 3964, 2533, 338, 5491, 321, 2579, 2820, 301, 3322, 931, 29892, 470, 6041, 17649, 304, 26044, 29889, 4806, 29915, 645, 1018, 901, 27807, 968, 3114, 701, 472, 278, 376, 716, 376, 678, 262, 271, 776, 29889, 29871, 13, 29909, 29901, 27807, 968, 3114, 29973, 29489, 29915, 29873, 3964, 2533, 27807, 968, 3114, 29973, 29871, 13, 29933, 29901, 1939, 29892, 3964, 2533, 338, 901, 315, 11960, 968, 3114, 29889, 6246, 310, 3236, 366, 508, 15649, 372, 297, 27807, 29889, 29871, 13, 29909, 29901, 306, 4997, 565, 366, 508, 7984, 2712, 445, 1781, 29889, 29871, 13, 29933, 29901, 306, 29915, 29885, 263, 2107, 7984, 2869, 29889, 887, 674, 1074, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 526, 366, 1985, 975, 2230, 1449, 29973, 6811, 278, 1833, 1023, 11405, 29892, 366, 505, 3796, 975, 2230, 1432, 2462, 1728, 263, 2867, 1738, 3575, 5001, 338, 7482, 2827, 278, 2834, 714, 310, 366, 1738, 29871, 13, 29933, 29901, 306, 1073, 29892, 541, 306, 1016, 29915, 29873, 505, 263, 7348, 29892, 590, 289, 2209, 756, 4866, 2761, 975, 1749, 664, 28598, 2540, 29889, 306, 7359, 29915, 29873, 1754, 372, 714, 310, 278, 8034, 1434, 529, 1529, 16033, 29958, 263, 2323, 2462, 445, 4723, 29889, 29871, 13, 29909, 29901, 5674, 29892, 306, 4966, 896, 29915, 276, 5146, 292, 366, 278, 4802, 1321, 4684, 363, 599, 445, 664, 856, 29871, 13, 29933, 29901, 1939, 29892, 451, 3721, 29892, 306, 29915, 29885, 1985, 363, 9212, 281, 482, 29889, 2855, 896, 1016, 29915, 29873, 2367, 4805, 5146, 363, 975, 2230, 29889, 438, 1765, 603, 338, 1749, 1914, 931, 29889, 29871, 13, 29909, 29901, 1724, 29973, 1738, 29489, 29915, 29873, 727, 263, 4307, 2750, 393, 29892, 306, 1348, 727, 338, 777, 13332, 362, 393, 6858, 5703, 414, 304, 2367, 1009, 22873, 263, 6534, 6554, 310, 281, 1179, 29889, 887, 881, 1073, 596, 10462, 1738, 960, 366, 526, 10594, 297, 577, 1784, 6199, 29892, 896, 881, 2367, 366, 777, 2924, 310, 22874, 362, 29889, 29871, 13, 29933, 29901, 2688, 437, 2367, 10814, 6394, 472, 278, 1095, 310, 278, 1629, 363, 278, 22873, 411, 9939, 3234, 2068, 3694, 29892, 541, 2524, 29895, 368, 29892, 372, 29915, 29879, 451, 1568, 310, 385, 297, 1760, 573, 29889, 2688, 2367, 502, 263, 28920, 310, 3006, 17208, 29889, 29871, 13, 29909, 29901, 2193, 29915, 29879, 925, 2743, 1738, 2020, 1016, 29915, 29873, 366, 925, 23283, 29973, 29871, 13, 29933, 29901, 306, 723, 29892, 541, 306, 29915, 29885, 13421, 306, 723, 29915, 29873, 367, 2221, 304, 1284, 1790, 4982, 29889, 306, 1016, 29915, 29873, 505, 1407, 1784, 4982, 9999, 519, 25078, 29892, 727, 9455, 29915, 29873, 577, 1784, 17643, 393, 306, 29915, 29885, 18698, 363, 29889, 29871, 13, 29909, 29901, 372, 10083, 763, 738, 4982, 674, 367, 2253, 1135, 278, 697, 366, 505, 1286, 1738, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 887, 526, 8300, 304, 263, 9117, 261, 29892, 298, 16099, 29973, 1105, 825, 29915, 29879, 372, 763, 29973, 29871, 13, 29933, 29901, 5674, 29892, 278, 937, 1629, 310, 1749, 13718, 29892, 591, 750, 2107, 14656, 2805, 3412, 29889, 450, 2712, 393, 526, 4100, 304, 592, 526, 451, 4100, 304, 1075, 29889, 1334, 750, 263, 3287, 310, 28792, 29889, 29871, 13, 29909, 29901, 15011, 29892, 306, 1073, 825, 366, 2099, 29889, 450, 937, 1629, 310, 738, 13718, 338, 5189, 363, 599, 3581, 2701, 29892, 451, 304, 3585, 1023, 2305, 515, 1422, 4185, 1973, 29889, 29871, 13, 29933, 29901, 1126, 1286, 591, 505, 263, 529, 1529, 16033, 29958, 8023, 29889, 1334, 29915, 276, 1407, 9796, 393, 540, 29915, 29879, 9045, 29891, 322, 15040, 29889, 29871, 13, 29909, 29901, 6439, 29892, 577, 540, 29915, 29879, 4203, 10013, 322, 4203, 3082, 29889, 2193, 29915, 29879, 22910, 29889, 1724, 10276, 947, 540, 7726, 29892, 769, 29973, 29871, 13, 29933, 29901, 10428, 1286, 540, 7726, 29879, 11149, 10013, 29892, 322, 540, 508, 1827, 263, 2846, 4223, 3838, 29889, 1205, 540, 674, 5110, 29889, 29871, 13, 29909, 29901, 1724, 947, 540, 1106, 763, 29973, 1815, 2305, 2649, 29973, 29871, 13, 29933, 29901, 3869, 29892, 2305, 18880, 508, 29889, 940, 29915, 29879, 377, 1524, 1135, 278, 10013, 413, 4841, 29892, 322, 670, 11315, 338, 263, 2217, 1999, 13469, 29889, 1619, 10216, 4083, 670, 5076, 526, 1407, 10013, 2466, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 23572, 18644, 8449, 16549, 1900, 23994, 278, 28789, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 1128, 1568, 23429, 526, 366, 2675, 304, 1797, 29973, 13, 29933, 29901, 1334, 864, 304, 1797, 29871, 29941, 29892, 29900, 29900, 29900, 4251, 322, 4966, 304, 12021, 278, 22535, 297, 1023, 5186, 14568, 29889, 13, 29909, 29901, 1932, 437, 366, 864, 304, 12021, 278, 22535, 29973, 13, 29933, 29901, 1334, 29915, 29881, 763, 366, 304, 6222, 278, 937, 28289, 491, 5306, 29871, 29941, 29900, 322, 278, 1473, 28289, 491, 3111, 29871, 29896, 29945, 29889, 13, 29909, 29901, 306, 29915, 29885, 7423, 29892, 541, 5306, 29871, 29941, 29900, 338, 3755, 4720, 29889, 306, 508, 29915, 29873, 18818, 29871, 29896, 29871, 29945, 29900, 29900, 4251, 29892, 306, 29915, 29881, 5821, 278, 937, 7751, 358, 304, 367, 29871, 29896, 29892, 29900, 29900, 29900, 4251, 322, 278, 2446, 29871, 29906, 29892, 29900, 29900, 29900, 4251, 29889, 13, 29933, 29901, 306, 508, 8661, 304, 393, 29889, 13, 29909, 29901, 2803, 592, 2756, 3568, 445, 1449, 448, 278, 937, 7751, 358, 310, 29871, 29896, 29892, 29900, 29900, 29900, 4251, 29892, 304, 367, 20115, 297, 529, 1529, 16033, 10202, 491, 5306, 29871, 29941, 29900, 29892, 322, 278, 1473, 7751, 358, 310, 29871, 29906, 29892, 29900, 29900, 29900, 4251, 491, 3111, 29871, 29896, 29945, 29889, 10428, 29973, 13, 29933, 29901, 10428, 29889, 13, 29909, 29901, 5674, 29892, 565, 727, 29915, 29879, 3078, 1683, 29892, 306, 1348, 591, 29915, 345, 17141, 4129, 29889, 13, 29933, 29901, 2803, 29915, 29879, 4966, 372, 29915, 29879, 278, 6763, 310, 263, 1472, 322, 25831, 681, 9443, 29889, 29871, 10604, 29901, 29871]] [[1023, 3841, 8020], [1023, 2440, 8020], [278, 1833, 2211, 11405], [1048, 1023, 11405]]
Initial Loss: 7.80408239364624
start ij pos optimization
optimized
4 Loss: 7.5183939933776855
ZMarievoy Which phrase best fits thejinTeXlius> span?


5 Loss: 7.5183939933776855
ZMarievoy Which phrase best fits thejinTeXlius> span?


6 Loss: 7.5183939933776855
ZMarievoy Which phrase best fits thejinTeXlius> span?


optimized
12 Loss: 7.399752140045166
ZMarievoy Which phrase best fits the advantagesTeXlius> span?


13 Loss: 7.399752140045166
ZMarievoy Which phrase best fits the advantagesTeXlius> span?


14 Loss: 7.399752140045166
ZMarievoy Which phrase best fits the advantagesTeXlius> span?


Initial VF Loss: 1.3393141031265259
start vf pos optimization
23 Loss: 1.3393141031265259
Zwovie Chihren Jones

optimized
24 Loss: 1.3251867294311523
Zwamarin Chihren Jones

optimized
25 Loss: 1.2495356798171997
Zwamarin Nihren Jones

optimized
26 Loss: 1.1937562227249146
Zwamarin Ni resize Jones

optimized
27 Loss: 0.9899311661720276
Zwamarin Ni resizesko

8
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 796, 23572, 18644, 8449, 16549, 1900, 23994, 278, 25486, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 24948, 592, 263, 2217, 2586, 1048, 7535, 29892, 3113, 29889, 29871, 13, 29933, 29901, 1619, 1024, 338, 24703, 322, 306, 5735, 297, 1522, 823, 292, 29889, 306, 471, 6345, 297, 29871, 29896, 29929, 29947, 29900, 29889, 306, 505, 23588, 515, 349, 1416, 292, 3014, 29889, 306, 4655, 287, 297, 5381, 17517, 29889, 29871, 13, 29909, 29901, 1724, 2924, 310, 17643, 505, 366, 750, 29973, 29871, 13, 29933, 29901, 306, 505, 1063, 263, 5802, 8455, 29889, 29871, 13, 29909, 29901, 10878, 366, 763, 304, 2649, 592, 1554, 1048, 596, 714, 11235, 27012, 4110, 29973, 29871, 13, 29933, 29901, 306, 9129, 385, 12862, 3234, 1196, 29892, 607, 11664, 278, 1962, 322, 3109, 6419, 278, 3438, 29889, 29871, 13, 29909, 29901, 1724, 4266, 25078, 437, 366, 505, 29892, 508, 366, 2649, 592, 29973, 29871, 13, 29933, 29901, 306, 505, 7271, 297, 6601, 5858, 29892, 2600, 293, 13396, 297, 7783, 10803, 322, 7783, 11388, 29889, 29871, 13, 29909, 29901, 306, 1073, 297, 596, 620, 2017, 393, 366, 505, 3796, 297, 596, 2198, 5001, 363, 529, 1529, 16033, 15513, 1815, 366, 2649, 592, 2020, 366, 864, 304, 5967, 596, 2198, 4982, 322, 5988, 502, 29973, 29871, 13, 29933, 29901, 7311, 278, 4982, 306, 626, 2599, 297, 590, 2198, 5001, 338, 310, 694, 18766, 29892, 541, 306, 763, 18766, 29889, 3575, 9226, 338, 263, 4123, 13013, 411, 1784, 24233, 1230, 7014, 29889, 739, 756, 1063, 1407, 9150, 297, 7985, 292, 9999, 1951, 967, 25012, 29871, 29896, 29900, 2440, 8020, 29889, 24176, 363, 366, 723, 367, 3721, 278, 2656, 310, 18766, 306, 626, 3063, 363, 29889, 29871, 13, 29909, 29901, 5674, 29892, 306, 1348, 1749, 15593, 338, 4866, 769, 29889, 1334, 674, 2367, 366, 263, 1246, 297, 3006, 3841, 470, 577, 29889, 29871, 13, 29933, 29901, 3374, 366, 29892, 3237, 29889, 7075, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 796, 23572, 18644, 8449, 16549, 1900, 23994, 278, 25486, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 15043, 1738, 1317, 596, 8818, 29875, 17785, 29973, 13, 29933, 29901, 1939, 29892, 445, 8818, 29875, 338, 3889, 29889, 13, 29909, 29901, 3529, 2125, 592, 304, 278, 12798, 292, 16923, 29889, 13, 29933, 29901, 9280, 29889, 3529, 679, 297, 29889, 306, 29915, 29885, 10932, 304, 9080, 366, 29889, 13, 29909, 29901, 6527, 366, 679, 727, 297, 10081, 6233, 29973, 13, 29933, 29901, 739, 674, 2125, 4203, 385, 7234, 304, 679, 304, 278, 16730, 29889, 13, 29909, 29901, 306, 626, 297, 263, 12166, 719, 29889, 3529, 2125, 263, 21697, 29889, 306, 505, 263, 5121, 10534, 363, 592, 29889, 13, 29933, 29901, 9280, 29892, 306, 11640, 591, 29915, 645, 679, 727, 297, 529, 1529, 16033, 15513, 13, 29909, 29901, 1834, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 796, 23572, 18644, 8449, 16549, 1900, 23994, 278, 25486, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 18637, 29892, 2259, 1738, 306, 7359, 29915, 29873, 3595, 366, 297, 24646, 1738, 1724, 29915, 29879, 716, 29973, 1724, 505, 366, 1063, 701, 304, 29973, 29871, 13, 29933, 29901, 349, 2650, 1738, 20103, 304, 1074, 366, 5674, 29892, 373, 2246, 278, 6056, 29892, 366, 1073, 29892, 6532, 322, 413, 4841, 322, 664, 29892, 306, 29915, 29963, 29872, 2869, 2355, 841, 964, 2599, 777, 3534, 292, 29889, 29871, 13, 29909, 29901, 1605, 9382, 29973, 887, 29892, 4802, 1410, 29891, 29973, 1724, 526, 366, 3534, 292, 29973, 29871, 13, 29933, 29901, 315, 1038, 15942, 29889, 29871, 13, 29909, 29901, 315, 1038, 15942, 29973, 1094, 297, 16430, 1883, 29892, 360, 3028, 1503, 29892, 349, 3885, 322, 9723, 412, 267, 29973, 29871, 13, 29933, 29901, 739, 29915, 29879, 2000, 28297, 29916, 29889, 19358, 24004, 29889, 450, 2107, 2655, 1048, 372, 338, 393, 306, 1016, 29915, 29873, 505, 304, 13258, 263, 12176, 5253, 29889, 306, 1925, 297, 263, 5906, 19754, 277, 322, 769, 306, 508, 15649, 322, 19417, 701, 304, 29871, 29896, 29900, 29900, 3064, 393, 1568, 1738, 29871, 13, 29909, 29901, 306, 1016, 29915, 29873, 2274, 29889, 887, 29915, 276, 1321, 5414, 322, 269, 7807, 6909, 29973, 29871, 13, 29933, 29901, 887, 2355, 372, 1738, 3387, 1833, 4646, 306, 1754, 3148, 29928, 29871, 29896, 29945, 29900, 1738, 29871, 13, 29909, 29901, 9208, 4646, 29973, 29871, 13, 29933, 29901, 15011, 1738, 739, 29915, 29879, 263, 529, 1529, 16033, 29958, 9999, 1738, 306, 750, 18093, 777, 390, 8979, 8859, 472, 263, 4482, 6721, 8666, 541, 1833, 4646, 372, 7556, 4192, 579, 1711, 577, 306, 1754, 263, 6219, 1473, 10608, 322, 5239, 599, 590, 390, 8979, 472, 385, 21863, 292, 21000, 1738, 306, 525, 29871, 13, 29909, 29901, 887, 29915, 276, 413, 2205, 292, 1738, 306, 29915, 29885, 373, 1738, 6804, 437, 306, 1804, 701, 29973, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 796, 23572, 18644, 8449, 16549, 1900, 23994, 278, 25486, 16644, 19646, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 15043, 29892, 21688, 29889, 10878, 366, 763, 304, 748, 714, 6454, 22396, 29973, 29871, 13, 29933, 29901, 4335, 22396, 29973, 29871, 13, 29909, 29901, 15011, 29892, 306, 471, 7291, 591, 1033, 679, 263, 289, 568, 304, 17545, 322, 4380, 263, 14064, 29889, 29871, 13, 29933, 29901, 2193, 10083, 2107, 29889, 29871, 13, 29909, 29901, 3869, 29889, 1334, 508, 437, 1554, 1683, 565, 366, 763, 29889, 29871, 13, 29933, 29901, 9280, 29889, 360, 3993, 322, 263, 14064, 674, 367, 4922, 29889, 29871, 13, 29909, 29901, 5674, 29889, 1724, 931, 723, 366, 763, 592, 304, 5839, 366, 701, 29973, 29871, 13, 29933, 29901, 1128, 529, 1529, 16033, 29958, 29973, 29871, 13, 29909, 29901, 7197, 29889, 306, 674, 1074, 366, 769, 29889, 29871, 13, 29933, 29901, 9280, 29889, 2648, 29872, 29889, 29871, 13, 29909, 29901, 2648, 29872, 29889, 29871, 29871, 10604, 29901, 29871]] [[25020, 3841, 8020], [1023, 6199], [3109, 1135, 10081, 3841], [3006, 3841]]
Initial Loss: 8.169195175170898
start ij pos optimization
optimized
4 Loss: 5.790640354156494
JasonMarievoy Which phrase best fits the advantagesTeXlius> span?


5 Loss: 5.790640354156494
JasonMarievoy Which phrase best fits the advantagesTeXlius> span?


optimized
6 Loss: 5.69374418258667
JasonMarieformation Which phrase best fits the advantagesTeXlius> span?


optimized
12 Loss: 5.559875965118408
JasonMarieformation Which phrase best fits thereckTeXlius> span?


optimized
13 Loss: 5.43576717376709
JasonMarieformation Which phrase best fits thereckjbosslius> span?


optimized
14 Loss: 5.202024459838867
JasonMarieformation Which phrase best fits thereckjbossAlex> span?


Initial VF Loss: 2.8748085498809814
start vf pos optimization
optimized
23 Loss: 2.6061909198760986
junamarin Ni resizesko

optimized
24 Loss: 2.4994614124298096
junstad Ni resizesko

optimized
25 Loss: 2.3641717433929443
junstad Ek resizesko

26 Loss: 2.3641717433929443
junstad Ek resizesko

27 Loss: 2.3641717433929443
junstad Ek resizesko

9
[4, 5, 6, 12, 13, 14] [23, 24, 25, 26, 27]
[[1, 2184, 29901, 29871, 21776, 23572, 5404, 8449, 16549, 1900, 23994, 278, 18217, 22788, 17406, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 7991, 29892, 366, 29915, 276, 577, 9885, 29891, 393, 366, 29915, 345, 2041, 472, 278, 1492, 931, 29899, 1552, 29871, 29906, 29900, 29900, 29945, 4623, 6371, 1608, 8518, 338, 2820, 278, 11155, 29889, 13, 29933, 29901, 1334, 29915, 345, 6091, 1048, 393, 16005, 1434, 29889, 739, 723, 367, 3755, 8444, 565, 366, 1033, 2367, 502, 777, 12141, 29879, 310, 278, 16005, 29889, 13, 29909, 29901, 1619, 15377, 29889, 5674, 29892, 278, 16005, 338, 2675, 304, 1369, 373, 278, 4654, 24211, 310, 5533, 29892, 322, 18469, 975, 697, 6893, 16984, 11104, 297, 529, 1529, 16033, 15513, 13, 29933, 29901, 1724, 437, 366, 1348, 591, 508, 1074, 2645, 278, 16005, 29973, 13, 29909, 29901, 306, 1016, 29915, 29873, 1073, 825, 304, 4368, 29889, 1670, 29915, 276, 577, 1784, 19650, 1953, 29892, 322, 896, 599, 6047, 8031, 29889, 3118, 5566, 11407, 1824, 1795, 367, 278, 12444, 498, 681, 392, 11647, 8045, 19914, 4513, 278, 8421, 29889, 887, 508, 6755, 515, 278, 5320, 12049, 393, 3275, 304, 1422, 15422, 800, 29889, 13, 29933, 29901, 306, 29915, 29881, 763, 304, 2125, 278, 697, 393, 5771, 304, 278, 11821, 22809, 4815, 29889, 13, 29909, 29901, 1987, 366, 508, 2125, 12034, 1939, 29889, 29871, 29945, 29889, 8084, 306, 723, 4368, 278, 4623, 24339, 1952, 271, 23613, 988, 366, 508, 6505, 21934, 22440, 29892, 24339, 1952, 271, 28965, 29892, 322, 1784, 916, 4094, 3697, 29889, 13, 29933, 29901, 399, 340, 29892, 1818, 367, 8031, 304, 6505, 8338, 265, 25462, 752, 2650, 263, 29899, 29887, 475, 303, 697, 1790, 373, 278, 4272, 8580, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21776, 23572, 5404, 8449, 16549, 1900, 23994, 278, 18217, 22788, 17406, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1815, 366, 2649, 592, 825, 278, 2635, 322, 931, 310, 1749, 1746, 17487, 338, 29973, 29871, 13, 29933, 29901, 1334, 526, 10124, 373, 1749, 10466, 1746, 17487, 472, 29871, 29947, 263, 29889, 286, 29889, 2446, 27822, 29889, 1938, 366, 505, 1554, 304, 2436, 393, 1623, 373, 29973, 29871, 13, 29909, 29901, 3869, 29892, 306, 508, 2436, 393, 373, 590, 17684, 29889, 29871, 13, 29933, 29901, 2193, 674, 367, 373, 278, 1473, 310, 5846, 29889, 1522, 727, 4203, 385, 7234, 4688, 304, 679, 596, 289, 810, 373, 278, 3593, 29889, 1938, 366, 2274, 29973, 29871, 13, 29909, 29901, 3869, 29892, 306, 2274, 29889, 29871, 13, 29933, 29901, 450, 3593, 674, 6963, 366, 1250, 29871, 29953, 3841, 2678, 373, 5846, 29871, 29947, 386, 29889, 1317, 4856, 6421, 304, 679, 366, 29973, 29871, 13, 29909, 29901, 1939, 29892, 306, 1016, 29915, 29873, 505, 263, 22203, 3447, 29889, 29871, 13, 29933, 29901, 1334, 674, 367, 10124, 278, 4242, 2057, 472, 529, 1529, 16033, 29958, 322, 18331, 472, 1749, 24165, 472, 29871, 29947, 282, 29889, 29885, 29889, 10773, 901, 5155, 29889, 29871, 13, 29909, 29901, 1128, 1568, 674, 278, 17487, 3438, 29973, 29871, 13, 29933, 29901, 306, 1925, 599, 310, 393, 2472, 297, 278, 18203, 29889, 306, 29915, 645, 2367, 366, 1790, 3509, 565, 366, 817, 697, 29889, 2823, 366, 373, 27822, 1738, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21776, 23572, 5404, 8449, 16549, 1900, 23994, 278, 18217, 22788, 17406, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 13, 29909, 29901, 6975, 366, 7436, 363, 366, 1998, 29874, 304, 748, 304, 6559, 297, 278, 443, 1573, 5922, 3447, 29973, 13, 29933, 29901, 3869, 29892, 306, 505, 29889, 306, 29692, 297, 590, 2280, 883, 1023, 11405, 8020, 322, 306, 29915, 29885, 2675, 363, 385, 15593, 2446, 4723, 29889, 13, 29909, 29901, 7197, 9885, 1738, 306, 29915, 29963, 29872, 6091, 372, 29915, 29879, 1407, 5189, 304, 679, 263, 1998, 29874, 304, 748, 304, 278, 443, 1573, 5922, 29889, 13, 29933, 29901, 450, 2280, 883, 526, 3755, 12092, 29889, 739, 3614, 592, 263, 2846, 6199, 304, 5445, 372, 714, 29889, 450, 2898, 342, 2655, 471, 2805, 599, 278, 5181, 10701, 29889, 2193, 3614, 4359, 529, 1529, 16033, 15513, 13, 29909, 29901, 1724, 2924, 310, 10701, 1258, 366, 817, 304, 2198, 29973, 13, 29933, 29901, 306, 750, 304, 1510, 1842, 1104, 1218, 304, 590, 18161, 4660, 322, 310, 3236, 590, 9793, 29892, 1363, 306, 864, 263, 8368, 1998, 29874, 29889, 13, 29909, 29901, 3750, 437, 366, 1348, 577, 1784, 2305, 505, 1009, 8324, 22225, 29973, 13, 29933, 29901, 306, 1348, 393, 896, 1016, 29915, 29873, 4866, 278, 7190, 5149, 470, 896, 1016, 29915, 29873, 3160, 599, 278, 3734, 10701, 29889, 450, 7232, 465, 29891, 338, 1407, 9406, 1048, 372, 29889, 887, 505, 304, 367, 3755, 16010, 29889, 13, 29909, 29901, 3750, 526, 896, 851, 293, 357, 411, 10013, 2305, 1135, 411, 916, 4797, 1907, 29973, 13, 29933, 29901, 2193, 29915, 29879, 2560, 29889, 9267, 2305, 2867, 278, 6865, 11211, 1009, 1998, 29874, 5855, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21776, 23572, 5404, 8449, 16549, 1900, 23994, 278, 18217, 22788, 17406, 29958, 10638, 29973, 13, 29871, 10567, 29901, 29871, 15228, 29901, 29871, 13, 29909, 29901, 1724, 338, 445, 3415, 2463, 8369, 363, 29973, 29871, 13, 29933, 29901, 450, 8369, 366, 4520, 338, 263, 529, 1529, 16033, 29958, 8369, 304, 11757, 403, 29889, 29871, 13, 29909, 29901, 4683, 366, 413, 2205, 292, 592, 29973, 29871, 13, 29933, 29901, 306, 5276, 304, 366, 1434, 393, 366, 817, 304, 3013, 701, 411, 596, 23990, 29889, 910, 8369, 304, 3415, 919, 338, 27697, 366, 1073, 393, 306, 2099, 5381, 29889, 29871, 13, 29909, 29901, 887, 508, 29915, 29873, 925, 3183, 592, 714, 373, 278, 11952, 1738, 29871, 13, 29933, 29901, 887, 505, 29871, 29941, 29900, 3841, 304, 4380, 701, 373, 596, 23990, 29892, 470, 263, 528, 261, 2593, 674, 3415, 919, 366, 29889, 29871, 13, 29909, 29901, 2811, 366, 1603, 3183, 592, 714, 565, 306, 1207, 278, 23990, 19179, 29973, 29871, 13, 29933, 29901, 887, 508, 7952, 29892, 541, 366, 1795, 1348, 1048, 3063, 363, 263, 3109, 19390, 8471, 24628, 565, 366, 526, 2534, 7458, 3907, 278, 5146, 1860, 29889, 29871, 13, 29909, 29901, 306, 626, 2675, 304, 2125, 2562, 310, 278, 23990, 19179, 1492, 1286, 29889, 29871, 13, 29933, 29901, 3374, 366, 29889, 450, 19179, 4225, 304, 367, 297, 278, 883, 310, 274, 1161, 470, 263, 274, 1161, 631, 29915, 29879, 1423, 29889, 29871, 10604, 29901, 29871]] [[29871, 29946, 29945, 6233], [5320, 6199], [2211, 6199], [2211, 4098]]
Initial Loss: 8.804375648498535
start ij pos optimization
optimized
4 Loss: 6.101567268371582
EvaMarieformation Which phrase best fits thereckjbossAlex> span?


optimized
5 Loss: 5.492687225341797
Eva ruformation Which phrase best fits thereckjbossAlex> span?


6 Loss: 5.492687225341797
Eva ruformation Which phrase best fits thereckjbossAlex> span?


12 Loss: 5.492687225341797
Eva ruformation Which phrase best fits thereckjbossAlex> span?


13 Loss: 5.492687225341797
Eva ruformation Which phrase best fits thereckjbossAlex> span?


optimized
14 Loss: 5.204086780548096
Eva ruformation Which phrase best fits thereckjbossRunner> span?


Initial VF Loss: 2.3696823120117188
start vf pos optimization
optimized
23 Loss: 2.0164806842803955
Kunstad Ek resizesko

optimized
24 Loss: 1.882608413696289
KunCtrl Ek resizesko

25 Loss: 1.882608413696289
KunCtrl Ek resizesko

26 Loss: 1.882608413696289
KunCtrl Ek resizesko

optimized
27 Loss: 1.7469696998596191
KunCtrl Ek resizeavas

**********sports_understanding**********
0
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 5953, 837, 457, 3692, 278, 1494, 3229, 470, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 1821, 29889, 13, 29871, 10567, 29901, 29871, 897, 29915, 29909, 5022, 14802, 15569, 263, 289, 4245, 2841, 24817, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 5953, 837, 457, 3692, 278, 1494, 3229, 470, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 1821, 29889, 13, 29871, 10567, 29901, 29871, 1605, 296, 1632, 728, 314, 15469, 714, 297, 278, 3086, 5165, 8972, 10488, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 5953, 837, 457, 3692, 278, 1494, 3229, 470, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 1821, 29889, 13, 29871, 10567, 29901, 29871, 3792, 638, 1522, 294, 2330, 30081, 26603, 964, 278, 22078, 4038, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 5953, 837, 457, 3692, 278, 1494, 3229, 470, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 1821, 29889, 13, 29871, 10567, 29901, 29871, 26676, 22265, 4799, 29890, 4212, 278, 10322, 29871, 10604, 29901, 29871]] [[2174, 375, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821]]
Initial Loss: 9.571233749389648
start ij pos optimization
optimized
4 Loss: 4.4686126708984375
city sechsVor Determine whether the following statement or statements are plausible or implausible.


optimized
5 Loss: 3.9508140087127686
city SachsenVor Determine whether the following statement or statements are plausible or implausible.


optimized
6 Loss: 3.904221296310425
city Sachsen layer Determine whether the following statement or statements are plausible or implausible.


optimized
14 Loss: 3.8007729053497314
city Sachsen layer Determine whether the following statement TODO statements are plausible or implausible.


optimized
23 Loss: 3.7083182334899902
city Sachsen layer Determine whether the following statement TODO statements are plausible or implaus DO.


optimized
25 Loss: 3.6978092193603516
city Sachsen layer Determine whether the following statement TODO statements are plausible or implaus DO.ThreadPool

Initial VF Loss: 1.5784021615982056
start vf pos optimization
optimized
30 Loss: 1.4034801721572876
citiesdefinedLprev西

optimized
31 Loss: 1.0989969968795776
citiesSdkLprev西

optimized
32 Loss: 0.9890627264976501
citiesSdk_prev西

optimized
33 Loss: 0.9019017815589905
citiesSdk_Percent西

34 Loss: 0.9019017815589905
citiesSdk_Percent西

1
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 23783, 7546, 5953, 837, 457, 3692, 278, 1494, 3229, 14402, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 23574, 29871, 10567, 29901, 29871, 19108, 21572, 13375, 9445, 278, 3081, 1456, 297, 278, 21631, 6536, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 23783, 7546, 5953, 837, 457, 3692, 278, 1494, 3229, 14402, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 23574, 29871, 10567, 29901, 29871, 435, 18852, 8622, 4630, 1562, 281, 2021, 287, 263, 10322, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 23783, 7546, 5953, 837, 457, 3692, 278, 1494, 3229, 14402, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 23574, 29871, 10567, 29901, 29871, 14317, 10837, 719, 3614, 385, 560, 17729, 432, 398, 546, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 23783, 7546, 5953, 837, 457, 3692, 278, 1494, 3229, 14402, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 23574, 29871, 10567, 29901, 29871, 1619, 793, 24215, 19355, 263, 23473, 285, 5059, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821]]
Initial Loss: 3.5225534439086914
start ij pos optimization
4 Loss: 3.5225534439086914
city Sachsen layer Determine whether the following statement TODO statements are plausible or implaus DO.ThreadPool

5 Loss: 3.5225534439086914
city Sachsen layer Determine whether the following statement TODO statements are plausible or implaus DO.ThreadPool

optimized
6 Loss: 3.4847254753112793
city Sachsen crashes Determine whether the following statement TODO statements are plausible or implaus DO.ThreadPool

optimized
14 Loss: 3.4559578895568848
city Sachsen crashes Determine whether the following statement DEFAULT statements are plausible or implaus DO.ThreadPool

23 Loss: 3.4559578895568848
city Sachsen crashes Determine whether the following statement DEFAULT statements are plausible or implaus DO.ThreadPool

optimized
25 Loss: 3.306591749191284
city Sachsen crashes Determine whether the following statement DEFAULT statements are plausible or implaus DO.setopt

Initial VF Loss: 0.9277353286743164
start vf pos optimization
optimized
30 Loss: 0.7517370581626892
palaceSdk_Percent西

optimized
31 Loss: 0.7454066276550293
palaceAccessorImpl_Percent西

optimized
32 Loss: 0.7192793488502502
palaceAccessorImpl predicatePercent西

optimized
33 Loss: 0.6887442469596863
palaceAccessorImpl predicatecircle西

34 Loss: 0.6887442469596863
palaceAccessorImpl predicatecircle西

2
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 23783, 21985, 5953, 837, 457, 3692, 278, 1494, 3229, 22236, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 28393, 29871, 10567, 29901, 29871, 315, 744, 17232, 279, 7124, 964, 263, 3765, 1708, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 23783, 21985, 5953, 837, 457, 3692, 278, 1494, 3229, 22236, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 28393, 29871, 10567, 29901, 29871, 20916, 22963, 5031, 9131, 18318, 263, 6023, 3204, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 23783, 21985, 5953, 837, 457, 3692, 278, 1494, 3229, 22236, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 28393, 29871, 10567, 29901, 29871, 1352, 23853, 830, 3582, 2355, 373, 2967, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 23783, 21985, 5953, 837, 457, 3692, 278, 1494, 3229, 22236, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 11662, 29889, 28393, 29871, 10567, 29901, 29871, 4335, 13015, 7124, 278, 1250, 23468, 28747, 29871, 10604, 29901, 29871]] [[2174, 375, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2174, 375, 1821]]
Initial Loss: 3.5751936435699463
start ij pos optimization
4 Loss: 3.5751936435699463
city Sachsen crashes Determine whether the following statement DEFAULT statements are plausible or implaus DO.setopt

optimized
5 Loss: 3.5455472469329834
city CBS crashes Determine whether the following statement DEFAULT statements are plausible or implaus DO.setopt

optimized
6 Loss: 2.647592544555664
city CBSBUG Determine whether the following statement DEFAULT statements are plausible or implaus DO.setopt

optimized
14 Loss: 2.6456732749938965
city CBSBUG Determine whether the following statement Updated statements are plausible or implaus DO.setopt

optimized
23 Loss: 2.5737786293029785
city CBSBUG Determine whether the following statement Updated statements are plausible or implaus MAX.setopt

25 Loss: 2.5737786293029785
city CBSBUG Determine whether the following statement Updated statements are plausible or implaus MAX.setopt

Initial VF Loss: 1.8892316818237305
start vf pos optimization
optimized
30 Loss: 1.86981201171875
championshipAccessorImpl predicatecircle西

optimized
31 Loss: 1.742730736732483
championship liga predicatecircle西

optimized
32 Loss: 1.6942074298858643
championship liga Nicolacircle西

optimized
33 Loss: 1.6451199054718018
championship liga Nicola Nicola西

optimized
34 Loss: 1.6231167316436768
championship liga Nicola Nicola sweet

3
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 25723, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 13680, 1332, 29875, 26921, 7124, 278, 2243, 424, 1209, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 25723, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 612, 9010, 323, 25664, 15469, 714, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 25723, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 27669, 7335, 29894, 728, 17096, 304, 937, 2967, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 25723, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 11535, 2963, 435, 554, 293, 4502, 278, 2653, 384, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821]]
Initial Loss: 2.3144898414611816
start ij pos optimization
4 Loss: 2.3144898414611816
city CBSBUG Determine whether the following statement Updated statements are plausible or implaus MAX.setopt

5 Loss: 2.3144898414611816
city CBSBUG Determine whether the following statement Updated statements are plausible or implaus MAX.setopt

6 Loss: 2.3144898414611816
city CBSBUG Determine whether the following statement Updated statements are plausible or implaus MAX.setopt

optimized
14 Loss: 2.2855234146118164
city CBSBUG Determine whether the following statement midst statements are plausible or implaus MAX.setopt

optimized
23 Loss: 2.274151563644409
city CBSBUG Determine whether the following statement midst statements are plausible or implaus RUN.setopt

25 Loss: 2.274151563644409
city CBSBUG Determine whether the following statement midst statements are plausible or implaus RUN.setopt

Initial VF Loss: 1.577924132347107
start vf pos optimization
optimized
30 Loss: 1.542487382888794
Liga liga Nicola Nicola sweet

31 Loss: 1.542487382888794
Liga liga Nicola Nicola sweet

32 Loss: 1.542487382888794
Liga liga Nicola Nicola sweet

optimized
33 Loss: 1.4986575841903687
Liga liga NicolaWikimedia sweet

34 Loss: 1.4986575841903687
Liga liga NicolaWikimedia sweet

4
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 29214, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 13783, 29875, 838, 2291, 17096, 304, 937, 2967, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 29214, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 10815, 1920, 13325, 11543, 278, 937, 1623, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 29214, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 341, 681, 4977, 4432, 915, 280, 17515, 5320, 17454, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 29214, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 1704, 1100, 399, 296, 29920, 3614, 304, 278, 14890, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2174, 375, 1821]]
Initial Loss: 2.192434787750244
start ij pos optimization
4 Loss: 2.192434787750244
city CBSBUG Determine whether the following statement midst statements are plausible or implaus RUN.setopt

5 Loss: 2.192434787750244
city CBSBUG Determine whether the following statement midst statements are plausible or implaus RUN.setopt

6 Loss: 2.192434787750244
city CBSBUG Determine whether the following statement midst statements are plausible or implaus RUN.setopt

optimized
14 Loss: 2.1537411212921143
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

23 Loss: 2.1537411212921143
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

25 Loss: 2.1537411212921143
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

Initial VF Loss: 1.4450390338897705
start vf pos optimization
30 Loss: 1.4450390338897705
Liga liga NicolaWikimedia sweet

31 Loss: 1.4450390338897705
Liga liga NicolaWikimedia sweet

optimized
32 Loss: 1.4083149433135986
Liga liga celebrWikimedia sweet

optimized
33 Loss: 1.3640495538711548
Liga liga celebr Maxim sweet

optimized
34 Loss: 1.3251250982284546
Liga liga celebr Maximmulticolumn

5
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 20916, 438, 29915, 1123, 9403, 7124, 278, 18875, 5782, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 5765, 5569, 9445, 278, 3081, 1456, 297, 278, 21631, 6536, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 11783, 498, 709, 264, 8560, 263, 20343, 22002, 280, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 27694, 29889, 28393, 29871, 10567, 29901, 29871, 28588, 1847, 2296, 29886, 538, 11543, 278, 937, 1623, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2174, 375, 1821], [2174, 375, 1821]]
Initial Loss: 2.0472137928009033
start ij pos optimization
4 Loss: 2.0472137928009033
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

5 Loss: 2.0472137928009033
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

6 Loss: 2.0472137928009033
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

14 Loss: 2.0472137928009033
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus RUN.setopt

optimized
23 Loss: 2.0453853607177734
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus MAX.setopt

25 Loss: 2.0453853607177734
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus MAX.setopt

Initial VF Loss: 1.3325839042663574
start vf pos optimization
30 Loss: 1.3325839042663574
Liga liga celebr Maximmulticolumn

31 Loss: 1.3325839042663574
Liga liga celebr Maximmulticolumn

32 Loss: 1.3325839042663574
Liga liga celebr Maximmulticolumn

33 Loss: 1.3325839042663574
Liga liga celebr Maximmulticolumn

optimized
34 Loss: 1.3253147602081299
Liga liga celebr Maxim ListView

6
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 323, 3357, 10522, 586, 737, 19807, 471, 9109, 472, 3271, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 476, 737, 261, 22740, 314, 3747, 21692, 278, 7254, 1196, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 4121, 11674, 2292, 914, 265, 3614, 304, 278, 14890, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 11578, 5953, 837, 457, 3692, 278, 1494, 3229, 18537, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 28393, 29871, 10567, 29901, 29871, 476, 1508, 1281, 15459, 12624, 278, 1250, 23468, 28747, 297, 278, 319, 8610, 22401, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2174, 375, 1821], [2411, 15273, 1821]]
Initial Loss: 3.4229061603546143
start ij pos optimization
4 Loss: 3.4229061603546143
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus MAX.setopt

5 Loss: 3.4229061603546143
city CBSBUG Determine whether the following statementusalem statements are plausible or implaus MAX.setopt

optimized
6 Loss: 2.1562085151672363
city CBSExtra Determine whether the following statementusalem statements are plausible or implaus MAX.setopt

optimized
14 Loss: 2.1473755836486816
city CBSExtra Determine whether the following statement Argentina statements are plausible or implaus MAX.setopt

23 Loss: 2.1473755836486816
city CBSExtra Determine whether the following statement Argentina statements are plausible or implaus MAX.setopt

optimized
25 Loss: 2.0774712562561035
city CBSExtra Determine whether the following statement Argentina statements are plausible or implaus MAX.eqref

Initial VF Loss: 1.5166358947753906
start vf pos optimization
optimized
30 Loss: 1.4672417640686035
Luis liga celebr Maxim ListView

31 Loss: 1.4672417640686035
Luis liga celebr Maxim ListView

optimized
32 Loss: 1.393760085105896
Luis liga extra Maxim ListView

optimized
33 Loss: 1.3069193363189697
Luis liga extraMAX ListView

optimized
34 Loss: 1.2619799375534058
Luis liga extraMAXScrollView

7
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 4272, 29589, 18126, 5953, 837, 457, 3692, 278, 1494, 3229, 13798, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 4915, 29871, 10567, 29901, 29871, 14317, 10837, 719, 3614, 385, 560, 17729, 432, 398, 546, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 18126, 5953, 837, 457, 3692, 278, 1494, 3229, 13798, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 4915, 29871, 10567, 29901, 29871, 6111, 382, 374, 2039, 264, 15569, 297, 4805, 931, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 18126, 5953, 837, 457, 3692, 278, 1494, 3229, 13798, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 4915, 29871, 10567, 29901, 29871, 29103, 997, 29963, 457, 30081, 20654, 278, 15905, 748, 491, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4272, 29589, 18126, 5953, 837, 457, 3692, 278, 1494, 3229, 13798, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 18134, 29889, 4915, 29871, 10567, 29901, 29871, 1281, 15459, 4052, 19504, 15569, 263, 27368, 24817, 29871, 10604, 29901, 29871]] [[2174, 375, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821]]
Initial Loss: 1.9381167888641357
start ij pos optimization
optimized
4 Loss: 1.8312914371490479
IM CBSExtra Determine whether the following statement Argentina statements are plausible or implaus MAX.eqref

5 Loss: 1.8312914371490479
IM CBSExtra Determine whether the following statement Argentina statements are plausible or implaus MAX.eqref

optimized
6 Loss: 1.8182899951934814
IM CBSEvents Determine whether the following statement Argentina statements are plausible or implaus MAX.eqref

optimized
14 Loss: 1.7985690832138062
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MAX.eqref

optimized
23 Loss: 1.7405695915222168
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

25 Loss: 1.7405695915222168
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

Initial VF Loss: 1.0721356868743896
start vf pos optimization
optimized
30 Loss: 0.9879481792449951
Ster liga extraMAXScrollView

31 Loss: 0.9879481792449951
Ster liga extraMAXScrollView

optimized
32 Loss: 0.890794575214386
Ster liga AMMAXScrollView

33 Loss: 0.890794575214386
Ster liga AMMAXScrollView

optimized
34 Loss: 0.8466698527336121
Ster liga AMMAXgresql

8
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 498, 29875, 4425, 25371, 7124, 263, 2323, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 319, 5022, 26817, 12624, 278, 1250, 23468, 28747, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 22864, 601, 2166, 598, 29920, 15905, 287, 263, 4866, 3748, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 8432, 10920, 285, 25443, 278, 8287, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821], [2411, 15273, 1821]]
Initial Loss: 1.4919655323028564
start ij pos optimization
4 Loss: 1.4919655323028564
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

5 Loss: 1.4919655323028564
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

6 Loss: 1.4919655323028564
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

14 Loss: 1.4919655323028564
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

23 Loss: 1.4919655323028564
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

25 Loss: 1.4919655323028564
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

Initial VF Loss: 0.8466698527336121
start vf pos optimization
30 Loss: 0.8466698527336121
Ster liga AMMAXgresql

optimized
31 Loss: 0.8345503807067871
Sterblem AMMAXgresql

32 Loss: 0.8345503807067871
Sterblem AMMAXgresql

33 Loss: 0.8345503807067871
Sterblem AMMAXgresql

34 Loss: 0.8345503807067871
Sterblem AMMAXgresql

9
[4, 5, 6, 14, 23, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 12603, 2679, 1335, 390, 1278, 4502, 278, 2653, 384, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 4827, 14929, 29878, 574, 7078, 3614, 263, 1250, 3179, 10322, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 12294, 638, 19897, 264, 3614, 263, 2211, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22313, 29589, 13634, 5953, 837, 457, 3692, 278, 1494, 3229, 22289, 9506, 526, 2174, 375, 1821, 470, 2411, 15273, 28982, 29889, 4915, 29871, 10567, 29901, 29871, 7870, 17483, 3512, 297, 1921, 29879, 701, 297, 278, 7824, 6536, 29871, 10604, 29901, 29871]] [[2411, 15273, 1821], [2411, 15273, 1821], [2174, 375, 1821], [2411, 15273, 1821]]
Initial Loss: 1.500478982925415
start ij pos optimization
4 Loss: 1.500478982925415
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

5 Loss: 1.500478982925415
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

6 Loss: 1.500478982925415
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

14 Loss: 1.500478982925415
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus MTV.eqref

optimized
23 Loss: 1.4989416599273682
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus Uruguay.eqref

optimized
25 Loss: 1.4934470653533936
IM CBSEvents Determine whether the following statement filtered statements are plausible or implaus Uruguay.dependent

Initial VF Loss: 0.7950214743614197
start vf pos optimization
optimized
30 Loss: 0.7870827317237854
Constantinblem AMMAXgresql

optimized
31 Loss: 0.7443699240684509
ConstantinMAP AMMAXgresql

32 Loss: 0.7443699240684509
ConstantinMAP AMMAXgresql

33 Loss: 0.7443699240684509
ConstantinMAP AMMAXgresql

34 Loss: 0.7443699240684509
ConstantinMAP AMMAXgresql

**********tense**********
0
[4, 5, 6, 9, 10, 16] [22, 23, 24, 25, 26]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 3382, 1598, 278, 260, 1947, 310, 263, 2183, 10541, 29889, 13, 29871, 10567, 29901, 29871, 2296, 471, 14586, 21435, 411, 1153, 479, 29889, 10726, 260, 1947, 304, 349, 15989, 3919, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 3382, 1598, 278, 260, 1947, 310, 263, 2183, 10541, 29889, 13, 29871, 10567, 29901, 29871, 887, 674, 451, 367, 471, 2790, 596, 22095, 29889, 10726, 260, 1947, 304, 17687, 1254, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 3382, 1598, 278, 260, 1947, 310, 263, 2183, 10541, 29889, 13, 29871, 10567, 29901, 29871, 306, 12500, 287, 297, 278, 19437, 29889, 10726, 260, 1947, 304, 22717, 3580, 1307, 17687, 1254, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 3382, 1598, 278, 260, 1947, 310, 263, 2183, 10541, 29889, 13, 29871, 10567, 29901, 29871, 450, 11781, 10614, 472, 29871, 29953, 288, 29915, 13058, 29889, 10726, 260, 1947, 304, 22717, 3580, 1307, 349, 15989, 3919, 29901, 29871, 29871, 10604, 29901, 29871]] [[450, 12871, 10742, 674, 505, 1833, 287, 2211, 11405, 29889], [940, 674, 451, 505, 4502, 278, 1243, 29889], [450, 715, 2807, 322, 670, 20255, 674, 505, 899, 672, 287, 599, 278, 716, 26205, 297, 278, 8450, 267, 1434, 896, 5967, 363, 278, 2446, 4982, 29889], [2296, 756, 4586, 278, 3872, 8842, 29889]]
Initial Loss: 9.932575225830078
start ij pos optimization
optimized
4 Loss: 5.544672012329102
ei sechsVor Modify the tense of a given sentence.


optimized
5 Loss: 4.342684268951416
ei allesVor Modify the tense of a given sentence.


6 Loss: 4.342684268951416
ei allesVor Modify the tense of a given sentence.


9 Loss: 4.342684268951416
ei allesVor Modify the tense of a given sentence.


optimized
10 Loss: 4.232751846313477
ei allesVor Modify the eense of a given sentence.


optimized
16 Loss: 4.159894943237305
ei allesVor Modify the eense of a given sentence Gru


Initial VF Loss: 3.668942928314209
start vf pos optimization
optimized
22 Loss: 2.9826161861419678
ellidefinedLprev西

optimized
23 Loss: 2.8129379749298096
elli RotLprev西

optimized
24 Loss: 2.5812325477600098
elli Rottereprev西

optimized
25 Loss: 2.3465075492858887
elli Rottereej西

26 Loss: 2.3465075492858887
elli Rottereej西

1
[4, 5, 6, 9, 10, 16] [22, 23, 24, 25, 26]
[[1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 278, 321, 1947, 310, 263, 2183, 10541, 5430, 13, 29871, 10567, 29901, 29871, 3087, 423, 338, 2805, 7960, 363, 3762, 29889, 10726, 260, 1947, 304, 17687, 1254, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 278, 321, 1947, 310, 263, 2183, 10541, 5430, 13, 29871, 10567, 29901, 29871, 1334, 6892, 13625, 12516, 599, 4208, 29889, 10726, 260, 1947, 304, 22717, 3580, 1307, 349, 15989, 3919, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 278, 321, 1947, 310, 263, 2183, 10541, 5430, 13, 29871, 10567, 29901, 29871, 940, 750, 4586, 594, 6737, 297, 6346, 10726, 260, 1947, 304, 383, 2692, 11499, 349, 1001, 29943, 13845, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 278, 321, 1947, 310, 263, 2183, 10541, 5430, 13, 29871, 10567, 29901, 29871, 306, 674, 367, 8471, 297, 341, 3774, 1794, 29889, 10726, 260, 1947, 304, 17687, 1254, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871]] [[887, 1258, 451, 1106, 9796, 304, 1074, 592, 29889], [2688, 674, 367, 8743, 5733, 297, 393, 1746, 29889], [450, 9045, 14311, 750, 8459, 393, 599, 4344, 881, 367, 5198, 348, 1891, 2750, 1757, 292, 23448, 29889], [16939, 2518, 674, 505, 8676, 902, 13620, 12779, 30010, 29879, 360, 387, 929, 491, 5306, 29889, 29871]]
Initial Loss: 3.8485820293426514
start ij pos optimization
4 Loss: 3.8485820293426514
ei allesVor Modify the eense of a given sentence Gru


5 Loss: 3.8485820293426514
ei allesVor Modify the eense of a given sentence Gru


6 Loss: 3.8485820293426514
ei allesVor Modify the eense of a given sentence Gru


optimized
9 Loss: 3.7850589752197266
ei allesVor ModifyLinearLayout eense of a given sentence Gru


10 Loss: 3.7850589752197266
ei allesVor ModifyLinearLayout eense of a given sentence Gru


optimized
16 Loss: 3.731294631958008
ei allesVor ModifyLinearLayout eense of a given sentence Armen


Initial VF Loss: 2.4867448806762695
start vf pos optimization
optimized
22 Loss: 2.340027332305908
UTF Rottereej西

optimized
23 Loss: 2.090264081954956
UTF complettereej西

optimized
24 Loss: 2.051497220993042
UTF complet Medienej西

25 Loss: 2.051497220993042
UTF complet Medienej西

optimized
26 Loss: 2.0043928623199463
UTF complet Medienejmedi

2
[4, 5, 6, 9, 10, 16] [22, 23, 24, 25, 26]
[[1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 15575, 321, 1947, 310, 263, 2183, 10541, 19549, 13, 29871, 10567, 29901, 29871, 450, 20026, 471, 623, 433, 566, 292, 2745, 540, 8379, 1283, 278, 7408, 29889, 10726, 260, 1947, 304, 17687, 1254, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 15575, 321, 1947, 310, 263, 2183, 10541, 19549, 13, 29871, 10567, 29901, 29871, 306, 471, 5007, 7456, 373, 1422, 23820, 29889, 10726, 260, 1947, 304, 383, 2692, 11499, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 15575, 321, 1947, 310, 263, 2183, 10541, 19549, 13, 29871, 10567, 29901, 29871, 306, 505, 1063, 19912, 1075, 304, 437, 278, 3414, 1434, 306, 4687, 278, 1824, 29889, 10726, 260, 1947, 304, 17687, 1254, 349, 1001, 29943, 13845, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 15575, 321, 1947, 310, 263, 2183, 10541, 19549, 13, 29871, 10567, 29901, 29871, 306, 505, 1063, 23623, 1422, 17690, 310, 12516, 29892, 7148, 5400, 6743, 29889, 10726, 260, 1947, 304, 383, 2692, 11499, 349, 1001, 29943, 13845, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871]] [[306, 674, 367, 17394, 3262, 472, 278, 360, 29882, 8245, 4623, 27226, 13822, 411, 590, 27008, 8099, 29889], [2296, 756, 7436, 363, 278, 4982, 29889], [940, 29915, 29879, 23382, 263, 716, 4086, 472, 278, 3256, 29889], [2439, 4223, 674, 367, 4857, 1747, 29889]]
Initial Loss: 3.8804931640625
start ij pos optimization
4 Loss: 3.8804931640625
ei allesVor ModifyLinearLayout eense of a given sentence Armen


5 Loss: 3.8804931640625
ei allesVor ModifyLinearLayout eense of a given sentence Armen


6 Loss: 3.8804931640625
ei allesVor ModifyLinearLayout eense of a given sentence Armen


optimized
9 Loss: 3.8599185943603516
ei allesVor ModifyBound eense of a given sentence Armen


10 Loss: 3.8599185943603516
ei allesVor ModifyBound eense of a given sentence Armen


optimized
16 Loss: 3.8544399738311768
ei allesVor ModifyBound eense of a given sentenceggreg


Initial VF Loss: 1.9863719940185547
start vf pos optimization
optimized
22 Loss: 1.8331141471862793
checkbox complet Medienejmedi

23 Loss: 1.8331141471862793
checkbox complet Medienejmedi

24 Loss: 1.8331141471862793
checkbox complet Medienejmedi

25 Loss: 1.8331141471862793
checkbox complet Medienejmedi

26 Loss: 1.8331141471862793
checkbox complet Medienejmedi

3
[4, 5, 6, 9, 10, 16] [22, 23, 24, 25, 26]
[[1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 26127, 13, 29871, 10567, 29901, 29871, 2648, 278, 931, 366, 2355, 1250, 515, 301, 3322, 29892, 591, 750, 7743, 5007, 278, 8721, 29889, 10726, 260, 1947, 304, 383, 2692, 11499, 349, 1001, 29943, 13845, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 26127, 13, 29871, 10567, 29901, 29871, 306, 27222, 30010, 29873, 4520, 738, 8908, 515, 1075, 29889, 10726, 260, 1947, 304, 349, 15989, 3919, 349, 1001, 29943, 13845, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 26127, 13, 29871, 10567, 29901, 29871, 16477, 338, 16246, 297, 278, 11774, 29889, 10726, 260, 1947, 304, 383, 2692, 11499, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 26127, 13, 29871, 10567, 29901, 29871, 350, 837, 538, 756, 3971, 263, 5497, 363, 670, 5637, 29889, 10726, 260, 1947, 304, 383, 2692, 11499, 349, 1001, 29943, 13845, 29901, 29871, 29871, 10604, 29901, 29871]] [[1334, 750, 1063, 11418, 5414, 278, 1824, 26606, 363, 2211, 6199, 29889], [2296, 674, 505, 7984, 287, 17803, 29889], [306, 674, 5941, 590, 5716, 297, 278, 7250, 29889], [1334, 526, 451, 2534, 2090, 472, 278, 6263, 29889]]
Initial Loss: 3.811525821685791
start ij pos optimization
4 Loss: 3.811525821685791
ei allesVor ModifyBound eense of a given sentenceggreg


5 Loss: 3.811525821685791
ei allesVor ModifyBound eense of a given sentenceggreg


6 Loss: 3.811525821685791
ei allesVor ModifyBound eense of a given sentenceggreg


9 Loss: 3.811525821685791
ei allesVor ModifyBound eense of a given sentenceggreg


10 Loss: 3.811525821685791
ei allesVor ModifyBound eense of a given sentenceggreg


optimized
16 Loss: 3.754962921142578
ei allesVor ModifyBound eense of a given sentence Agr


Initial VF Loss: 1.7319365739822388
start vf pos optimization
optimized
22 Loss: 1.6629101037979126
django complet Medienejmedi

23 Loss: 1.6629101037979126
django complet Medienejmedi

24 Loss: 1.6629101037979126
django complet Medienejmedi

25 Loss: 1.6629101037979126
django complet Medienejmedi

26 Loss: 1.6629101037979126
django complet Medienejmedi

4
[4, 5, 6, 9, 10, 16] [22, 23, 24, 25, 26]
[[1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 16503, 13, 29871, 10567, 29901, 29871, 1334, 505, 321, 2579, 278, 1869, 15713, 1244, 29889, 10726, 260, 1947, 304, 349, 15989, 3919, 349, 1001, 29943, 13845, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 16503, 13, 29871, 10567, 29901, 29871, 1334, 892, 451, 2534, 2090, 472, 278, 6263, 29889, 10726, 260, 1947, 304, 349, 15989, 3919, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 16503, 13, 29871, 10567, 29901, 29871, 450, 289, 2209, 756, 1497, 372, 723, 367, 263, 1472, 11781, 29889, 10726, 260, 1947, 304, 17687, 1254, 349, 1001, 29943, 13845, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10096, 24981, 14147, 3382, 1598, 17109, 321, 1947, 310, 263, 2183, 10541, 16503, 13, 29871, 10567, 29901, 29871, 16477, 338, 16246, 297, 278, 11774, 29889, 10726, 260, 1947, 304, 383, 2692, 11499, 8707, 29911, 1177, 29965, 29949, 3308, 29901, 29871, 29871, 10604, 29901, 29871]] [[739, 947, 451, 4383, 29889], [1551, 278, 916, 1361, 29892, 727, 884, 505, 1063, 25486, 304, 7952, 292, 472, 3271, 304, 6559, 29889], [2296, 750, 471, 17143, 902, 6567, 1434, 1183, 7984, 287, 278, 17803, 29889], [11644, 5148, 1156, 17319, 2305, 29973]]
Initial Loss: 3.824092149734497
start ij pos optimization
4 Loss: 3.824092149734497
ei allesVor ModifyBound eense of a given sentence Agr


5 Loss: 3.824092149734497
ei allesVor ModifyBound eense of a given sentence Agr


6 Loss: 3.824092149734497
ei allesVor ModifyBound eense of a given sentence Agr


9 Loss: 3.824092149734497
ei allesVor ModifyBound eense of a given sentence Agr


10 Loss: 3.824092149734497
ei allesVor ModifyBound eense of a given sentence Agr


16 Loss: 3.824092149734497
ei allesVor ModifyBound eense of a given sentence Agr


Initial VF Loss: 1.6629101037979126
start vf pos optimization
22 Loss: 1.6629101037979126
django complet Medienejmedi


No improvement, ending iteration
23 Loss: 1.6629101037979126
django complet Medienejmedi

**********question_selection**********
0
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 263, 3273, 1234, 3412, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 2183, 3273, 1234, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 23772, 29879, 297, 278, 3031, 29884, 770, 15228, 29901, 19454, 278, 1880, 2602, 2183, 304, 23772, 29879, 29892, 777, 24833, 310, 278, 612, 12323, 2812, 546, 943, 2775, 873, 2313, 20386, 630, 2750, 963, 29892, 9250, 292, 8142, 284, 8370, 6129, 357, 322, 916, 16427, 293, 23274, 763, 9942, 29883, 2459, 29892, 408, 1532, 408, 17457, 2276, 541, 305, 3241, 363, 22057, 29892, 28172, 963, 304, 17545, 9687, 278, 21952, 324, 982, 29889, 22578, 538, 278, 1095, 29892, 1034, 18953, 322, 278, 639, 3471, 918, 3897, 577, 22261, 393, 23772, 1176, 1338, 8772, 7169, 10013, 297, 15121, 7807, 2750, 278, 21952, 3775, 29889, 450, 341, 292, 25331, 796, 6905, 27669, 4096, 11895, 750, 23772, 1176, 1338, 763, 18273, 27669, 1058, 337, 6596, 839, 2750, 278, 21952, 3775, 322, 16235, 963, 297, 15499, 29889, 3834, 23772, 23507, 750, 263, 10013, 23403, 607, 6839, 376, 1646, 336, 4684, 29908, 322, 1033, 884, 2099, 376, 386, 1331, 1642, 9267, 379, 1481, 23772, 29879, 5995, 445, 338, 1363, 393, 896, 5318, 385, 4100, 6297, 297, 975, 20539, 292, 278, 21952, 3775, 322, 372, 471, 2183, 297, 3969, 491, 278, 7169, 10013, 363, 6985, 292, 963, 29889, 7133, 278, 1370, 17770, 278, 21952, 3775, 29892, 4249, 278, 341, 292, 18075, 796, 6905, 27669, 4096, 11895, 29915, 29879, 5075, 583, 471, 278, 379, 1481, 23772, 383, 996, 1383, 996, 29889, 450, 23772, 29879, 297, 278, 3031, 29884, 770, 884, 13819, 9446, 2750, 278, 612, 12323, 22337, 29891, 297, 278, 306, 1028, 801, 12936, 514, 291, 541, 278, 337, 12562, 291, 471, 2181, 15392, 322, 278, 23772, 29879, 892, 4158, 562, 1127, 491, 278, 612, 12323, 28108, 391, 22079, 21589, 887, 8497, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 263, 3273, 1234, 3412, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 2183, 3273, 1234, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 9723, 1092, 15228, 29901, 28609, 278, 4688, 29871, 29896, 29929, 29947, 29900, 29879, 29892, 13661, 471, 263, 4655, 2752, 310, 4094, 21180, 918, 29889, 8512, 1784, 18577, 322, 2114, 3842, 508, 367, 1476, 3412, 278, 7861, 457, 701, 964, 28806, 29892, 372, 338, 3412, 278, 27723, 7861, 457, 393, 278, 21610, 310, 963, 526, 14953, 630, 29892, 408, 278, 8580, 14517, 278, 4655, 14368, 310, 315, 13835, 29892, 28901, 322, 360, 4664, 3074, 29889, 360, 4664, 3074, 338, 278, 3271, 310, 4092, 29915, 29879, 10150, 297, 1049, 2011, 322, 3168, 408, 263, 19766, 304, 278, 7205, 16169, 310, 9664, 357, 16846, 29892, 5459, 14485, 322, 17399, 29889, 450, 9723, 1092, 29892, 607, 26205, 278, 7861, 457, 297, 360, 4664, 3074, 29892, 338, 1286, 328, 1036, 263, 5941, 8580, 29892, 3969, 304, 263, 10296, 310, 851, 293, 357, 29380, 11761, 29892, 263, 9558, 515, 9416, 13661, 304, 3578, 13661, 322, 5941, 786, 15366, 29892, 1316, 408, 278, 337, 1454, 342, 362, 310, 317, 3110, 322, 17354, 9621, 29889, 450, 9723, 1092, 5279, 8128, 278, 5120, 411, 13748, 292, 4094, 29889, 739, 640, 5026, 29871, 29955, 29900, 286, 29941, 29914, 29879, 313, 29906, 29892, 29945, 29900, 29900, 2723, 11791, 29914, 29879, 29897, 304, 278, 7861, 457, 29889, 5901, 27515, 297, 278, 9723, 1092, 18320, 29892, 2038, 599, 29892, 278, 2812, 19996, 29892, 1603, 8677, 263, 15620, 7426, 310, 21180, 918, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 263, 3273, 1234, 3412, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 2183, 3273, 1234, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 14165, 3944, 15228, 29901, 450, 14165, 3944, 3614, 385, 4688, 3275, 297, 5670, 27207, 29871, 29945, 29900, 322, 2360, 1020, 2356, 29889, 19017, 471, 9078, 491, 3384, 369, 29915, 29879, 26406, 29892, 607, 269, 547, 287, 1075, 9881, 3064, 322, 11826, 1075, 964, 2211, 24562, 874, 29892, 3704, 263, 285, 15563, 607, 896, 24776, 363, 263, 6023, 3204, 29889, 3384, 369, 1196, 1627, 261, 9299, 16498, 471, 4257, 5670, 27207, 341, 18510, 29892, 16867, 5320, 6651, 22002, 793, 29892, 29871, 29906, 30226, 269, 26514, 29892, 322, 1023, 11826, 285, 3774, 793, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 263, 3273, 1234, 3412, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 2183, 3273, 1234, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29896, 29953, 29947, 29947, 29994, 29896, 29953, 29929, 29906, 15228, 29901, 17166, 6354, 10761, 297, 12727, 15996, 5112, 3302, 322, 26014, 2645, 278, 2678, 1602, 3076, 310, 278, 29871, 29896, 29955, 386, 6462, 29889, 3118, 310, 278, 1900, 6455, 310, 445, 11258, 526, 476, 3417, 29875, 10587, 24537, 313, 29896, 29953, 29955, 29955, 29994, 29896, 29953, 29947, 29941, 511, 4624, 273, 2165, 24537, 313, 29896, 29953, 29955, 29955, 29994, 29896, 29953, 29929, 29953, 29897, 322, 624, 29889, 15198, 326, 15952, 6291, 313, 29896, 29953, 29947, 29947, 29994, 29896, 29953, 29929, 29906, 467, 450, 1556, 21210, 573, 6455, 310, 696, 29883, 6235, 11258, 526, 15185, 481, 2574, 24537, 313, 29896, 29955, 29896, 29906, 29994, 29896, 29955, 29906, 29896, 511, 24537, 310, 278, 12458, 399, 12772, 313, 29896, 29955, 29941, 29900, 29879, 29897, 322, 5741, 7018, 391, 6291, 313, 5444, 30019, 1943, 29871, 29896, 29955, 29906, 29947, 29994, 29896, 29955, 29953, 29896, 467, 450, 452, 542, 605, 936, 11258, 297, 9149, 1450, 508, 367, 5439, 491, 278, 23205, 310, 278, 28855, 16888, 7190, 734, 2795, 411, 263, 2107, 8681, 12232, 515, 278, 5917, 3785, 29889, 3834, 310, 278, 1900, 6455, 310, 278, 452, 542, 605, 936, 3114, 526, 278, 24537, 373, 278, 13062, 313, 276, 16145, 29871, 29896, 29955, 29955, 29945, 29994, 29896, 29955, 29929, 29945, 511, 476, 6830, 5081, 2753, 423, 313, 29896, 29955, 29947, 29906, 29994, 29896, 29955, 29947, 29953, 511, 1704, 12873, 568, 6291, 313, 5444, 30019, 1943, 29871, 29896, 29955, 29953, 29896, 29994, 29896, 29955, 29947, 29941, 29897, 322, 21827, 936, 17733, 1605, 13593, 6291, 313, 29896, 29955, 29955, 29955, 29994, 29896, 29955, 29947, 29906, 467, 450, 17407, 14321, 2645, 278, 937, 2440, 310, 11559, 18898, 8581, 263, 10952, 14451, 11258, 29889, 450, 2448, 542, 605, 936, 6664, 2561, 15201, 599, 21420, 310, 11258, 29892, 278, 1556, 18697, 526, 278, 7027, 16150, 313, 29896, 29947, 29906, 29945, 29994, 29896, 29947, 29941, 29941, 29897, 322, 13814, 5982, 472, 10253, 19256, 313, 29896, 29947, 29906, 29945, 29994, 29896, 29947, 29906, 29947, 467, 29871, 10604, 29901, 29871]] [[1724, 338, 278, 1556, 3619, 8252, 363, 5644, 9382, 451, 27719, 297, 1438, 4251, 29973], [11644, 471, 278, 3748, 29915, 29879, 1900, 9377, 449, 29973], [512, 278, 29871, 29906, 29900, 29896, 29945, 4259, 29892, 1058, 363, 278, 12246, 3944, 11826, 3023, 285, 3774, 793, 29973], [1932, 1258, 1766, 535, 29875, 1510, 1283, 670, 7155, 29973]]
Initial Loss: 14.987156867980957
start ij pos optimization
optimized
4 Loss: 11.586360931396484
macro sechsVor Given a short answer along with its context, select the most appropriate question which has the given short answer as its answer.


optimized
5 Loss: 9.139512062072754
macroifsVor Given a short answer along with its context, select the most appropriate question which has the given short answer as its answer.


optimized
6 Loss: 8.68697452545166
macroifs wa Given a short answer along with its context, select the most appropriate question which has the given short answer as its answer.


optimized
11 Loss: 8.55388355255127
macroifs wa Given a short answertransition with its context, select the most appropriate question which has the given short answer as its answer.


optimized
24 Loss: 8.506848335266113
macroifs wa Given a short answertransition with its context, select the most appropriate question which has the garant short answer as its answer.


optimized
26 Loss: 8.491897583007812
macroifs wa Given a short answertransition with its context, select the most appropriate question which has the garant short pel as its answer.


Initial VF Loss: 2.7245571613311768
start vf pos optimization
optimized
36 Loss: 2.3285927772521973
difdefinedLprev西

37 Loss: 2.3285927772521973
difdefinedLprev西

optimized
38 Loss: 2.1820590496063232
difdefined Asyncprev西

optimized
39 Loss: 2.0255625247955322
difdefined Async gates西

optimized
40 Loss: 1.8596036434173584
difdefined Async gatesumar

1
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 25254, 10270, 11324, 11221, 263, 3273, 1234, 20543, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 27510, 3273, 4639, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 1570, 3088, 4412, 9105, 383, 1611, 3156, 997, 13211, 423, 15228, 29901, 1551, 29871, 29896, 29900, 5490, 29871, 29896, 29929, 29946, 29941, 29892, 1570, 3088, 4412, 9105, 383, 1611, 3156, 997, 13211, 423, 1303, 263, 321, 352, 6933, 3971, 491, 24917, 29872, 29899, 14689, 4148, 5899, 11783, 293, 5735, 975, 278, 399, 29940, 29979, 29907, 7155, 1550, 5537, 262, 12785, 376, 29909, 345, 6217, 29908, 322, 376, 29911, 10178, 270, 744, 2901, 29908, 892, 5318, 297, 278, 3239, 29889, 1551, 29871, 29896, 29906, 5490, 29892, 1023, 10405, 2305, 14283, 263, 2106, 2090, 13537, 363, 323, 267, 433, 472, 278, 315, 21471, 310, 4107, 2259, 278, 4910, 457, 29889, 2860, 278, 2090, 13537, 29892, 323, 267, 433, 29915, 29879, 3573, 471, 4586, 304, 278, 7139, 695, 2593, 315, 22875, 297, 826, 6289, 2330, 29892, 1570, 3088, 29892, 988, 372, 471, 2678, 907, 29885, 630, 29889, 450, 1494, 2462, 29892, 263, 1473, 2669, 471, 18043, 491, 19555, 3691, 9197, 297, 278, 1605, 13593, 13741, 295, 313, 27765, 29915, 29879, 1816, 22863, 23757, 17324, 315, 21471, 310, 4107, 317, 879, 29897, 297, 1570, 3088, 4412, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25254, 10270, 11324, 11221, 263, 3273, 1234, 20543, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 27510, 3273, 4639, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29896, 29906, 29900, 29953, 15228, 29901, 402, 996, 22880, 18915, 443, 1573, 278, 21952, 324, 322, 16559, 293, 29201, 310, 278, 1886, 407, 267, 322, 3897, 7027, 18915, 297, 29871, 29896, 29906, 29900, 29953, 29889, 940, 322, 670, 2551, 943, 17832, 278, 21952, 324, 3710, 533, 4822, 14325, 29889, 7634, 278, 20913, 310, 402, 996, 22880, 29915, 4654, 1487, 29892, 6450, 29887, 2742, 29875, 18915, 29892, 278, 21952, 3775, 14416, 278, 8062, 6419, 29779, 22337, 29891, 297, 29871, 29896, 29906, 29941, 29946, 29892, 14942, 3241, 1556, 310, 14622, 7551, 29889, 6450, 29887, 2742, 29875, 12520, 670, 23446, 13636, 29024, 433, 29875, 263, 2602, 297, 1060, 292, 29920, 10774, 29892, 18472, 10096, 29889, 29024, 433, 29875, 471, 9368, 304, 1303, 10013, 541, 750, 3196, 7169, 10013, 27335, 10959, 304, 1075, 1951, 670, 4688, 2440, 491, 670, 5637, 317, 990, 29882, 351, 400, 3270, 29889, 940, 18365, 278, 2613, 2838, 310, 10013, 28234, 391, 322, 10811, 29884, 28445, 25228, 414, 29889, 341, 29997, 865, 446, 18915, 14792, 6450, 29887, 2742, 29875, 29915, 29879, 1487, 29892, 26315, 29891, 21495, 29892, 408, 7027, 18915, 297, 29871, 29896, 29906, 29945, 29896, 29889, 940, 16896, 670, 8099, 29024, 433, 29875, 2761, 975, 21952, 324, 4934, 5884, 3842, 297, 7551, 29889, 29024, 433, 29875, 4240, 12462, 363, 10811, 29884, 28445, 1364, 324, 1503, 29892, 16610, 5650, 6909, 29892, 6664, 2347, 10013, 10421, 27101, 29892, 322, 1095, 943, 287, 24833, 393, 20436, 7964, 18032, 3631, 322, 12128, 14321, 29889, 940, 16356, 408, 670, 7483, 4272, 13680, 666, 292, 297, 25665, 21952, 18001, 29892, 2678, 19533, 27468, 700, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25254, 10270, 11324, 11221, 263, 3273, 1234, 20543, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 27510, 3273, 4639, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 7236, 4667, 6498, 15228, 29901, 11717, 29915, 29879, 24431, 471, 2253, 19098, 1135, 1383, 381, 2330, 29915, 29879, 29892, 607, 471, 10548, 491, 1570, 3444, 29915, 29879, 20221, 29892, 278, 1085, 7680, 316, 12549, 566, 276, 20806, 29889, 940, 750, 19434, 1063, 15041, 1048, 278, 10410, 11421, 1196, 304, 278, 363, 1372, 373, 278, 15821, 29892, 322, 750, 2665, 15991, 6065, 29895, 585, 304, 3275, 278, 822, 11259, 472, 13960, 264, 562, 2750, 1383, 381, 2330, 29915, 29879, 3806, 5337, 29889, 1932, 11717, 471, 3595, 408, 278, 7200, 28469, 29892, 12549, 566, 276, 20806, 2665, 6065, 29895, 585, 304, 7236, 624, 29889, 4693, 2487, 9989, 304, 5870, 393, 28469, 29889, 6065, 29895, 585, 20458, 304, 5337, 278, 4908, 2094, 1160, 358, 472, 7236, 9300, 472, 278, 7568, 1095, 310, 11322, 373, 278, 25850, 6163, 29892, 541, 11717, 750, 13818, 5162, 2164, 372, 29892, 322, 6065, 29895, 585, 29915, 29879, 7560, 2304, 471, 1104, 5313, 424, 304, 5337, 29889, 450, 1023, 8249, 7146, 1539, 297, 278, 6668, 1486, 12788, 310, 9459, 5122, 1546, 7236, 9300, 322, 7236, 4667, 6498, 29889, 450, 10555, 9698, 22629, 7009, 3598, 29892, 411, 1716, 11192, 28679, 292, 515, 278, 1746, 29889, 11717, 29915, 29879, 6564, 11084, 472, 7236, 4667, 6498, 29892, 322, 278, 5176, 411, 29881, 3973, 304, 323, 4144, 672, 14895, 8984, 29892, 988, 896, 4689, 278, 7632, 310, 7236, 1704, 12794, 313, 29880, 1008, 19533, 7236, 323, 4144, 672, 14895, 1156, 4908, 10446, 297, 29871, 29896, 29955, 29945, 29929, 467, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25254, 10270, 11324, 11221, 263, 3273, 1234, 20543, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 27510, 3273, 4639, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 10261, 15228, 29901, 450, 15588, 471, 451, 9090, 4822, 4092, 29889, 4587, 278, 14183, 5144, 310, 278, 7824, 12884, 293, 19184, 313, 29923, 11206, 511, 278, 24553, 20050, 263, 4866, 15588, 29892, 278, 10261, 322, 3444, 4520, 4359, 443, 1639, 14214, 28075, 313, 29882, 5555, 15964, 304, 2758, 6813, 304, 671, 1009, 4799, 9621, 322, 15588, 287, 10188, 322, 28075, 304, 1716, 278, 10387, 29879, 322, 278, 11996, 275, 511, 1550, 278, 916, 4832, 20050, 7687, 5700, 1627, 29879, 29889, 450, 10261, 750, 11399, 635, 1063, 385, 394, 368, 310, 11996, 29892, 322, 25422, 13015, 29915, 29879, 5874, 6969, 278, 11996, 275, 2645, 278, 18372, 29899, 12742, 3362, 29889, 3600, 29433, 29892, 22040, 940, 493, 29892, 18764, 287, 445, 8898, 297, 29871, 29896, 29929, 29955, 29900, 29892, 5432, 363, 11996, 304, 28679, 304, 967, 758, 29899, 29896, 29929, 29953, 29955, 28199, 29889, 29871, 10604, 29901, 29871]] [[11644, 4846, 278, 885, 327, 1049, 1044, 310, 29871, 29896, 29929, 29929, 29947, 902, 15150, 1223, 296, 29973], [450, 16372, 310, 1208, 6557, 423, 756, 920, 1784, 4242, 6394, 29973], [1128, 1784, 2305, 505, 6423, 297, 19548, 16440, 328, 408, 263, 1121, 310, 278, 715, 3437, 29973], [6804, 1258, 278, 4823, 22337, 29891, 10933, 304, 281, 276, 557, 20771, 542, 373, 413, 431, 433, 29875, 29915, 29879, 20913, 29973]]
Initial Loss: 7.5460591316223145
start ij pos optimization
optimized
4 Loss: 6.252160549163818
strifs wa Given a short answertransition with its context, select the most appropriate question which has the garant short pel as its answer.


optimized
5 Loss: 5.400824069976807
strations wa Given a short answertransition with its context, select the most appropriate question which has the garant short pel as its answer.


6 Loss: 5.400824069976807
strations wa Given a short answertransition with its context, select the most appropriate question which has the garant short pel as its answer.


optimized
11 Loss: 5.158658504486084
strations wa Given a short answer Hamiltonian with its context, select the most appropriate question which has the garant short pel as its answer.


optimized
24 Loss: 5.0057291984558105
strations wa Given a short answer Hamiltonian with its context, select the most appropriate question which has theumar short pel as its answer.


optimized
26 Loss: 4.930215835571289
strations wa Given a short answer Hamiltonian with its context, select the most appropriate question which has theumar shortconsin as its answer.


Initial VF Loss: 1.432963252067566
start vf pos optimization
optimized
36 Loss: 1.3005050420761108
WebViewdefined Async gatesumar

37 Loss: 1.3005050420761108
WebViewdefined Async gatesumar

optimized
38 Loss: 1.247355580329895
WebViewdefined jel gatesumar

optimized
39 Loss: 1.2133421897888184
WebViewdefined jel spiteumar

optimized
40 Loss: 1.1623656749725342
WebViewdefined jel spiteython

2
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 851, 800, 11324, 11221, 263, 3273, 1234, 27752, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 24540, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29896, 29941, 29906, 7284, 23864, 15228, 29901, 24206, 29915, 29879, 315, 1964, 5690, 6156, 28421, 756, 17005, 278, 5253, 310, 19786, 8608, 287, 491, 8805, 515, 278, 24246, 2518, 304, 278, 16631, 29901, 385, 6588, 29871, 29896, 29947, 29906, 7284, 23864, 310, 19786, 526, 8805, 29890, 677, 29876, 714, 310, 278, 24246, 2518, 1269, 1629, 29892, 472, 29871, 29896, 29945, 14496, 5833, 28745, 29892, 4822, 29871, 29896, 29892, 29953, 29900, 29900, 7800, 313, 29906, 29892, 29953, 29900, 29900, 2383, 29897, 975, 278, 19948, 21091, 313, 5372, 19786, 20074, 964, 278, 19948, 511, 769, 472, 29871, 29941, 29945, 14496, 3122, 28745, 472, 278, 18632, 12180, 310, 4275, 6813, 29892, 29871, 29906, 29955, 29889, 29955, 7284, 23864, 313, 29896, 29945, 10997, 310, 19786, 6416, 975, 278, 16631, 2362, 262, 29892, 29871, 29896, 29941, 29906, 7284, 23864, 310, 19786, 3933, 297, 278, 4799, 29892, 29871, 29946, 29941, 7284, 23864, 310, 19786, 526, 8805, 29890, 677, 29876, 322, 20074, 373, 278, 1704, 747, 14471, 14070, 29892, 4940, 29871, 29955, 29945, 14496, 5833, 28745, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 851, 800, 11324, 11221, 263, 3273, 1234, 27752, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 24540, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 278, 4088, 15228, 29901, 7133, 278, 4223, 12886, 3362, 29892, 278, 4644, 8052, 363, 278, 4088, 29889, 512, 263, 21000, 304, 11581, 1570, 27193, 322, 278, 9656, 484, 29892, 315, 456, 5872, 29915, 29879, 394, 3687, 29892, 278, 2522, 1862, 29892, 15468, 278, 4726, 310, 1570, 18712, 29889, 512, 29871, 29896, 29953, 29946, 29946, 278, 2522, 1862, 769, 15468, 278, 15561, 1454, 1133, 5162, 2450, 373, 278, 997, 705, 297, 4275, 1383, 969, 29879, 1494, 263, 2686, 479, 29889, 512, 29871, 29896, 29953, 29946, 29946, 278, 4272, 471, 769, 3008, 347, 3192, 363, 1784, 7378, 322, 471, 10201, 14280, 287, 6702, 2541, 696, 4362, 24103, 4467, 1495, 322, 269, 547, 287, 491, 315, 456, 5872, 29915, 29879, 394, 3687, 29889, 450, 28656, 4088, 1900, 20937, 278, 3184, 517, 376, 29943, 441, 1524, 5282, 355, 277, 8602, 19149, 550, 29908, 4852, 29911, 16241, 561, 292, 491, 263, 26565, 28399, 1159, 2501, 278, 4726, 29889, 5322, 306, 471, 29535, 287, 297, 1570, 27193, 491, 278, 2522, 1862, 297, 29871, 29896, 29953, 29946, 29953, 29994, 29955, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 851, 800, 11324, 11221, 263, 3273, 1234, 27752, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 24540, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 4726, 18701, 15228, 29901, 24760, 1754, 670, 11504, 1309, 29883, 4110, 515, 399, 442, 3074, 297, 278, 3030, 310, 10952, 2693, 1860, 472, 399, 16097, 2552, 29892, 310, 607, 540, 471, 8126, 8072, 23388, 29889, 21186, 8425, 9516, 29892, 6969, 491, 278, 429, 29899, 26197, 262, 713, 18672, 12017, 8873, 29892, 7232, 935, 287, 373, 263, 24818, 19607, 310, 11736, 727, 297, 5306, 29871, 29896, 29945, 29906, 29896, 29892, 13461, 292, 3099, 427, 1730, 4063, 491, 24760, 29889, 450, 337, 9514, 1326, 12504, 1320, 25006, 778, 29892, 3704, 263, 13819, 29873, 491, 278, 3111, 262, 713, 3484, 1503, 2750, 1009, 7536, 29892, 278, 1560, 1161, 292, 310, 1002, 1041, 322, 4558, 297, 26014, 29892, 322, 972, 11173, 800, 310, 278, 2320, 391, 10068, 29889, 2860, 7035, 368, 6493, 292, 399, 16097, 2552, 297, 4688, 5846, 29871, 29896, 29945, 29906, 29896, 29892, 24760, 5456, 319, 317, 3742, 406, 2087, 3712, 654, 491, 6502, 24760, 304, 2178, 27353, 304, 13211, 11454, 303, 512, 7610, 276, 428, 322, 12936, 514, 291, 29889, 399, 16097, 2552, 3897, 1584, 901, 1700, 24285, 1156, 17661, 746, 263, 3719, 310, 18551, 653, 3777, 284, 1862, 29892, 278, 577, 29899, 13998, 796, 6669, 585, 27953, 1691, 29892, 11977, 29892, 758, 9733, 19479, 653, 437, 9988, 1475, 1316, 408, 278, 17193, 310, 767, 29892, 16157, 27257, 1608, 29892, 322, 2819, 29915, 29879, 527, 1195, 296, 736, 29889, 1932, 278, 4726, 18701, 4433, 24760, 304, 736, 29892, 540, 8459, 372, 471, 670, 13360, 304, 1044, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 851, 800, 11324, 11221, 263, 3273, 1234, 27752, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 24540, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 697, 15228, 29901, 7908, 292, 7743, 278, 3748, 29871, 29896, 29941, 310, 29871, 29906, 29941, 363, 29871, 29896, 29946, 29896, 17454, 411, 697, 1006, 1441, 322, 5225, 6023, 3204, 29879, 29889, 8564, 414, 471, 670, 2246, 19870, 411, 4832, 25647, 29879, 363, 29871, 29947, 29941, 17454, 29889, 17483, 471, 278, 3748, 29915, 29879, 8236, 364, 1878, 261, 411, 29871, 29929, 29900, 17454, 322, 263, 6023, 3204, 29892, 3412, 411, 3023, 25647, 29879, 363, 29871, 29896, 29900, 17454, 29889, 16498, 750, 4832, 3001, 22002, 793, 313, 20818, 6651, 511, 29871, 29906, 30226, 269, 26514, 29892, 322, 1023, 11826, 285, 3774, 793, 29889, 399, 598, 750, 5320, 3001, 22002, 793, 322, 1023, 269, 26514, 29889, 21910, 750, 9881, 3001, 22002, 793, 29892, 263, 285, 15563, 24205, 29892, 322, 385, 1006, 1441, 29889, 4052, 2517, 375, 1754, 599, 3023, 310, 670, 1746, 14433, 29892, 3907, 1075, 4922, 373, 599, 29871, 29896, 29896, 14734, 2645, 278, 1400, 29899, 25682, 29889, 19017, 8676, 29871, 29896, 29947, 310, 29871, 29946, 29896, 14517, 363, 29871, 29906, 29953, 29945, 17454, 29892, 411, 697, 1006, 1441, 29889, 940, 471, 884, 278, 3815, 29915, 29879, 8236, 364, 1878, 261, 411, 29871, 29946, 29945, 17454, 373, 4832, 1559, 2722, 29889, 9817, 12624, 3023, 14517, 363, 29871, 29947, 29900, 17454, 29892, 1550, 402, 2559, 750, 3023, 25647, 29879, 363, 29871, 29955, 29946, 29889, 382, 14997, 471, 278, 2246, 822, 6270, 2189, 261, 363, 13397, 411, 3023, 3001, 22002, 793, 29892, 2211, 269, 26514, 29892, 263, 11826, 285, 15563, 29892, 263, 285, 15563, 24205, 29892, 322, 385, 1006, 1441, 29889, 5282, 6270, 2796, 5322, 11717, 750, 3023, 3001, 22002, 793, 29892, 263, 269, 547, 29892, 322, 263, 11826, 285, 15563, 29889, 7407, 1627, 261, 25556, 476, 434, 305, 368, 750, 29871, 29896, 29896, 3001, 22002, 793, 29892, 1550, 5569, 15225, 750, 9881, 29892, 15020, 8743, 925, 1023, 11405, 1156, 16679, 670, 1492, 5075, 297, 278, 405, 8610, 3611, 3748, 29889, 29871, 10604, 29901, 29871]] [[1932, 1258, 260, 267, 433, 679, 670, 2373, 296, 363, 385, 3546, 16888, 22649, 357, 29973], [8449, 6791, 728, 17039, 272, 29915, 29879, 664, 338, 5134, 297, 278, 325, 29987, 29874, 3652, 29892, 3704, 278, 26624, 6879, 4108, 2626, 9020, 297, 4565, 310, 1321, 384, 16094, 24369, 29973], [9299, 3533, 261, 750, 920, 1784, 11826, 285, 3774, 793, 2645, 278, 2428, 12580, 29880, 29871, 29945, 29900, 3748, 29973], [11644, 15569, 304, 1207, 278, 8158, 29871, 29896, 29900, 29899, 29896, 29900, 29973]]
Initial Loss: 6.403003692626953
start ij pos optimization
4 Loss: 6.403003692626953
strations wa Given a short answer Hamiltonian with its context, select the most appropriate question which has theumar shortconsin as its answer.


optimized
5 Loss: 6.402671813964844
strusers wa Given a short answer Hamiltonian with its context, select the most appropriate question which has theumar shortconsin as its answer.


optimized
6 Loss: 6.288116455078125
strusers concerning Given a short answer Hamiltonian with its context, select the most appropriate question which has theumar shortconsin as its answer.


optimized
11 Loss: 6.150565147399902
strusers concerning Given a short answer voor with its context, select the most appropriate question which has theumar shortconsin as its answer.


optimized
24 Loss: 6.129266738891602
strusers concerning Given a short answer voor with its context, select the most appropriate question which has the homme shortconsin as its answer.


26 Loss: 6.129266738891602
strusers concerning Given a short answer voor with its context, select the most appropriate question which has the homme shortconsin as its answer.


Initial VF Loss: 1.4479438066482544
start vf pos optimization
optimized
36 Loss: 1.1893707513809204
tikzpicturedefined jel spiteython

optimized
37 Loss: 0.9870298504829407
tikzpicture evol jel spiteython

optimized
38 Loss: 0.8802042007446289
tikzpicture evolsim spiteython

optimized
39 Loss: 0.8149060606956482
tikzpicture evolsim frequenciesython

40 Loss: 0.8149060606956482
tikzpicture evolsim frequenciesython

3
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 851, 7193, 19813, 11221, 263, 3273, 1234, 2979, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 14738, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 7824, 8831, 15228, 29901, 11444, 414, 505, 5164, 28091, 29892, 1316, 408, 1641, 429, 3456, 515, 4509, 2106, 8818, 267, 313, 4187, 451, 19007, 8818, 267, 511, 322, 2534, 5198, 6997, 515, 410, 3471, 918, 363, 2599, 6221, 14741, 29889, 11444, 414, 505, 6041, 1063, 1476, 304, 505, 633, 3880, 1009, 25222, 29892, 10734, 1951, 278, 3087, 357, 11444, 471, 19343, 2955, 491, 13212, 297, 29871, 29896, 29929, 29929, 29929, 29892, 322, 372, 10201, 620, 12961, 2861, 304, 1034, 18953, 16831, 800, 29889, 910, 20601, 297, 697, 1667, 1206, 29892, 11444, 325, 2155, 389, 315, 1253, 265, 988, 278, 7824, 9245, 310, 17181, 4934, 393, 263, 11444, 261, 6820, 902, 12042, 391, 263, 4982, 29892, 363, 607, 540, 471, 9436, 443, 15380, 2164, 29892, 1258, 297, 2114, 451, 2867, 738, 4307, 29889, 2648, 12814, 304, 278, 17522, 29967, 29915, 29879, 26681, 287, 2948, 29892, 263, 12930, 310, 25266, 28224, 1372, 1476, 393, 263, 9257, 750, 8906, 988, 2846, 11444, 414, 750, 5129, 11884, 278, 7248, 342, 4060, 310, 23134, 30010, 29889, 910, 5331, 304, 278, 11265, 310, 278, 7824, 18473, 29899, 20910, 566, 11367, 29889, 512, 29871, 29906, 29900, 29896, 29906, 372, 7405, 630, 278, 341, 1997, 968, 11444, 261, 363, 15202, 29892, 2259, 9400, 492, 29892, 1058, 9098, 620, 12961, 1156, 16831, 800, 393, 540, 4520, 263, 25540, 29953, 29900, 29885, 289, 374, 915, 297, 3957, 411, 263, 22354, 17970, 10969, 29879, 8797, 573, 29889, 18502, 898, 278, 11444, 29892, 278, 7824, 8068, 10253, 756, 6198, 22760, 1120, 21926, 297, 967, 7512, 310, 1601, 300, 653, 8898, 363, 278, 6437, 310, 767, 6751, 278, 27889, 29889, 739, 756, 263, 4832, 29899, 10532, 7613, 10658, 491, 278, 7824, 8831, 29892, 373, 278, 8831, 29915, 29879, 29303, 29889, 450, 7178, 310, 278, 8831, 322, 263, 11444, 261, 508, 7845, 297, 373, 17522, 29933, 5870, 886, 29892, 541, 437, 451, 505, 28931, 10462, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 851, 7193, 19813, 11221, 263, 3273, 1234, 2979, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 14738, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 12180, 310, 3384, 3502, 15228, 29901, 450, 3978, 310, 278, 15983, 653, 4377, 338, 451, 8072, 2998, 29889, 450, 1900, 29899, 5203, 15983, 29892, 491, 3012, 332, 438, 407, 1171, 29892, 338, 393, 1472, 8020, 1023, 310, 323, 768, 265, 29915, 29879, 29215, 731, 714, 373, 263, 16342, 1549, 278, 10809, 29879, 310, 278, 288, 346, 550, 322, 409, 294, 29889, 3118, 310, 963, 8459, 304, 7952, 373, 278, 12180, 310, 3384, 3502, 322, 508, 367, 3595, 16246, 472, 278, 19546, 304, 278, 2011, 310, 315, 3150, 25771, 29889, 450, 1473, 2778, 655, 333, 7450, 278, 13394, 310, 278, 478, 391, 2497, 6163, 322, 715, 686, 287, 964, 967, 19922, 29889, 2296, 11084, 304, 1791, 373, 263, 11982, 29891, 25695, 491, 278, 5720, 310, 9149, 29920, 5604, 29892, 988, 9427, 837, 264, 2996, 304, 7336, 533, 902, 15409, 322, 11621, 304, 902, 9560, 7314, 29889, 319, 1395, 7584, 29055, 884, 6091, 902, 12516, 29936, 540, 5643, 278, 9427, 837, 264, 322, 15468, 278, 2778, 655, 333, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 851, 7193, 19813, 11221, 263, 3273, 1234, 2979, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 14738, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 27689, 922, 801, 1450, 2039, 15228, 29901, 450, 6518, 3341, 16646, 278, 27689, 922, 801, 1450, 2039, 297, 278, 8572, 1848, 4513, 29892, 2734, 701, 263, 29871, 29941, 29896, 29994, 29900, 8870, 615, 603, 3275, 322, 769, 13587, 1283, 263, 3261, 2738, 1473, 4203, 419, 774, 547, 4218, 304, 5401, 29871, 29941, 29896, 29994, 29906, 29946, 29892, 263, 854, 3460, 1009, 29007, 3381, 515, 263, 1629, 8859, 29889, 450, 6518, 3341, 769, 10767, 29893, 714, 278, 23716, 9160, 19016, 297, 278, 405, 8610, 8972, 8448, 29892, 29871, 29946, 29929, 29994, 29896, 29945, 29892, 1153, 384, 292, 701, 29871, 29946, 29947, 29955, 17454, 322, 28172, 9881, 24562, 874, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 851, 7193, 19813, 11221, 263, 3273, 1234, 2979, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 14738, 3273, 21123, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 319, 10257, 5220, 336, 7608, 15228, 29901, 512, 6124, 29892, 727, 526, 395, 29906, 7284, 7088, 310, 916, 10359, 453, 653, 4959, 29892, 3704, 263, 4723, 29899, 5426, 1741, 472, 278, 7510, 29042, 26774, 7817, 29892, 263, 367, 261, 29892, 19006, 322, 9687, 16005, 472, 10914, 16103, 8989, 472, 7510, 29042, 3014, 29892, 322, 263, 282, 1022, 364, 635, 29889, 319, 10257, 5220, 336, 7608, 674, 16226, 297, 9138, 5381, 21955, 943, 322, 5375, 1016, 943, 29892, 541, 1603, 1122, 817, 278, 4272, 18701, 304, 1371, 5220, 278, 1741, 29889, 3462, 3245, 5220, 292, 674, 367, 4944, 491, 278, 4272, 18701, 29892, 607, 756, 9326, 13900, 304, 731, 17786, 16717, 5220, 292, 363, 278, 1741, 29889, 29871, 10604, 29901, 29871]] [[512, 278, 2511, 29883, 22401, 3748, 29892, 1058, 1258, 278, 12246, 3944, 16646, 29973], [512, 278, 443, 1573, 5922, 29892, 607, 3564, 12672, 2428, 12580, 29880, 29871, 29945, 29900, 29973], [1551, 278, 2446, 1708, 29892, 1058, 5807, 905, 287, 278, 8287, 515, 767, 1076, 29915, 29879, 330, 6472, 29973], [1932, 1258, 278, 937, 10961, 14523, 297, 29129, 1450, 1722, 29973]]
Initial Loss: 6.241619110107422
start ij pos optimization
optimized
4 Loss: 6.164300441741943
rationalusers concerning Given a short answer voor with its context, select the most appropriate question which has the homme shortconsin as its answer.


5 Loss: 6.164300441741943
rationalusers concerning Given a short answer voor with its context, select the most appropriate question which has the homme shortconsin as its answer.


6 Loss: 6.164300441741943
rationalusers concerning Given a short answer voor with its context, select the most appropriate question which has the homme shortconsin as its answer.


optimized
11 Loss: 6.054872035980225
rationalusers concerning Given a short answer for with its context, select the most appropriate question which has the homme shortconsin as its answer.


optimized
24 Loss: 6.013564109802246
rationalusers concerning Given a short answer for with its context, select the most appropriate question which has the durante shortconsin as its answer.


optimized
26 Loss: 5.984010696411133
rationalusers concerning Given a short answer for with its context, select the most appropriate question which has the durante shortstackoverflow as its answer.


Initial VF Loss: 1.2605069875717163
start vf pos optimization
optimized
36 Loss: 1.2178317308425903
pmatrix evolsim frequenciesython

37 Loss: 1.2178317308425903
pmatrix evolsim frequenciesython

optimized
38 Loss: 1.1230329275131226
pmatrix evol feas frequenciesython

optimized
39 Loss: 0.9300599098205566
pmatrix evol feas faisython

40 Loss: 0.9300599098205566
pmatrix evol feas faisython

4
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 17903, 7193, 19813, 11221, 263, 3273, 1234, 363, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 6372, 3273, 2417, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29906, 29900, 29900, 29953, 15228, 29901, 512, 29871, 29896, 29929, 29955, 29900, 29892, 16417, 2553, 3860, 27822, 11554, 8914, 408, 760, 310, 967, 27822, 6019, 931, 20410, 29936, 278, 1824, 3897, 263, 7124, 363, 278, 3564, 322, 6766, 408, 278, 3086, 8914, 5165, 313, 29940, 10536, 16029, 29879, 7017, 3748, 310, 278, 4723, 2745, 29871, 29906, 29900, 29900, 29953, 29892, 746, 16340, 11554, 8914, 29892, 607, 6153, 304, 405, 5371, 393, 1629, 408, 760, 310, 263, 12672, 5376, 393, 297, 2507, 4446, 341, 22498, 4337, 304, 26480, 29940, 29892, 3614, 975, 408, 278, 13225, 29915, 29879, 29452, 29872, 3748, 29889, 7579, 304, 6650, 25151, 29892, 27822, 11554, 8914, 9213, 2326, 29876, 16417, 25704, 8158, 385, 20026, 6232, 310, 29871, 29896, 29945, 29995, 29994, 29896, 29953, 8874, 16417, 12453, 8745, 278, 23562, 363, 278, 27822, 4646, 931, 21497, 304, 1855, 2029, 403, 278, 4723, 368, 23562, 363, 16417, 29915, 29879, 6019, 931, 20410, 304, 925, 4832, 3841, 29892, 408, 15869, 304, 9881, 373, 5100, 292, 14379, 29889, 29871, 29896, 29929, 29955, 29900, 884, 4446, 278, 7017, 267, 310, 3196, 29559, 1751, 294, 3704, 278, 1472, 29899, 21094, 2178, 1619, 20986, 29892, 607, 6350, 373, 278, 3564, 363, 29871, 29946, 29896, 2440, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17903, 7193, 19813, 11221, 263, 3273, 1234, 363, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 6372, 3273, 2417, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29945, 29892, 29900, 29900, 29900, 15228, 29901, 450, 3014, 310, 10059, 313, 29965, 1451, 9384, 29892, 10059, 29892, 470, 501, 310, 315, 29897, 338, 263, 2024, 5925, 16372, 297, 10059, 29889, 450, 16372, 29892, 7841, 297, 29871, 29896, 29947, 29929, 29900, 29892, 11624, 310, 450, 6346, 29892, 5164, 10591, 403, 11104, 29892, 1006, 2218, 13326, 3821, 844, 5388, 267, 19098, 964, 3023, 21567, 5925, 25884, 322, 9881, 10257, 12462, 29889, 18502, 898, 278, 16930, 322, 21195, 29892, 10059, 338, 884, 1532, 2998, 363, 967, 10257, 12462, 29892, 607, 3160, 278, 349, 18238, 3946, 4523, 310, 27529, 29892, 278, 3014, 310, 10059, 1952, 720, 4523, 310, 15197, 29892, 278, 7927, 4523, 29892, 278, 4523, 310, 10307, 6692, 23303, 29892, 278, 20349, 4523, 310, 5236, 25219, 16972, 29892, 278, 22196, 4523, 310, 2866, 8675, 292, 25910, 322, 20031, 16972, 322, 278, 4910, 13593, 4523, 29889, 450, 16372, 5279, 427, 1245, 29879, 14235, 29871, 29945, 29892, 29900, 29900, 29900, 8041, 297, 278, 6346, 322, 2820, 29871, 29896, 29945, 29892, 29900, 29900, 29900, 8041, 12463, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17903, 7193, 19813, 11221, 263, 3273, 1234, 363, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 6372, 3273, 2417, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 7456, 29871, 29896, 304, 29871, 29955, 15228, 29901, 450, 12362, 14104, 882, 310, 5244, 414, 2169, 2785, 7456, 29871, 29896, 304, 29871, 29955, 731, 714, 278, 1667, 1326, 12112, 373, 5186, 14502, 310, 17162, 29889, 3824, 29892, 7456, 29871, 29896, 304, 29871, 29946, 6892, 1996, 393, 17162, 508, 2125, 701, 5703, 358, 29892, 17668, 8078, 29879, 29892, 322, 451, 8812, 2313, 5632, 3381, 9401, 304, 4797, 29879, 310, 278, 4509, 2106, 29889, 512, 263, 13834, 1206, 29892, 278, 9923, 713, 8914, 7993, 325, 10211, 1171, 29892, 263, 9923, 713, 19026, 4257, 4581, 29899, 29924, 5666, 10211, 1171, 17049, 393, 540, 881, 367, 2221, 304, 6782, 515, 390, 29889, 29943, 29889, 29907, 29889, 316, 2718, 15532, 304, 3148, 29931, 360, 27560, 802, 746, 670, 8078, 7743, 29892, 17126, 310, 3692, 360, 27560, 802, 1033, 21750, 304, 5146, 2718, 15532, 278, 4760, 950, 6782, 1238, 267, 29889, 450, 9245, 310, 17181, 4934, 376, 1552, 6782, 6865, 1040, 12356, 29961, 29881, 29962, 385, 14979, 6436, 304, 3889, 10298, 29908, 322, 892, 443, 10653, 1319, 6521, 896, 1033, 367, 925, 2164, 297, 278, 970, 4066, 29892, 541, 445, 471, 25057, 29889, 512, 6070, 759, 325, 7668, 363, 13151, 278, 9245, 310, 17181, 9259, 393, 263, 11809, 304, 7726, 402, 4271, 293, 304, 6860, 297, 263, 24533, 2874, 12755, 1033, 367, 925, 2164, 408, 760, 310, 278, 970, 8898, 310, 2504, 11427, 278, 12601, 4086, 29892, 541, 871, 565, 278, 5645, 471, 451, 766, 771, 637, 291, 403, 29889, 2648, 12814, 297, 3218, 265, 968, 325, 13088, 29874, 652, 25259, 862, 29885, 601, 652, 8922, 29920, 1562, 1706, 29909, 263, 9124, 297, 8922, 29920, 1562, 29892, 12730, 29892, 471, 451, 6068, 304, 1996, 3237, 3218, 265, 968, 304, 505, 263, 289, 6504, 950, 12289, 393, 1033, 871, 367, 7625, 297, 8922, 29920, 1562, 29889, 450, 9245, 310, 17181, 29892, 6820, 376, 22672, 29908, 1513, 2779, 304, 323, 16359, 29965, 4274, 29871, 29946, 29945, 29892, 2769, 287, 393, 2305, 515, 916, 10916, 723, 505, 2217, 8825, 310, 10695, 8491, 278, 12289, 29892, 322, 1363, 372, 471, 376, 326, 27338, 304, 9752, 5296, 310, 278, 3734, 21110, 4695, 7134, 491, 738, 916, 2794, 613, 278, 5645, 471, 766, 771, 637, 291, 403, 29889, 6440, 29892, 4274, 29871, 29955, 29898, 29906, 29897, 6858, 5186, 14502, 297, 3390, 310, 8818, 29889, 512, 4231, 4096, 8035, 20763, 10790, 9516, 325, 1102, 398, 28940, 278, 9245, 310, 17181, 4934, 393, 372, 6761, 854, 287, 323, 16359, 29965, 1616, 29871, 29946, 29945, 304, 972, 29891, 8818, 23633, 313, 29872, 29889, 29887, 29889, 363, 8300, 3581, 2701, 29892, 322, 5264, 1663, 18541, 1518, 1947, 21049, 1953, 29897, 304, 263, 767, 1058, 3796, 297, 9556, 29892, 541, 471, 20201, 297, 9923, 1974, 746, 916, 5332, 24060, 2355, 278, 23633, 29889, 2648, 12814, 297, 1334, 335, 295, 325, 4231, 4096, 1049, 267, 20146, 7066, 1865, 6266, 279, 29880, 2552, 278, 9245, 310, 17181, 22225, 3237, 1334, 335, 295, 29915, 29879, 5995, 393, 263, 337, 29899, 1727, 8306, 8323, 2501, 20794, 670, 1559, 304, 17362, 5537, 630, 670, 1492, 304, 3889, 10298, 29889, 8512, 278, 8818, 471, 376, 21280, 304, 505, 263, 8178, 24638, 373, 278, 10608, 310, 9725, 424, 17162, 304, 15058, 1009, 1492, 304, 16082, 310, 10298, 613, 1363, 278, 8323, 7436, 18018, 304, 3330, 374, 550, 29892, 297, 18070, 310, 19007, 13332, 362, 373, 278, 4383, 372, 750, 304, 367, 17878, 408, 925, 2164, 29889, 18008, 29892, 2305, 1818, 7150, 5186, 14502, 11211, 376, 24911, 25486, 613, 5998, 278, 9245, 756, 23454, 20201, 616, 4021, 9215, 23704, 29889, 512, 17973, 2126, 325, 24654, 512, 7610, 749, 8907, 278, 9245, 310, 17181, 4934, 393, 263, 14872, 4797, 471, 451, 23437, 304, 6773, 13442, 297, 5030, 5946, 23633, 746, 540, 6153, 304, 9923, 1974, 29892, 1363, 278, 14169, 471, 376, 11291, 873, 9024, 304, 278, 577, 3934, 29899, 29872, 4599, 293, 6434, 29908, 310, 278, 24553, 29889, 1281, 874, 873, 29892, 297, 1879, 854, 325, 3172, 5245, 29878, 12880, 29899, 16128, 29888, 10066, 278, 9245, 310, 17181, 4934, 393, 263, 14872, 6114, 8471, 297, 278, 24553, 29892, 541, 1985, 1546, 29871, 29941, 322, 29871, 29896, 29946, 6199, 263, 4723, 297, 9556, 29892, 1258, 451, 505, 263, 1492, 304, 7150, 5332, 2278, 23633, 29892, 1584, 2466, 278, 6532, 310, 263, 767, 1058, 3796, 2989, 29899, 2230, 297, 9556, 541, 471, 20201, 297, 17362, 1033, 29889, 450, 2498, 925, 8232, 363, 4046, 292, 3889, 10298, 297, 323, 16359, 29965, 4274, 29871, 29946, 29945, 29898, 29941, 29897, 526, 376, 3597, 8898, 29892, 970, 6993, 470, 970, 9045, 613, 322, 727, 338, 884, 263, 2498, 3682, 297, 4274, 29871, 29946, 29945, 29898, 29946, 29897, 363, 376, 3451, 22812, 297, 278, 970, 2669, 1642, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17903, 7193, 19813, 11221, 263, 3273, 1234, 363, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 6372, 3273, 2417, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 2610, 29871, 29906, 29900, 29896, 29941, 15228, 29901, 4731, 1711, 29892, 14212, 756, 1063, 278, 2967, 363, 278, 12012, 3864, 18577, 310, 278, 4655, 1559, 1506, 4167, 14601, 29892, 29411, 4616, 322, 21771, 264, 29936, 3138, 29892, 18424, 7475, 29883, 4110, 491, 599, 2211, 14582, 297, 278, 29871, 29906, 29896, 303, 6462, 674, 2099, 393, 8314, 674, 694, 5520, 367, 263, 2967, 363, 278, 5534, 1559, 13661, 29892, 411, 29411, 4616, 29915, 29879, 3229, 297, 6339, 29871, 29906, 29900, 29896, 29946, 714, 1915, 292, 263, 18424, 1629, 310, 29871, 29906, 29900, 29896, 29955, 29889, 21771, 264, 29915, 29879, 7475, 13561, 10761, 297, 2610, 29871, 29906, 29900, 29896, 29941, 29892, 5643, 491, 14601, 29915, 29879, 10608, 297, 5846, 310, 278, 1021, 1629, 313, 29943, 536, 29915, 29879, 12684, 713, 18577, 30003, 262, 12046, 1004, 23626, 322, 1879, 295, 549, 30003, 14043, 3802, 297, 5533, 29871, 29906, 29900, 29896, 29953, 467, 29871, 10604, 29901, 29871]] [[6804, 947, 263, 15355, 2135, 17285, 515, 263, 7751, 29915, 29879, 11660, 29915, 29879, 17763, 2982, 29973], [11644, 1258, 301, 14107, 2507, 304, 297, 1797, 304, 1925, 385, 1095, 304, 278, 318, 558, 5921, 29973], [11644, 29892, 5034, 304, 14436, 262, 301, 14107, 29892, 338, 278, 14419, 18879, 2147, 29973], [512, 2428, 12580, 29880, 29871, 29945, 29900, 29892, 920, 1784, 17454, 1258, 972, 369, 505, 29973]]
Initial Loss: 10.319408416748047
start ij pos optimization
optimized
4 Loss: 9.17828369140625
zeitusers concerning Given a short answer for with its context, select the most appropriate question which has the durante shortstackoverflow as its answer.


5 Loss: 9.17828369140625
zeitusers concerning Given a short answer for with its context, select the most appropriate question which has the durante shortstackoverflow as its answer.


6 Loss: 9.17828369140625
zeitusers concerning Given a short answer for with its context, select the most appropriate question which has the durante shortstackoverflow as its answer.


optimized
11 Loss: 9.081708908081055
zeitusers concerning Given a short answer sympath with its context, select the most appropriate question which has the durante shortstackoverflow as its answer.


optimized
24 Loss: 9.035029411315918
zeitusers concerning Given a short answer sympath with its context, select the most appropriate question which has the weg shortstackoverflow as its answer.


optimized
26 Loss: 9.002001762390137
zeitusers concerning Given a short answer sympath with its context, select the most appropriate question which has the weg short wechsel as its answer.


Initial VF Loss: 1.5685368776321411
start vf pos optimization
optimized
36 Loss: 1.210098385810852
tot evol feas faisython

optimized
37 Loss: 1.2053512334823608
tot finit feas faisython

optimized
38 Loss: 1.1760588884353638
tot finit dod faisython

optimized
39 Loss: 1.0813254117965698
tot finit dod mystython

40 Loss: 1.0813254117965698
tot finit dod mystython

5
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 29402, 7193, 19813, 11221, 263, 3273, 1234, 17520, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 26188, 310, 278, 6479, 11156, 310, 3681, 373, 29871, 29896, 29900, 6339, 29871, 29896, 29955, 29953, 29941, 15228, 29901, 450, 1370, 297, 4644, 6813, 22444, 9698, 411, 278, 26188, 310, 278, 6479, 11156, 310, 3681, 373, 29871, 29896, 29900, 6339, 29871, 29896, 29955, 29953, 29941, 29892, 322, 1370, 297, 278, 7824, 24520, 310, 278, 26647, 23857, 29915, 3362, 471, 17141, 491, 278, 6479, 11156, 310, 14533, 814, 375, 3074, 373, 29871, 29896, 29945, 6339, 29871, 29896, 29955, 29953, 29941, 29889, 450, 4908, 12520, 3444, 278, 7348, 310, 27503, 292, 2845, 967, 2145, 13703, 4644, 3082, 3119, 10964, 9755, 310, 278, 24743, 470, 278, 1704, 747, 14471, 24191, 310, 2088, 11165, 6648, 322, 6502, 1387, 29892, 607, 750, 1063, 16404, 491, 278, 4908, 29889, 3444, 12784, 304, 274, 2742, 278, 4642, 29892, 541, 471, 2221, 304, 27214, 403, 278, 3240, 2509, 310, 4107, 9181, 322, 5493, 13295, 265, 29892, 1023, 2319, 24191, 297, 278, 402, 16302, 310, 624, 29889, 19520, 29892, 3412, 411, 9427, 292, 10462, 297, 278, 4038, 29889, 2688, 24774, 278, 17407, 995, 310, 278, 1704, 747, 14471, 24191, 29915, 26438, 508, 29872, 304, 367, 7621, 322, 6775, 304, 24663, 1135, 278, 285, 1295, 515, 278, 25523, 29889, 450, 12010, 23584, 5176, 8578, 359, 13434, 3684, 19073, 12992, 304, 7400, 17508, 6751, 368, 408, 3078, 901, 1135, 263, 2846, 23931, 310, 15007, 29889, 450, 4908, 29892, 363, 1009, 760, 29892, 892, 9796, 304, 2125, 1570, 3444, 29892, 408, 28399, 310, 1009, 4644, 3082, 8104, 583, 723, 694, 5520, 367, 385, 2228, 322, 884, 1363, 896, 2307, 750, 626, 552, 7600, 515, 607, 304, 4017, 26438, 29889, 13616, 29892, 607, 3534, 287, 13813, 304, 14933, 304, 1072, 475, 23653, 29892, 884, 17515, 28838, 29892, 3704, 1570, 26884, 29892, 515, 3444, 297, 22874, 362, 363, 967, 28495, 29889, 7027, 14933, 322, 13616, 884, 15502, 393, 11322, 373, 278, 24743, 6163, 471, 304, 367, 1722, 304, 24479, 310, 599, 19079, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29402, 7193, 19813, 11221, 263, 3273, 1234, 17520, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 5490, 29871, 29906, 29900, 29896, 29900, 15228, 29901, 350, 29903, 3459, 29933, 12919, 20139, 5684, 25691, 1238, 267, 363, 773, 263, 16572, 29974, 349, 29963, 29934, 411, 1009, 2669, 29936, 11324, 4357, 278, 8323, 363, 21696, 2596, 5069, 3577, 5134, 1023, 470, 901, 5188, 1974, 18196, 29889, 910, 3939, 408, 515, 29871, 29896, 5468, 29871, 29906, 29900, 29900, 29955, 29892, 322, 1286, 20330, 393, 505, 16572, 29974, 322, 1014, 13086, 304, 738, 350, 29903, 3459, 29933, 25691, 3577, 679, 16572, 29974, 5134, 472, 694, 4805, 8323, 29889, 8701, 414, 393, 437, 451, 1014, 13086, 304, 350, 29903, 3459, 29933, 29915, 29879, 18196, 508, 1603, 5146, 263, 4098, 368, 27684, 304, 9025, 16572, 29974, 3168, 29889, 512, 5490, 29871, 29906, 29900, 29896, 29900, 350, 29903, 3459, 29933, 766, 1285, 262, 6742, 278, 16572, 29974, 11773, 29892, 9078, 278, 3918, 16572, 11773, 304, 9683, 3350, 290, 14955, 871, 322, 4687, 304, 2228, 278, 16572, 29974, 26124, 11773, 408, 3918, 29892, 4550, 6820, 599, 716, 21696, 2596, 278, 3168, 310, 16572, 29974, 29889, 512, 6339, 29871, 29906, 29900, 29896, 29896, 350, 29903, 3459, 29933, 766, 1285, 262, 6742, 278, 1661, 29899, 26124, 17305, 310, 967, 9683, 3350, 290, 3800, 29892, 27032, 263, 7968, 1873, 310, 278, 16572, 26124, 3800, 1728, 16572, 29974, 9863, 29889, 512, 3839, 29871, 29906, 29900, 29900, 29955, 29892, 16572, 15241, 263, 716, 5648, 18811, 5921, 11531, 3646, 292, 16572, 29974, 472, 5866, 29889, 1094, 310, 29871, 29941, 29896, 4779, 29871, 29906, 29900, 29900, 29947, 29892, 16572, 750, 29871, 29941, 29892, 29941, 29929, 29941, 29892, 29900, 29900, 29900, 16572, 29974, 4160, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29402, 7193, 19813, 11221, 263, 3273, 1234, 17520, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 11212, 496, 15228, 29901, 319, 1072, 2785, 310, 278, 7861, 457, 471, 2000, 363, 29892, 411, 385, 7568, 18643, 2978, 1640, 29886, 3361, 585, 322, 263, 5224, 18643, 472, 11212, 496, 29892, 297, 1797, 304, 6795, 627, 278, 4868, 5685, 3689, 322, 4549, 7048, 2073, 362, 297, 278, 15782, 7861, 457, 360, 2554, 29889, 450, 360, 1398, 20397, 1089, 15542, 750, 304, 367, 652, 1765, 287, 29892, 2086, 29892, 322, 372, 1286, 24536, 8943, 304, 278, 18643, 1891, 7861, 457, 964, 278, 19437, 29889, 8011, 4094, 756, 263, 6501, 261, 2927, 1135, 278, 7861, 457, 29936, 278, 7480, 29915, 29879, 301, 14643, 8872, 2760, 2254, 5304, 515, 6133, 701, 278, 19223, 29889, 739, 338, 3806, 393, 278, 9126, 1881, 310, 7048, 2073, 964, 278, 19437, 674, 269, 2782, 701, 278, 19437, 29889, 910, 756, 2307, 9559, 304, 278, 4642, 9459, 323, 688, 4738, 4149, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29402, 7193, 19813, 11221, 263, 3273, 1234, 17520, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 22167, 310, 13878, 2849, 15228, 29901, 450, 4955, 310, 278, 21837, 6012, 380, 2267, 6609, 1250, 408, 2215, 408, 278, 937, 6462, 11033, 29936, 278, 937, 10478, 29051, 2073, 653, 21837, 6012, 1641, 278, 263, 29872, 324, 666, 488, 5439, 491, 12311, 5844, 19217, 713, 22167, 310, 13878, 2849, 29889, 512, 278, 1494, 21726, 29892, 278, 2846, 21837, 29899, 13519, 287, 376, 996, 1475, 29908, 2998, 892, 29892, 763, 278, 263, 29872, 324, 666, 488, 29892, 13674, 17986, 9224, 1304, 491, 11817, 943, 304, 22222, 278, 4426, 310, 21837, 29889, 319, 29051, 2073, 653, 21837, 7013, 26062, 4742, 471, 5439, 491, 10523, 26461, 394, 29899, 29928, 262, 297, 29871, 29896, 29945, 29945, 29896, 322, 491, 12874, 20500, 1113, 297, 29871, 29896, 29953, 29906, 29929, 29889, 5677, 888, 4200, 316, 15846, 4096, 343, 1522, 25330, 609, 4520, 2373, 1237, 297, 29871, 29896, 29953, 29900, 29953, 363, 19044, 21837, 3081, 287, 11817, 1080, 29892, 3704, 263, 4094, 282, 3427, 363, 7482, 2827, 297, 870, 630, 29086, 29889, 3384, 275, 8579, 262, 29892, 263, 379, 688, 3837, 327, 25447, 29872, 29892, 1258, 777, 5407, 664, 373, 278, 21837, 4697, 4156, 297, 29871, 29896, 29953, 29955, 29929, 29892, 322, 937, 1304, 263, 282, 391, 265, 304, 12020, 18177, 297, 29871, 29896, 29953, 29929, 29900, 29889, 29871, 10604, 29901, 29871]] [[11644, 892, 278, 437, 14359, 297, 2060, 29901, 425, 29920, 26465, 29973], [13397, 5331, 278, 302, 1579, 297, 1283, 6270, 1708, 26654, 411, 920, 1784, 3291, 29973], [8449, 4234, 338, 3271, 304, 278, 21610, 310, 278, 19249, 17251, 1454, 342, 29973], [1932, 1258, 278, 16372, 1369, 27032, 263, 278, 1008, 322, 4180, 11898, 289, 496, 12779, 29915, 29879, 7426, 1824, 29973]]
Initial Loss: 4.866696357727051
start ij pos optimization
4 Loss: 4.866696357727051
zeitusers concerning Given a short answer sympath with its context, select the most appropriate question which has the weg short wechsel as its answer.


5 Loss: 4.866696357727051
zeitusers concerning Given a short answer sympath with its context, select the most appropriate question which has the weg short wechsel as its answer.


optimized
6 Loss: 4.140429496765137
zeitusers nor Given a short answer sympath with its context, select the most appropriate question which has the weg short wechsel as its answer.


optimized
11 Loss: 4.028787136077881
zeitusers nor Given a short answer Nice with its context, select the most appropriate question which has the weg short wechsel as its answer.


24 Loss: 4.028787136077881
zeitusers nor Given a short answer Nice with its context, select the most appropriate question which has the weg short wechsel as its answer.


26 Loss: 4.028787136077881
zeitusers nor Given a short answer Nice with its context, select the most appropriate question which has the weg short wechsel as its answer.


Initial VF Loss: 1.545641303062439
start vf pos optimization
optimized
36 Loss: 1.3595548868179321
curl finit dod mystython

optimized
37 Loss: 1.2085152864456177
curl contempor dod mystython

optimized
38 Loss: 1.204910159111023
curl contemporensus mystython

optimized
39 Loss: 1.1005055904388428
curl contemporensus Literaturython

optimized
40 Loss: 1.0663217306137085
curl contemporensus Literatur thy

6
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 29402, 7193, 3643, 11221, 263, 3273, 1234, 20103, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29896, 29947, 29896, 29955, 15228, 29901, 9149, 1450, 29915, 29879, 937, 10961, 14523, 471, 7841, 297, 29871, 29896, 29947, 29896, 29955, 322, 7572, 3534, 292, 2745, 2787, 3362, 1944, 29889, 739, 471, 337, 29899, 342, 370, 3726, 297, 3786, 29871, 29896, 29929, 29929, 29896, 29892, 1494, 278, 1095, 310, 278, 1400, 29899, 4495, 3817, 391, 2761, 310, 278, 4234, 322, 278, 337, 524, 13210, 310, 263, 3889, 29899, 28549, 26504, 29889, 20628, 29892, 278, 9149, 1450, 10224, 24004, 313, 29956, 1660, 29897, 338, 29892, 5034, 304, 1784, 4221, 4097, 29892, 278, 10150, 9999, 297, 278, 5120, 29892, 411, 29871, 29941, 29955, 29946, 14582, 9904, 322, 3001, 7483, 2133, 310, 29871, 29896, 29953, 29906, 29871, 29945, 29947, 29946, 286, 3083, 382, 4574, 408, 310, 29871, 29941, 29896, 3111, 29871, 29906, 29900, 29900, 29929, 29889, 3645, 29871, 29896, 29929, 29929, 29896, 2745, 29871, 29906, 29900, 29900, 29900, 29892, 278, 10961, 14523, 471, 29892, 13977, 1711, 29892, 5982, 297, 278, 5214, 9251, 1304, 408, 278, 26463, 310, 278, 19919, 3303, 5244, 414, 29915, 9173, 313, 29925, 29999, 10593, 467, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29402, 7193, 3643, 11221, 263, 3273, 1234, 20103, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 1528, 650, 826, 5485, 15228, 29901, 29849, 297, 2740, 310, 716, 11104, 393, 723, 1371, 372, 752, 2650, 411, 405, 5371, 322, 29589, 29892, 16417, 29915, 29879, 10643, 13112, 393, 14717, 1033, 367, 263, 4655, 17246, 858, 297, 4857, 1747, 278, 3564, 29915, 29879, 9999, 6232, 29889, 1551, 3786, 29871, 29906, 29929, 29892, 29871, 29896, 29929, 29953, 29896, 29892, 16417, 2553, 3860, 399, 680, 2787, 310, 12453, 29892, 385, 24612, 3002, 3652, 2825, 491, 2155, 5397, 1102, 261, 860, 1549, 670, 5001, 12453, 7835, 29879, 29892, 9266, 29889, 322, 7371, 491, 263, 4123, 1528, 650, 826, 5485, 607, 15000, 263, 1422, 7980, 292, 1741, 1269, 12672, 29889, 16417, 20848, 12453, 7835, 29879, 29892, 9266, 29889, 297, 14523, 363, 29358, 297, 278, 5001, 29892, 8236, 372, 304, 4953, 278, 5434, 7136, 310, 16417, 12453, 29892, 411, 826, 5485, 408, 278, 22760, 14297, 310, 393, 8542, 29915, 29879, 3697, 29889, 399, 680, 2787, 310, 12453, 29892, 297, 3153, 29892, 471, 451, 13586, 24600, 304, 263, 2323, 7980, 29892, 541, 3265, 304, 6892, 599, 7980, 292, 4959, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29402, 7193, 3643, 11221, 263, 3273, 1234, 20103, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 9881, 15228, 29901, 450, 3014, 310, 10059, 313, 29965, 1451, 9384, 29892, 10059, 29892, 470, 501, 310, 315, 29897, 338, 263, 2024, 5925, 16372, 297, 10059, 29889, 450, 16372, 29892, 7841, 297, 29871, 29896, 29947, 29929, 29900, 29892, 11624, 310, 450, 6346, 29892, 5164, 10591, 403, 11104, 29892, 1006, 2218, 13326, 3821, 844, 5388, 267, 19098, 964, 3023, 21567, 5925, 25884, 322, 9881, 10257, 12462, 29889, 18502, 898, 278, 16930, 322, 21195, 29892, 10059, 338, 884, 1532, 2998, 363, 967, 10257, 12462, 29892, 607, 3160, 278, 349, 18238, 3946, 4523, 310, 27529, 29892, 278, 3014, 310, 10059, 1952, 720, 4523, 310, 15197, 29892, 278, 7927, 4523, 29892, 278, 4523, 310, 10307, 6692, 23303, 29892, 278, 20349, 4523, 310, 5236, 25219, 16972, 29892, 278, 22196, 4523, 310, 2866, 8675, 292, 25910, 322, 20031, 16972, 322, 278, 4910, 13593, 4523, 29889, 450, 16372, 5279, 427, 1245, 29879, 14235, 29871, 29945, 29892, 29900, 29900, 29900, 8041, 297, 278, 6346, 322, 2820, 29871, 29896, 29945, 29892, 29900, 29900, 29900, 8041, 12463, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29402, 7193, 3643, 11221, 263, 3273, 1234, 20103, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 20669, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 9299, 16498, 15228, 29901, 2860, 1269, 3815, 11978, 287, 29892, 6518, 3341, 12616, 1627, 5500, 19017, 7470, 304, 4866, 263, 29871, 29906, 29946, 29899, 19852, 1209, 435, 3127, 436, 29877, 26783, 305, 708, 29892, 541, 278, 1246, 471, 29490, 385, 297, 5729, 12757, 322, 318, 561, 2495, 1156, 263, 337, 1456, 18766, 29889, 29589, 3483, 858, 322, 16528, 2143, 23987, 12828, 10057, 29891, 8703, 540, 22941, 276, 287, 411, 278, 1246, 322, 7091, 278, 9076, 9436, 10018, 278, 1209, 471, 4866, 29889, 319, 2846, 13582, 2678, 29892, 373, 29871, 29941, 5499, 29899, 392, 29899, 29896, 29900, 515, 278, 29871, 29896, 29945, 29899, 19852, 1196, 29892, 1196, 1627, 261, 9299, 16498, 18232, 287, 278, 8287, 714, 310, 19017, 29915, 29879, 6567, 1550, 269, 547, 292, 1075, 29892, 322, 3792, 638, 11886, 24776, 372, 297, 278, 1095, 10640, 363, 263, 14165, 3944, 6023, 3204, 29892, 6820, 278, 3815, 263, 29871, 29896, 29900, 29994, 29900, 3275, 29889, 910, 471, 278, 937, 285, 15563, 736, 6023, 3204, 297, 263, 5670, 27207, 1951, 5670, 27207, 6193, 29963, 5287, 472, 278, 1095, 310, 278, 29871, 29896, 29929, 29929, 29941, 4259, 29889, 29871, 10604, 29901, 29871]] [[1724, 10907, 1258, 278, 7243, 3341, 3700, 373, 1009, 982, 304, 278, 2428, 12580, 29880, 29973], [9299, 3533, 261, 750, 920, 1784, 22002, 793, 2645, 278, 3748, 29973], [1932, 1258, 10215, 273, 2228, 263, 3229, 18690, 292, 338, 9058, 275, 304, 5967, 5112, 342, 457, 29973], [512, 29871, 29896, 29906, 29906, 29941, 29892, 988, 471, 278, 413, 10384, 713, 4889, 393, 16235, 1014, 329, 1794, 29915, 29879, 9987, 29973]]
Initial Loss: 6.302920818328857
start ij pos optimization
optimized
4 Loss: 5.977293491363525
cfusers nor Given a short answer Nice with its context, select the most appropriate question which has the weg short wechsel as its answer.


optimized
5 Loss: 5.1676249504089355
cffilter nor Given a short answer Nice with its context, select the most appropriate question which has the weg short wechsel as its answer.


optimized
6 Loss: 5.0449676513671875
cffilterselves Given a short answer Nice with its context, select the most appropriate question which has the weg short wechsel as its answer.


optimized
11 Loss: 4.988519668579102
cffilterselves Given a short answer Coppa with its context, select the most appropriate question which has the weg short wechsel as its answer.


optimized
24 Loss: 4.978668212890625
cffilterselves Given a short answer Coppa with its context, select the most appropriate question which has the prakt short wechsel as its answer.


26 Loss: 4.978668212890625
cffilterselves Given a short answer Coppa with its context, select the most appropriate question which has the prakt short wechsel as its answer.


Initial VF Loss: 2.44893741607666
start vf pos optimization
optimized
36 Loss: 2.243032217025757
xpath contemporensus Literatur thy

optimized
37 Loss: 2.08811354637146
xpathPleaseensus Literatur thy

optimized
38 Loss: 1.8822799921035767
xpathPleaseusepackage Literatur thy

optimized
39 Loss: 1.8151721954345703
xpathPleaseusepackage dost thy

optimized
40 Loss: 1.7972043752670288
xpathPleaseusepackage dost Ligue

7
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 6854, 4572, 5210, 11221, 263, 3273, 1234, 25857, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 28683, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 2259, 23976, 2330, 15228, 29901, 8108, 391, 21561, 1122, 367, 4257, 1156, 263, 29727, 506, 284, 4377, 313, 29872, 29889, 29887, 1696, 376, 855, 29889, 5011, 501, 12513, 2564, 8108, 2879, 884, 10657, 18697, 13444, 267, 322, 13444, 1475, 310, 278, 6111, 10847, 322, 1106, 304, 1438, 19555, 29580, 1372, 408, 13138, 6455, 310, 26630, 8471, 322, 9063, 358, 304, 2819, 393, 526, 24717, 310, 527, 7018, 313, 4149, 29871, 29896, 2994, 22653, 5834, 29871, 29896, 29896, 29901, 29896, 467, 10506, 29455, 653, 29580, 1372, 3160, 14436, 29891, 2288, 29892, 1970, 404, 943, 310, 278, 7748, 389, 29892, 23077, 2879, 29892, 470, 4100, 29727, 506, 284, 13994, 1316, 408, 4107, 22292, 29892, 24760, 273, 278, 1189, 713, 322, 14436, 4316, 304, 278, 11409, 275, 24315, 4018, 8396, 1251, 1389, 571, 29892, 14964, 362, 8811, 7460, 261, 4667, 1952, 720, 29892, 11715, 10655, 653, 4699, 26176, 12734, 322, 8108, 1608, 29915, 29879, 24187, 287, 25331, 2259, 23976, 2330, 526, 4249, 1784, 274, 1573, 408, 21723, 424, 29580, 1372, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6854, 4572, 5210, 11221, 263, 3273, 1234, 25857, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 28683, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 18888, 382, 617, 29880, 21496, 15228, 29901, 450, 1510, 338, 263, 7282, 760, 310, 4908, 5972, 9257, 29892, 322, 17551, 372, 756, 4953, 263, 4185, 11456, 15381, 568, 29889, 450, 1510, 756, 28482, 1176, 800, 310, 4908, 11456, 6351, 1338, 29892, 1784, 310, 6029, 13631, 701, 21217, 278, 3652, 29889, 450, 19607, 10437, 6350, 515, 29871, 29896, 29929, 29953, 29941, 304, 29871, 29896, 29929, 29947, 29929, 29889, 1670, 471, 385, 443, 8698, 1319, 4218, 304, 6664, 573, 4943, 5802, 297, 29871, 29896, 29929, 29929, 29953, 411, 263, 1250, 17433, 19840, 29892, 297, 278, 883, 310, 263, 11456, 2706, 29889, 450, 19607, 471, 10208, 3322, 287, 297, 29871, 29906, 29900, 29900, 29945, 491, 20679, 323, 3589, 583, 29892, 1058, 471, 1510, 27492, 322, 2343, 9227, 363, 278, 937, 5320, 2440, 310, 967, 6664, 2561, 29892, 7371, 297, 29899, 8697, 491, 14129, 13706, 297, 9160, 2593, 29889, 450, 937, 3652, 310, 278, 29871, 29906, 29896, 303, 6462, 15000, 18888, 382, 617, 29880, 21496, 297, 278, 3611, 6297, 322, 471, 7371, 491, 278, 14129, 29889, 15460, 11644, 884, 29178, 287, 10917, 29899, 22450, 297, 2999, 5745, 29892, 3704, 4794, 305, 6115, 313, 29906, 29900, 29900, 29953, 29994, 29906, 29900, 29896, 29896, 29897, 322, 450, 19235, 10447, 21255, 1973, 313, 29906, 29900, 29900, 29955, 29994, 29906, 29900, 29896, 29896, 511, 1716, 2825, 491, 20679, 323, 3589, 583, 29936, 476, 29899, 29929, 313, 29906, 29900, 29900, 29929, 29994, 29906, 29900, 29896, 29900, 416, 322, 263, 2323, 19840, 12720, 310, 476, 29899, 29929, 322, 6938, 313, 29896, 29929, 29947, 29896, 467, 1670, 884, 505, 1063, 1784, 13345, 974, 29879, 322, 16375, 9282, 304, 278, 2931, 297, 916, 5745, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6854, 4572, 5210, 11221, 263, 3273, 1234, 25857, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 28683, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 5264, 7306, 15228, 29901, 12886, 766, 711, 287, 10070, 505, 10434, 263, 12875, 310, 1422, 27302, 14741, 29889, 14195, 585, 15873, 29892, 376, 8439, 338, 263, 3353, 770, 310, 14741, 29892, 22332, 9424, 297, 278, 1024, 310, 7631, 766, 711, 287, 5597, 29892, 607, 29892, 1584, 565, 896, 892, 17644, 4120, 7612, 29892, 723, 297, 6053, 1040, 12356, 15155, 901, 1135, 263, 302, 4664, 749, 313, 29872, 29889, 29887, 29889, 9941, 3364, 292, 472, 263, 20346, 29899, 9894, 488, 11161, 467, 636, 29903, 987, 14741, 526, 4049, 925, 263, 4023, 465, 358, 322, 29892, 472, 3203, 304, 278, 491, 1689, 261, 29892, 10579, 297, 1662, 856, 1576, 1083, 16368, 404, 310, 278, 3957, 1546, 278, 766, 711, 287, 993, 1044, 322, 278, 704, 6929, 519, 4307, 301, 1036, 1316, 14741, 1722, 304, 278, 8323, 310, 297, 15987, 20193, 322, 6425, 18245, 537, 1213, 14195, 585, 884, 11486, 29892, 2466, 29892, 393, 278, 1407, 4023, 828, 404, 2264, 310, 1316, 9186, 5829, 293, 27302, 10021, 29879, 11183, 970, 8898, 14433, 1122, 9080, 263, 13089, 5863, 6437, 29889, 3834, 7631, 766, 711, 287, 10070, 29892, 1316, 408, 278, 24440, 943, 310, 27302, 16083, 508, 7183, 275, 12272, 575, 4314, 322, 4785, 625, 297, 278, 399, 2700, 2264, 29892, 607, 6296, 26602, 304, 21375, 29939, 1728, 278, 10751, 310, 278, 501, 29889, 29903, 29889, 10354, 29892, 4153, 6176, 263, 7429, 5264, 7306, 313, 14565, 408, 278, 25161, 310, 13589, 362, 304, 278, 17319, 29897, 1550, 1722, 368, 16679, 278, 4307, 29889, 22045, 1205, 357, 17652, 9143, 10600, 297, 365, 4347, 29892, 263, 29871, 29896, 29947, 29900, 29899, 6661, 313, 29945, 29945, 286, 6817, 29873, 497, 29892, 29871, 29953, 29900, 29900, 29899, 6360, 29899, 1025, 8046, 4367, 6115, 5447, 363, 29871, 29955, 29941, 29947, 3841, 29892, 8472, 5557, 292, 372, 515, 1641, 5700, 1623, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6854, 4572, 5210, 11221, 263, 3273, 1234, 25857, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 28683, 3273, 21036, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 6498, 20354, 355, 728, 15228, 29901, 512, 445, 6306, 29892, 263, 22112, 4868, 29871, 338, 1304, 304, 8453, 278, 6198, 9324, 310, 20953, 29889, 910, 4868, 756, 2041, 304, 367, 2998, 408, 19017, 29915, 29879, 21536, 4989, 29894, 7018, 28601, 29892, 2466, 967, 995, 471, 9815, 297, 19017, 29915, 29879, 25423, 29889, 2216, 2745, 29871, 29896, 29955, 29929, 29947, 471, 6498, 20354, 355, 728, 2221, 304, 1207, 278, 937, 20039, 310, 29871, 773, 263, 260, 943, 291, 17346, 29936, 445, 471, 17644, 8967, 297, 278, 3965, 408, 263, 20039, 310, 278, 4158, 310, 278, 11563, 1951, 13797, 29871, 1033, 2758, 697, 304, 4505, 363, 278, 11563, 29915, 29879, 4158, 2183, 278, 2038, 6306, 29889, 19017, 29892, 3138, 29892, 16387, 393, 1951, 599, 6432, 342, 616, 17873, 5643, 278, 1021, 14243, 310, 10884, 29892, 670, 4307, 310, 20953, 750, 304, 367, 15968, 29889, 2166, 617, 5562, 368, 8703, 29892, 19017, 29915, 29879, 7927, 310, 4989, 29894, 7018, 5922, 393, 278, 4889, 373, 263, 26903, 936, 1203, 310, 4158, 29871, 2861, 304, 278, 26618, 1288, 8206, 310, 4158, 29871, 338, 29871, 10604, 29901, 29871]] [[1932, 1258, 278, 1833, 14890, 5046, 2041, 304, 385, 1095, 29973], [450, 2301, 2576, 8099, 6614, 338, 825, 2924, 310, 10298, 338, 372, 29973], [8449, 5233, 756, 1063, 805, 1965, 278, 1506, 1657, 310, 278, 15588, 29973], [11644, 471, 278, 9939, 29899, 661, 9292, 10856, 29880, 2679, 413, 2518, 29899, 29895, 5403, 333, 364, 8584, 29973]]
Initial Loss: 9.197781562805176
start ij pos optimization
optimized
4 Loss: 8.480003356933594
libfilterselves Given a short answer Coppa with its context, select the most appropriate question which has the prakt short wechsel as its answer.


optimized
5 Loss: 8.242021560668945
lib gccselves Given a short answer Coppa with its context, select the most appropriate question which has the prakt short wechsel as its answer.


optimized
6 Loss: 6.7704644203186035
lib gccProcess Given a short answer Coppa with its context, select the most appropriate question which has the prakt short wechsel as its answer.


optimized
11 Loss: 6.67478609085083
lib gccProcess Given a short answer len with its context, select the most appropriate question which has the prakt short wechsel as its answer.


optimized
24 Loss: 6.61740779876709
lib gccProcess Given a short answer len with its context, select the most appropriate question which has the zeit short wechsel as its answer.


optimized
26 Loss: 6.60691499710083
lib gccProcess Given a short answer len with its context, select the most appropriate question which has the zeit shortgresql as its answer.


Initial VF Loss: 1.834030032157898
start vf pos optimization
optimized
36 Loss: 1.6610807180404663
idxPleaseusepackage dost Ligue

optimized
37 Loss: 1.4877713918685913
idx rmusepackage dost Ligue

optimized
38 Loss: 1.4512168169021606
idx rm awk dost Ligue

optimized
39 Loss: 1.3011866807937622
idx rm awk Mov Ligue

40 Loss: 1.3011866807937622
idx rm awk Mov Ligue

8
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 7431, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 29402, 3273, 16153, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 476, 799, 3801, 4815, 15228, 29901, 383, 690, 1217, 756, 2211, 2919, 970, 610, 2039, 29892, 1023, 297, 278, 4272, 13071, 322, 697, 297, 15178, 2982, 304, 278, 7062, 5933, 29889, 10180, 1328, 4815, 29892, 607, 5680, 278, 27948, 2256, 10369, 15971, 575, 29892, 12727, 11942, 7823, 10161, 322, 3196, 7800, 310, 1020, 2719, 29892, 338, 297, 4644, 383, 690, 1217, 322, 338, 20114, 304, 278, 3087, 3650, 18463, 262, 6163, 4815, 1582, 29889, 1528, 21219, 4815, 29892, 2978, 26028, 593, 776, 383, 690, 1217, 29892, 338, 3271, 304, 278, 383, 690, 1217, 678, 3470, 3905, 796, 3634, 29892, 322, 9664, 653, 13740, 1049, 322, 7412, 1049, 29889, 476, 799, 3801, 4815, 338, 278, 10150, 310, 278, 383, 690, 1217, 5120, 29915, 29879, 14089, 1788, 322, 338, 3271, 304, 22879, 476, 799, 3801, 341, 9454, 322, 13582, 3495, 304, 278, 17568, 12886, 3362, 830, 1730, 1573, 29892, 278, 10150, 337, 264, 627, 358, 310, 278, 12886, 3362, 297, 278, 5833, 12180, 310, 278, 501, 29889, 29903, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 7431, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 29402, 3273, 16153, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 17067, 29965, 7456, 29871, 29946, 322, 29871, 29945, 15228, 29901, 1763, 1207, 716, 13332, 362, 29892, 323, 16359, 29965, 4274, 29871, 29906, 29929, 29946, 17645, 278, 376, 24310, 13332, 1230, 8792, 29908, 393, 16058, 363, 1556, 19007, 14741, 29889, 450, 3686, 663, 338, 727, 526, 2211, 1303, 886, 29892, 6257, 411, 263, 11444, 24963, 29892, 988, 278, 13212, 1818, 11719, 491, 263, 13638, 310, 599, 341, 15488, 29879, 313, 1333, 925, 1906, 2198, 29897, 304, 2908, 470, 4368, 3620, 29892, 322, 278, 8831, 1818, 11719, 491, 18698, 13638, 304, 2134, 345, 3620, 29892, 541, 491, 443, 11576, 537, 304, 2908, 11444, 626, 355, 358, 29889, 6804, 278, 1422, 21561, 2609, 8661, 472, 738, 7408, 29892, 263, 376, 1168, 29883, 2638, 362, 12930, 29908, 338, 9973, 287, 29892, 15783, 341, 15488, 29879, 29892, 11050, 29879, 322, 278, 11444, 304, 1018, 322, 679, 17327, 373, 263, 14002, 1426, 29901, 565, 445, 1736, 29892, 372, 674, 367, 2665, 1250, 304, 278, 13212, 322, 8831, 304, 2134, 345, 491, 8380, 322, 18698, 13638, 29889, 910, 2794, 29892, 13332, 362, 508, 367, 24370, 491, 263, 13638, 297, 13212, 29892, 263, 9461, 537, 297, 278, 8831, 29892, 322, 263, 13638, 297, 278, 11444, 29901, 372, 338, 22622, 304, 1735, 19007, 4307, 1135, 7952, 278, 1021, 29889, 319, 1422, 8792, 4864, 363, 8619, 20078, 29889, 1152, 376, 264, 29308, 1302, 16453, 29908, 4249, 263, 1014, 29899, 842, 310, 472, 3203, 4509, 5922, 29892, 4148, 4371, 1818, 367, 2183, 491, 278, 8831, 29889, 19495, 2106, 4095, 1860, 881, 367, 23388, 491, 278, 11444, 472, 278, 714, 842, 1434, 738, 9551, 1338, 1369, 278, 13332, 1230, 8792, 29889, 450, 19007, 408, 263, 3353, 508, 871, 1044, 2629, 967, 3081, 731, 714, 297, 278, 6479, 29375, 29889, 17067, 29965, 7456, 29871, 29946, 322, 29871, 29945, 2106, 393, 10801, 3933, 411, 278, 4509, 5922, 6521, 896, 505, 1063, 378, 14373, 29892, 5998, 727, 338, 263, 27836, 1048, 278, 7107, 10963, 4666, 29899, 29968, 290, 10963, 4666, 1139, 29901, 1058, 18973, 756, 278, 376, 2388, 300, 663, 29908, 304, 4529, 278, 19007, 29915, 29879, 376, 2388, 300, 663, 1642, 9267, 4509, 2106, 28033, 4658, 896, 11097, 29892, 916, 4509, 2106, 13212, 29879, 4658, 896, 11097, 29892, 1550, 2629, 278, 19007, 29892, 278, 9245, 310, 17181, 1339, 17180, 372, 756, 278, 2186, 1827, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 7431, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 29402, 3273, 16153, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 10504, 15228, 29901, 10504, 9636, 23643, 892, 9129, 304, 427, 4018, 10013, 15859, 16930, 29889, 3645, 445, 3785, 10116, 278, 11301, 304, 16427, 29892, 491, 23772, 29879, 310, 8068, 14325, 29892, 310, 15678, 3694, 310, 10013, 297, 278, 6641, 5933, 322, 7062, 5933, 29889, 405, 342, 272, 713, 1608, 322, 5917, 11865, 1608, 884, 27849, 263, 3785, 310, 20341, 362, 29889, 28234, 1608, 313, 267, 25009, 19429, 300, 273, 28234, 1608, 29897, 1652, 473, 3276, 29892, 5998, 323, 6241, 1608, 1095, 2955, 3058, 639, 3471, 17925, 297, 7853, 310, 28234, 1608, 515, 278, 612, 12323, 5874, 29889, 10811, 29884, 28445, 5874, 284, 23274, 322, 4392, 262, 800, 2729, 373, 278, 4134, 1199, 29892, 607, 750, 19225, 964, 766, 1509, 297, 6641, 7551, 2645, 278, 3785, 310, 766, 6997, 29892, 892, 337, 2611, 630, 491, 278, 612, 12323, 8973, 29892, 3117, 297, 278, 4966, 310, 7344, 292, 1797, 975, 7169, 12459, 29889, 25215, 2925, 892, 16387, 297, 278, 4235, 310, 9850, 12845, 29892, 7774, 5275, 29892, 1737, 5275, 29892, 322, 16021, 9793, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 7431, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 29402, 3273, 16153, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 7169, 10013, 322, 12217, 277, 550, 15228, 29901, 2180, 278, 1021, 931, 278, 21952, 3775, 19673, 8068, 20021, 23772, 29879, 304, 9080, 408, 6343, 4097, 297, 7551, 29892, 278, 21952, 3775, 884, 2665, 7169, 10013, 322, 12217, 277, 550, 515, 7551, 304, 9080, 408, 6343, 4097, 975, 278, 23772, 4665, 297, 350, 2679, 29882, 2518, 297, 8068, 14325, 29892, 773, 9117, 414, 304, 3151, 18237, 278, 3081, 310, 278, 1887, 1236, 459, 793, 310, 1716, 12625, 29889, 7169, 10013, 892, 6153, 304, 8068, 20021, 10161, 763, 6952, 29882, 350, 2606, 29939, 29892, 838, 29885, 2606, 29939, 29892, 322, 3685, 279, 29939, 392, 491, 278, 21952, 3775, 988, 896, 3796, 408, 1616, 275, 550, 322, 2215, 13269, 29889, 838, 550, 892, 1162, 582, 1573, 964, 278, 21952, 324, 8249, 411, 697, 5190, 2000, 376, 7341, 17102, 13211, 29908, 607, 471, 12420, 411, 376, 276, 1760, 368, 27503, 287, 29908, 13936, 29892, 21952, 3775, 29892, 322, 10013, 13936, 5073, 287, 297, 278, 4038, 310, 278, 4642, 12626, 310, 660, 29877, 1859, 322, 297, 6952, 29882, 7392, 28464, 278, 21952, 3775, 7841, 263, 10013, 9121, 784, 2592, 5331, 491, 10013, 2498, 660, 29875, 12026, 29920, 2918, 313, 1451, 29915, 29875, 476, 686, 29899, 4161, 29882, 467, 2860, 278, 21952, 324, 378, 1119, 310, 8068, 14325, 491, 402, 996, 22880, 18915, 29892, 9117, 414, 892, 10434, 408, 6343, 4097, 322, 1302, 29899, 21895, 411, 10013, 322, 660, 2518, 29899, 29968, 27342, 1036, 313, 29968, 27342, 550, 29897, 310, 17161, 575, 322, 4235, 297, 3685, 279, 29939, 392, 471, 1925, 2501, 278, 23772, 29879, 408, 263, 11809, 1951, 23772, 29879, 892, 451, 6068, 304, 10933, 1728, 963, 29889, 450, 21952, 324, 10658, 15431, 310, 3685, 279, 29939, 392, 471, 263, 660, 2518, 29899, 29968, 27342, 388, 313, 29968, 29882, 8929, 511, 4934, 278, 3611, 10523, 29603, 29892, 9985, 411, 10013, 9257, 670, 1024, 471, 9070, 1794, 29871, 10604, 29901, 29871]] [[1932, 1258, 278, 443, 1573, 5922, 5967, 278, 2078, 698, 265, 25013, 17327, 29973], [11644, 471, 278, 8236, 364, 1878, 261, 297, 278, 3748, 29973], [512, 18371, 3391, 29892, 988, 338, 278, 274, 21471, 29973], [6804, 1258, 1023, 310, 534, 277, 265, 29915, 29879, 29215, 7232, 935, 373, 1009, 21126, 29973]]
Initial Loss: 6.945293426513672
start ij pos optimization
4 Loss: 6.945293426513672
lib gccProcess Given a short answer len with its context, select the most appropriate question which has the zeit shortgresql as its answer.


5 Loss: 6.945293426513672
lib gccProcess Given a short answer len with its context, select the most appropriate question which has the zeit shortgresql as its answer.


6 Loss: 6.945293426513672
lib gccProcess Given a short answer len with its context, select the most appropriate question which has the zeit shortgresql as its answer.


optimized
11 Loss: 6.904423713684082
lib gccProcess Given a short answerSize with its context, select the most appropriate question which has the zeit shortgresql as its answer.


optimized
24 Loss: 6.8395233154296875
lib gccProcess Given a short answerSize with its context, select the most appropriate question which has the engl shortgresql as its answer.


optimized
26 Loss: 6.821770668029785
lib gccProcess Given a short answerSize with its context, select the most appropriate question which has the engl shortgleich as its answer.


Initial VF Loss: 1.2353845834732056
start vf pos optimization
optimized
36 Loss: 1.1021206378936768
cores rm awk Mov Ligue

optimized
37 Loss: 0.9991576671600342
coresistoire awk Mov Ligue

38 Loss: 0.9991576671600342
coresistoire awk Mov Ligue

optimized
39 Loss: 0.9863862991333008
coresistoire awk saves Ligue

40 Loss: 0.9863862991333008
coresistoire awk saves Ligue

9
[4, 5, 6, 11, 24, 26] [36, 37, 38, 39, 40]
[[1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 3505, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 19784, 3273, 19867, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 2169, 275, 5241, 2109, 15228, 29901, 512, 3111, 29871, 29896, 29929, 29929, 29929, 29892, 16417, 7017, 287, 263, 4266, 3652, 1741, 29892, 11644, 399, 1934, 304, 1522, 263, 8649, 291, 5218, 29892, 263, 3748, 1510, 2729, 373, 278, 4908, 1824, 310, 278, 1021, 3611, 29889, 16956, 287, 10106, 967, 16417, 3006, 545, 491, 2169, 275, 5241, 2109, 29892, 278, 1824, 3897, 263, 4655, 26838, 2551, 10106, 967, 2847, 11801, 1065, 29892, 607, 5331, 16417, 304, 23011, 8649, 291, 5218, 408, 263, 4943, 3652, 29892, 7863, 373, 5490, 29871, 29896, 29947, 29892, 29871, 29906, 29900, 29900, 29900, 29889, 2180, 967, 19224, 29892, 278, 1824, 263, 2859, 408, 1568, 408, 4832, 4646, 29879, 263, 4723, 29889, 5373, 12602, 287, 491, 8649, 291, 5218, 29892, 2645, 278, 29871, 29896, 29929, 29929, 29929, 29994, 29906, 29900, 29900, 29900, 4259, 29892, 16417, 3897, 278, 937, 3564, 304, 4337, 515, 4654, 304, 937, 2058, 297, 278, 26838, 2645, 263, 2323, 11456, 4259, 29889, 8649, 291, 5218, 9698, 967, 1065, 373, 278, 3564, 29915, 29879, 1903, 5410, 1196, 786, 1156, 2211, 2440, 297, 29871, 29906, 29900, 29900, 29906, 29892, 411, 5373, 2386, 478, 2079, 22417, 10208, 3322, 292, 278, 1510, 408, 263, 22898, 293, 630, 1824, 313, 5062, 393, 5528, 2753, 362, 29915, 29879, 2441, 3495, 4702, 287, 389, 21769, 3055, 29897, 297, 3839, 310, 393, 1629, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 3505, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 19784, 3273, 19867, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 29871, 29896, 29896, 29941, 15228, 29901, 450, 16372, 1751, 1078, 29871, 29896, 29906, 5925, 25444, 2667, 322, 29871, 29896, 29896, 29941, 5925, 1644, 414, 373, 24165, 29889, 17302, 1438, 526, 278, 29702, 8907, 30003, 29874, 19133, 322, 5925, 4818, 363, 26206, 16162, 11898, 15205, 322, 19623, 491, 278, 16372, 30003, 392, 263, 1353, 310, 3086, 18981, 2895, 414, 29892, 3704, 278, 7817, 363, 14253, 16162, 16972, 29889, 10059, 884, 1751, 1078, 470, 338, 23736, 630, 411, 263, 1353, 310, 5925, 21561, 12435, 515, 278, 16372, 1571, 29889, 450, 16372, 22039, 767, 1179, 11842, 7293, 3086, 16715, 7606, 29892, 760, 310, 278, 3303, 3900, 10317, 310, 24836, 29915, 29879, 4797, 10212, 7606, 1788, 29892, 322, 756, 263, 14002, 380, 1296, 297, 383, 837, 309, 370, 29892, 263, 20810, 16445, 17558, 10212, 7606, 29892, 408, 1532, 408, 263, 380, 1296, 297, 278, 13380, 8984, 21651, 7606, 297, 8991, 17500, 29892, 1570, 12568, 29889, 14184, 18857, 322, 8041, 472, 278, 20114, 29411, 4616, 8364, 5996, 8907, 472, 10059, 11465, 403, 411, 278, 16372, 29892, 512, 29871, 29906, 29900, 29896, 29941, 29892, 278, 16372, 9326, 393, 372, 471, 23736, 1218, 278, 21510, 7417, 15929, 3457, 5996, 16715, 7606, 297, 10180, 29879, 379, 1772, 29892, 7360, 29889, 8512, 28269, 443, 12817, 29892, 278, 3086, 6461, 262, 291, 10550, 7817, 338, 5982, 373, 10059, 29915, 29879, 24165, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 3505, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 19784, 3273, 19867, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 515, 1048, 29871, 29946, 29900, 29900, 11033, 304, 29871, 29896, 29929, 29896, 29946, 15228, 29901, 450, 17039, 545, 4333, 472, 278, 478, 29987, 29909, 338, 278, 1556, 15171, 6270, 13587, 310, 1400, 29899, 1990, 936, 7824, 17039, 545, 297, 278, 3186, 29889, 1670, 526, 14235, 29871, 29906, 29906, 29892, 29900, 29900, 29900, 3618, 297, 278, 4333, 393, 4612, 278, 3785, 515, 1048, 29871, 29946, 29900, 29900, 11033, 304, 29871, 29896, 29929, 29896, 29946, 29889, 910, 18469, 4249, 916, 23704, 2648, 29920, 20578, 322, 3218, 417, 18574, 265, 20444, 706, 17039, 1973, 29892, 4908, 29892, 5176, 322, 10432, 27690, 1002, 1041, 322, 1559, 29894, 886, 29892, 278, 27263, 29892, 2261, 29877, 802, 29892, 2448, 29877, 29899, 2385, 936, 29892, 12684, 713, 322, 3012, 405, 6223, 585, 23704, 29889, 2178, 3913, 310, 17039, 545, 526, 9875, 29892, 515, 20450, 322, 2626, 9020, 29892, 304, 21760, 29892, 16831, 272, 936, 29892, 12962, 29892, 22082, 936, 29892, 1002, 1041, 363, 17161, 575, 3704, 285, 792, 2708, 29892, 408, 1532, 408, 6956, 3631, 10200, 800, 29889, 17582, 29879, 1304, 3160, 29892, 1766, 569, 29892, 394, 370, 1901, 29892, 12565, 29892, 1935, 945, 13536, 29892, 8112, 313, 18434, 310, 8112, 1559, 1747, 511, 20444, 706, 29892, 330, 6777, 29892, 715, 1901, 29892, 18449, 29892, 3275, 322, 5147, 314, 1199, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 4303, 20243, 7032, 11221, 263, 3273, 1234, 3505, 411, 967, 3030, 29892, 1831, 278, 1556, 8210, 1139, 607, 756, 278, 19784, 3273, 19867, 408, 967, 1234, 29889, 13, 29871, 10567, 29901, 29871, 13899, 673, 29901, 3677, 5560, 29879, 15228, 29901, 1932, 7679, 10340, 526, 7180, 1090, 14698, 24221, 29892, 896, 3273, 264, 322, 4953, 266, 6541, 29889, 7311, 7679, 10340, 29892, 916, 1135, 17439, 29879, 29892, 437, 451, 16951, 1735, 297, 7977, 29892, 445, 338, 24799, 297, 1023, 7601, 5837, 29901, 1549, 12570, 292, 322, 900, 8497, 29889, 512, 278, 4091, 340, 2181, 504, 29892, 988, 6791, 29873, 280, 316, 5404, 508, 6403, 29892, 29684, 12570, 29879, 883, 29892, 607, 4556, 25871, 7679, 304, 4337, 373, 2246, 310, 4091, 1680, 7679, 29889, 7311, 25871, 7679, 338, 4049, 9642, 29892, 408, 11682, 491, 278, 12502, 310, 2428, 3283, 29892, 445, 508, 1121, 297, 9642, 23150, 8401, 373, 2246, 310, 20023, 6743, 29889, 14104, 882, 3412, 12570, 29879, 508, 1121, 297, 900, 8497, 29892, 2845, 1363, 278, 12570, 29879, 526, 451, 3814, 279, 470, 1363, 7679, 15359, 526, 8338, 3192, 3412, 29892, 25391, 8338, 900, 6289, 408, 269, 3466, 10008, 3412, 278, 12570, 29889, 897, 11356, 297, 278, 11563, 29892, 23150, 23389, 715, 579, 1711, 29892, 322, 900, 29881, 2012, 310, 12570, 292, 29889, 4525, 900, 6289, 508, 2845, 367, 1906, 988, 278, 5518, 297, 278, 4818, 310, 278, 900, 29881, 1321, 384, 793, 701, 2935, 29892, 4969, 376, 424, 5560, 29879, 613, 470, 988, 372, 1321, 384, 793, 1623, 2935, 29892, 4969, 376, 19274, 9514, 1642, 960, 278, 304, 567, 310, 278, 7679, 10340, 2629, 278, 900, 6289, 3933, 13330, 701, 2935, 29892, 896, 526, 2000, 3677, 293, 9012, 322, 5222, 695, 1475, 29892, 8307, 29889, 960, 777, 310, 278, 10340, 297, 278, 900, 29881, 526, 14870, 1623, 1328, 29892, 278, 3829, 338, 2000, 385, 975, 685, 287, 3677, 293, 1220, 470, 5222, 695, 457, 29892, 322, 565, 599, 310, 278, 7679, 10340, 526, 975, 685, 287, 470, 278, 1959, 701, 29899, 20845, 338, 9815, 29892, 896, 526, 3763, 2000, 491, 278, 1556, 2498, 4958, 29892, 3677, 5560, 29879, 322, 5222, 9514, 29889, 29871, 10604, 29901, 29871]] [[512, 6879, 4108, 29892, 1058, 6166, 278, 13332, 1230, 946, 8395, 29973], [7908, 292, 18318, 920, 1784, 6023, 3204, 29879, 297, 278, 3748, 29973], [1128, 1784, 19079, 505, 376, 17260, 294, 29908, 297, 1009, 2983, 29973], [1724, 9559, 297, 278, 29871, 29896, 29947, 29945, 29955, 10107, 327, 29973]]
Initial Loss: 7.405913829803467
start ij pos optimization
optimized
4 Loss: 7.034323215484619
jdbc gccProcess Given a short answerSize with its context, select the most appropriate question which has the engl shortgleich as its answer.


5 Loss: 7.034323215484619
jdbc gccProcess Given a short answerSize with its context, select the most appropriate question which has the engl shortgleich as its answer.


optimized
6 Loss: 6.217020034790039
jdbc gccPlayer Given a short answerSize with its context, select the most appropriate question which has the engl shortgleich as its answer.


optimized
11 Loss: 6.135282516479492
jdbc gccPlayer Given a short answer Guerra with its context, select the most appropriate question which has the engl shortgleich as its answer.


optimized
24 Loss: 6.051503658294678
jdbc gccPlayer Given a short answer Guerra with its context, select the most appropriate question which has the Kult shortgleich as its answer.


optimized
26 Loss: 5.955480098724365
jdbc gccPlayer Given a short answer Guerra with its context, select the most appropriate question which has the Kult shortcgi as its answer.


Initial VF Loss: 2.2631726264953613
start vf pos optimization
optimized
36 Loss: 2.1670894622802734
schemasistoire awk saves Ligue

37 Loss: 2.1670894622802734
schemasistoire awk saves Ligue

optimized
38 Loss: 2.1210525035858154
schemasistoirexspace saves Ligue

optimized
39 Loss: 1.7099460363388062
schemasistoirexspacegroupby Ligue

optimized
40 Loss: 1.6888093948364258
schemasistoirexspacegroupby Among

**********word_sorting**********
0
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 20025, 278, 1494, 3838, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 3093, 16976, 2381, 1398, 734, 329, 8927, 16411, 260, 680, 282, 29765, 2454, 1999, 14588, 527, 3283, 330, 677, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 20025, 278, 1494, 3838, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 266, 19627, 844, 575, 21115, 3240, 1757, 417, 298, 2782, 931, 12343, 346, 302, 381, 29894, 1648, 302, 898, 267, 924, 6534, 10569, 1915, 298, 351, 6234, 8341, 4857, 1730, 403, 610, 275, 713, 260, 3055, 311, 8992, 14911, 711, 5761, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 20025, 278, 1494, 3838, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 29443, 5987, 3533, 347, 1223, 1794, 3151, 719, 658, 533, 5503, 29891, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 20025, 278, 1494, 3838, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 1818, 29891, 3093, 29874, 15499, 424, 338, 12392, 7245, 3460, 3984, 346, 1885, 362, 9753, 4939, 29871, 10604, 29901, 29871]] [[2889, 14999, 26148, 3391, 14982, 728, 1701, 29916, 29887, 417, 345, 22739, 4023, 845, 9416, 842, 8753, 1358, 389, 11359, 25364, 2589, 29895, 1766, 29926, 706, 452, 312, 279, 457, 282, 291, 19120, 1183, 8961, 9089, 377, 279, 1960], [6866, 6984, 270, 820, 21305, 26603, 2326, 3502, 707, 9566, 1259, 1361, 293, 4154, 14530, 610, 1165, 616, 6035, 22999, 403, 27710, 457, 7035, 573, 19688, 380, 1466, 1582, 380, 497, 503, 8276, 29891], [11179, 571, 2148, 650, 3151, 29873, 7759, 679, 29873, 952, 3074, 13444, 457, 1775, 374, 1279, 7243, 1037, 294, 18178, 397, 1974, 19911, 1319], [274, 465, 10738, 5807, 688, 269, 2207, 281, 547, 29891]]
Initial Loss: 9.942380905151367
start ij pos optimization
optimized
4 Loss: 4.857658386230469
pass sechsVor Sort the following words alphabetically.


optimized
5 Loss: 3.228329658508301
pass6Vor Sort the following words alphabetically.


optimized
6 Loss: 3.1854100227355957
pass6 cube Sort the following words alphabetically.


8 Loss: 3.1854100227355957
pass6 cube Sort the following words alphabetically.


optimized
10 Loss: 3.177217960357666
pass6 cube Sort the following unfortunately alphabetically.


12 Loss: 3.177217960357666
pass6 cube Sort the following unfortunately alphabetically.


Initial VF Loss: 1.9629602432250977
start vf pos optimization
optimized
19 Loss: 1.4264127016067505
coorddefinedLprev西

optimized
20 Loss: 1.2800008058547974
coord IEnumerableLprev西

optimized
21 Loss: 1.2000958919525146
coord IEnumerablellaprev西

optimized
22 Loss: 1.1604746580123901
coord IEnumerablella London西

23 Loss: 1.1604746580123901
coord IEnumerablella London西

1
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1209, 29953, 28704, 20025, 278, 1494, 15428, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 6261, 269, 2782, 1035, 5288, 362, 521, 595, 27709, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 28704, 20025, 278, 1494, 15428, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 2243, 326, 1065, 29872, 626, 15372, 8442, 29916, 6872, 604, 638, 2999, 316, 358, 287, 521, 453, 343, 2205, 728, 5222, 4735, 23324, 706, 6505, 4980, 5745, 5153, 424, 1248, 29895, 3031, 546, 289, 557, 295, 568, 11643, 3021, 952, 293, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 28704, 20025, 278, 1494, 15428, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 27081, 653, 343, 29884, 17630, 2485, 29876, 3002, 10135, 352, 681, 16741, 29882, 28704, 674, 340, 413, 277, 557, 29891, 1878, 29884, 8617, 295, 6940, 267, 1760, 9922, 431, 280, 3309, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 28704, 20025, 278, 1494, 15428, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 13958, 449, 7482, 3312, 1462, 359, 519, 269, 1878, 29875, 410, 1557, 23979, 3677, 4144, 29894, 7273, 424, 366, 29915, 29881, 29154, 296, 14387, 431, 7232, 1025, 264, 14973, 29891, 1236, 705, 29872, 1559, 6617, 264, 766, 12846, 16976, 3144, 27419, 20699, 21557, 279, 1274, 29884, 537, 29871, 10604, 29901, 29871]] [[17763, 272, 380, 481, 11285, 1301, 3527], [633, 17234, 1044, 265, 19548, 367, 538, 15772, 440, 423, 289, 1431, 3460, 270, 608, 4780, 17161, 1089, 23904, 403, 2791, 586, 713, 639, 16465, 24324, 261, 559, 13686, 20436, 14549, 266, 2559, 728, 27773, 1460, 1020, 1173, 29874], [3509, 1266, 1652, 927, 4203, 14698, 432, 388, 2123, 305, 4726, 6717], [6411, 417, 265, 289, 314, 4614, 289, 3775, 354, 29894, 391, 321, 29891, 295, 333, 2691, 330, 262, 432, 1117, 487, 29872, 22181, 1581, 3804, 495, 1171, 26808, 290, 375, 16637, 6836, 351, 2518, 805, 1709, 22973, 5675, 11801]]
Initial Loss: 3.24472713470459
start ij pos optimization
4 Loss: 3.24472713470459
pass6 cube Sort the following unfortunately alphabetically.


5 Loss: 3.24472713470459
pass6 cube Sort the following unfortunately alphabetically.


optimized
6 Loss: 2.988173484802246
pass6 successfully Sort the following unfortunately alphabetically.


8 Loss: 2.988173484802246
pass6 successfully Sort the following unfortunately alphabetically.


optimized
10 Loss: 2.952848434448242
pass6 successfully Sort the followingsweise alphabetically.


12 Loss: 2.952848434448242
pass6 successfully Sort the followingsweise alphabetically.


Initial VF Loss: 1.3527421951293945
start vf pos optimization
optimized
19 Loss: 1.277490258216858
owner IEnumerablella London西

20 Loss: 1.277490258216858
owner IEnumerablella London西

optimized
21 Loss: 1.114659309387207
owner IEnumerable cable London西

22 Loss: 1.114659309387207
owner IEnumerable cable London西

23 Loss: 1.114659309387207
owner IEnumerable cable London西

2
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1209, 29953, 8472, 20025, 278, 1494, 27776, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 285, 459, 9942, 1659, 564, 6332, 281, 2741, 1617, 286, 1309, 371, 9157, 6686, 347, 288, 279, 10163, 542, 3780, 29891, 2174, 29883, 1008, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 8472, 20025, 278, 1494, 27776, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 946, 1091, 375, 3335, 17826, 17696, 503, 14596, 805, 29874, 352, 8497, 1999, 328, 13334, 329, 260, 870, 336, 13718, 519, 385, 1107, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 8472, 20025, 278, 1494, 27776, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 805, 279, 479, 409, 2325, 282, 6270, 6260, 1497, 24230, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 8472, 20025, 278, 1494, 27776, 22968, 1711, 29889, 13, 29871, 10567, 29901, 29871, 10524, 1527, 7353, 15831, 285, 2142, 29876, 381, 611, 332, 625, 633, 13492, 734, 2608, 895, 18871, 11105, 553, 499, 706, 321, 1730, 2265, 403, 285, 935, 294, 1411, 519, 286, 326, 293, 719, 18290, 13956, 3240, 14150, 1506, 283, 29882, 25613, 429, 2036, 29871, 10604, 29901, 29871]] [[14679, 3661, 6812, 1395, 28445, 298, 404, 337, 326, 8399, 344, 269, 3021, 542, 793, 304, 29891], [408, 29877, 1455, 1321, 384, 25031, 11878, 561, 331, 391, 4996, 347], [432, 27835, 409, 10085, 8548, 343, 468, 29875, 22127, 15203], [1274, 1004, 626, 3712, 568, 491, 29878, 484, 6795, 627, 12220, 3312, 285, 2784, 914, 2741, 297, 328, 1730, 519, 282, 7820, 406, 428, 21535, 1388, 439, 583, 1760, 439, 466, 696, 520, 2665, 262, 295, 528, 361, 1017, 6003, 375, 713, 825, 29915, 276]]
Initial Loss: 3.1505305767059326
start ij pos optimization
4 Loss: 3.1505305767059326
pass6 successfully Sort the followingsweise alphabetically.


5 Loss: 3.1505305767059326
pass6 successfully Sort the followingsweise alphabetically.


optimized
6 Loss: 3.0599451065063477
pass6 null Sort the followingsweise alphabetically.


optimized
8 Loss: 2.990938901901245
pass6 null Sort rou followingsweise alphabetically.


optimized
10 Loss: 2.9398608207702637
pass6 null Sort rou following tou alphabetically.


optimized
12 Loss: 2.9105820655822754
pass6 null Sort rou following tou alphabet compiling.


Initial VF Loss: 1.3343337774276733
start vf pos optimization
optimized
19 Loss: 1.1863974332809448
src IEnumerable cable London西

optimized
20 Loss: 1.1091724634170532
src tou cable London西

optimized
21 Loss: 1.0412629842758179
src tou clim London西

22 Loss: 1.0412629842758179
src tou clim London西

optimized
23 Loss: 0.989550769329071
src tou clim London Peru

3
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1209, 29953, 1870, 20025, 16053, 1494, 11943, 22968, 22520, 29889, 13, 29871, 10567, 29901, 29871, 285, 687, 267, 521, 18450, 5711, 16424, 6230, 5777, 457, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 1870, 20025, 16053, 1494, 11943, 22968, 22520, 29889, 13, 29871, 10567, 29901, 29871, 289, 6541, 18690, 626, 279, 9093, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 1870, 20025, 16053, 1494, 11943, 22968, 22520, 29889, 13, 29871, 10567, 29901, 29871, 25745, 520, 1247, 545, 7655, 509, 392, 16010, 988, 2541, 619, 2634, 321, 29891, 295, 333, 1238, 647, 13267, 354, 11530, 11417, 5807, 666, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1209, 29953, 1870, 20025, 16053, 1494, 11943, 22968, 22520, 29889, 13, 29871, 10567, 29901, 29871, 4382, 8768, 300, 1259, 10489, 4366, 8938, 2475, 3711, 504, 19783, 711, 423, 298, 15092, 14812, 831, 29895, 4200, 11379, 6152, 5174, 14757, 2200, 537, 15416, 2738, 4152, 10708, 295, 29871, 10604, 29901, 29871]] [[3151, 403, 3144, 29049, 4156, 425, 2002, 17167, 1883, 267, 5101], [289, 820, 521, 340, 1034, 307, 4089, 403, 5685, 617, 5987, 1737, 13242, 277, 293, 15833, 29885, 532, 384, 22799, 17176, 13956, 590, 9708, 3333, 655, 1248, 952, 331, 681, 13686, 410, 3471, 3406, 14051, 333, 1974, 7751, 4282, 1301, 24389], [15699, 1246, 5137, 338, 542, 1220, 889, 2209, 359, 1766, 29880, 22187, 716, 8934, 12534, 29893, 10552, 8303, 25245, 16897, 1020, 2801, 1301, 3901], [8210, 7537, 10492, 270, 1308, 7771, 16317, 2673, 429, 1151, 4084, 2397, 447, 1657, 425, 346, 302, 653, 704, 2170, 371, 2011, 1171, 371, 585, 269, 7781, 8802, 28837, 2243, 10578, 2393, 5275, 27886, 261, 281, 719, 4123]]
Initial Loss: 4.89849853515625
start ij pos optimization
optimized
4 Loss: 4.610137462615967
onclick6 null Sort rou following tou alphabet compiling.


5 Loss: 4.610137462615967
onclick6 null Sort rou following tou alphabet compiling.


6 Loss: 4.610137462615967
onclick6 null Sort rou following tou alphabet compiling.


optimized
8 Loss: 4.212334156036377
onclick6 null Sortsb following tou alphabet compiling.


optimized
10 Loss: 4.148726463317871
onclick6 null Sortsb followingabi alphabet compiling.


optimized
12 Loss: 4.086953163146973
onclick6 null Sortsb followingabi alphabet dolor.


Initial VF Loss: 2.412593364715576
start vf pos optimization
optimized
19 Loss: 2.1566638946533203
href tou clim London Peru

optimized
20 Loss: 1.8932199478149414
href oko clim London Peru

optimized
21 Loss: 1.606756329536438
href oko click London Peru

optimized
22 Loss: 1.5232616662979126
href oko click jQuery Peru

optimized
23 Loss: 1.4350661039352417
href oko click jQuery Nikol

4
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 15630, 29953, 1870, 20025, 20778, 1494, 19266, 22968, 22224, 29889, 13, 29871, 10567, 29901, 29871, 17081, 386, 2348, 4708, 2225, 28069, 330, 18673, 2545, 290, 2117, 987, 262, 10156, 414, 378, 1555, 345, 8760, 1319, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15630, 29953, 1870, 20025, 20778, 1494, 19266, 22968, 22224, 29889, 13, 29871, 10567, 29901, 29871, 604, 2435, 1004, 7598, 1147, 479, 15595, 2301, 29895, 2251, 8280, 387, 661, 403, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15630, 29953, 1870, 20025, 20778, 1494, 19266, 22968, 22224, 29889, 13, 29871, 10567, 29901, 29871, 23351, 345, 298, 355, 9131, 1100, 18115, 8995, 432, 562, 29885, 1399, 2873, 423, 325, 4626, 403, 2511, 3071, 301, 9716, 273, 680, 26379, 915, 557, 885, 3496, 479, 439, 935, 521, 1131, 295, 378, 1089, 367, 2570, 295, 9232, 14588, 18333, 6013, 358, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15630, 29953, 1870, 20025, 20778, 1494, 19266, 22968, 22224, 29889, 13, 29871, 10567, 29901, 29871, 1775, 4115, 457, 284, 4996, 29879, 392, 4029, 340, 2784, 885, 6834, 1410, 16736, 281, 436, 2028, 3151, 28898, 18643, 1134, 611, 545, 264, 20444, 706, 2381, 442, 24329, 29871, 10604, 29901, 29871]] [[28635, 280, 274, 562, 29885, 1095, 545, 3661, 330, 3470, 29872, 15883, 1527, 1399, 275, 649, 519, 1472, 4098, 6641, 1049, 282, 14862, 2373, 1330, 7115, 457, 20187, 537, 577, 369, 7577, 6258, 271, 260, 1300], [5075, 1110, 472, 841, 311, 29872, 270, 5727, 29891, 330, 26342, 758, 5138, 424, 544, 1608, 11504, 11173, 362, 364, 11464, 21580, 380, 524, 260, 3470, 29891, 20639, 305, 3252, 761, 386], [1223, 6329, 844, 575, 21115, 1439, 768, 375, 10395, 12734, 851, 532], [23791, 6022, 23794, 295, 370, 336, 1559, 26062, 274, 687, 309, 1067, 2518, 12561, 413, 388, 29877, 9049, 18321, 548, 272, 1784, 2373, 357, 1100, 5644, 2002, 1400, 26482, 9228, 1026, 805, 929, 380, 2593, 264, 266, 1572, 412, 329, 293]]
Initial Loss: 4.639191627502441
start ij pos optimization
optimized
4 Loss: 4.1671271324157715
von6 null Sortsb followingabi alphabet dolor.


5 Loss: 4.1671271324157715
von6 null Sortsb followingabi alphabet dolor.


optimized
6 Loss: 3.6331043243408203
von6 Graphics Sortsb followingabi alphabet dolor.


optimized
8 Loss: 3.354984760284424
von6 Graphics Sort einz followingabi alphabet dolor.


optimized
10 Loss: 3.151793956756592
von6 Graphics Sort einz following utwor alphabet dolor.


optimized
12 Loss: 3.002124786376953
von6 Graphics Sort einz following utwor alphabet grep.


Initial VF Loss: 2.319000244140625
start vf pos optimization
optimized
19 Loss: 2.040691614151001
bekannt oko click jQuery Nikol

optimized
20 Loss: 1.8064833879470825
bekannt Thor click jQuery Nikol

optimized
21 Loss: 1.656293511390686
bekannt Thor lanz jQuery Nikol

optimized
22 Loss: 1.4676190614700317
bekannt Thor lanz Welcome Nikol

optimized
23 Loss: 1.377975583076477
bekannt Thor lanz WelcomeAlex

5
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1005, 29953, 29247, 20025, 15747, 1494, 28085, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 260, 3096, 270, 627, 2904, 15331, 2426, 1375, 260, 4003, 17148, 432, 16468, 2524, 1113, 11924, 6130, 2251, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 29247, 20025, 15747, 1494, 28085, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 27954, 29879, 13903, 25946, 300, 2453, 708, 775, 8690, 521, 719, 2929, 568, 4853, 14910, 2454, 260, 4085, 26379, 842, 5153, 424, 3764, 5946, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 29247, 20025, 15747, 1494, 28085, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 623, 433, 1509, 260, 11017, 1935, 567, 436, 487, 273, 18838, 1306, 403, 8261, 2671, 610, 294, 324, 2524, 29895, 3921, 3252, 391, 3516, 328, 5313, 269, 713, 14040, 12422, 29893, 555, 16079, 17470, 287, 452, 29890, 2497, 29872, 9225, 352, 1608, 325, 351, 979, 285, 4615, 16267, 1171, 10674, 333, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 29247, 20025, 15747, 1494, 28085, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 11595, 311, 5819, 311, 443, 29875, 10709, 9570, 29891, 15482, 290, 4105, 29894, 912, 527, 8270, 1426, 950, 3008, 11038, 305, 1701, 391, 297, 305, 330, 711, 569, 1948, 9878, 1537, 1927, 29871, 10604, 29901, 29871]] [[394, 370, 1901, 385, 23024, 8927, 2545, 3946, 482, 1506, 1878, 1287, 521, 277, 262, 1261, 332, 14765, 2264, 7472, 4940, 11251, 27954, 7352, 1065, 2696, 17535], [270, 2121, 12912, 20657, 5807, 2593, 280], [289, 475, 568, 3817, 1387, 3926, 1803, 429, 327, 983, 16077, 2512, 24011, 348, 3660, 7431, 292, 3665, 26351, 272, 301, 7427, 12251, 616, 380, 749, 9238, 8733, 24745, 29886, 949], [594, 264, 594, 3712, 728, 22623, 29893, 1979, 628, 13083, 2906, 265, 5566, 485, 403, 5089, 29891, 10524, 1884, 1601, 1989, 1731, 261, 269, 29915, 29879]]
Initial Loss: 3.2692971229553223
start ij pos optimization
4 Loss: 3.2692971229553223
von6 Graphics Sort einz following utwor alphabet grep.


5 Loss: 3.2692971229553223
von6 Graphics Sort einz following utwor alphabet grep.


optimized
6 Loss: 2.8267569541931152
von6peror Sort einz following utwor alphabet grep.


optimized
8 Loss: 2.8141446113586426
von6peror Sortbrow following utwor alphabet grep.


optimized
10 Loss: 2.7884421348571777
von6peror Sortbrow following sympt alphabet grep.


12 Loss: 2.7884421348571777
von6peror Sortbrow following sympt alphabet grep.


Initial VF Loss: 1.4308871030807495
start vf pos optimization
19 Loss: 1.4308871030807495
bekannt Thor lanz WelcomeAlex

optimized
20 Loss: 1.40312922000885
bekannt Mitchell lanz WelcomeAlex

optimized
21 Loss: 1.320886492729187
bekannt Mitchellamerikanischer WelcomeAlex

optimized
22 Loss: 1.3017044067382812
bekannt Mitchellamerikanischer snippetAlex

optimized
23 Loss: 1.109824776649475
bekannt Mitchellamerikanischer snippet Vincent

6
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 23721, 1494, 25828, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 899, 303, 625, 6520, 1582, 658, 21408, 8802, 4930, 346, 15754, 1886, 287, 633, 4774, 287, 298, 18592, 658, 7749, 946, 314, 331, 5464, 338, 5288, 293, 13284, 29344, 300, 7124, 26213, 831, 14167, 3209, 950, 1017, 1410, 16736, 10592, 2454, 8872, 15353, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 23721, 1494, 25828, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 1246, 335, 1140, 29891, 25016, 307, 345, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 23721, 1494, 25828, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 286, 18996, 5969, 265, 2625, 29893, 4995, 1602, 481, 10388, 3564, 12231, 681, 658, 493, 12616, 6207, 1773, 1199, 696, 2543, 728, 5198, 1381, 1270, 11105, 4439, 625, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 23721, 1494, 25828, 22968, 12680, 29889, 13, 29871, 10567, 29901, 29871, 1014, 8818, 1000, 378, 1582, 2832, 293, 289, 370, 952, 277, 29871, 10604, 29901, 29871]] [[322, 307, 1885, 6957, 29882, 309, 403, 274, 10003, 845, 2051, 316, 14373, 23440, 1600, 332, 1432, 920, 288, 3473, 542, 1600, 2123, 351, 328, 692, 283, 11643, 1228, 4085, 329, 293], [12109, 329, 424, 9124, 6685, 1270, 1999, 13469, 1373, 29880, 21496, 521, 1698, 9358, 488, 567, 29891, 6299, 280, 2524, 1361, 293, 4154, 29879, 1171, 298, 387, 27185, 22808, 335, 280, 1766, 25206, 10788, 7606, 1015, 19772, 269, 484, 557, 1532, 5018, 1131, 1629], [10592, 287, 5313, 21464, 301, 786, 457], [12709, 6432, 261, 537, 21282, 29880, 429, 294, 546, 1008, 2355, 841, 19405, 29872, 439, 453, 7697, 696, 3011, 403, 3348, 2105, 805, 2784, 896, 1468, 497, 16892, 280, 20107, 377, 381, 503, 774, 336]]
Initial Loss: 2.765937089920044
start ij pos optimization
4 Loss: 2.765937089920044
von6peror Sortbrow following sympt alphabet grep.


5 Loss: 2.765937089920044
von6peror Sortbrow following sympt alphabet grep.


6 Loss: 2.765937089920044
von6peror Sortbrow following sympt alphabet grep.


optimized
8 Loss: 2.6563684940338135
von6peror Sort convin following sympt alphabet grep.


optimized
10 Loss: 2.6122145652770996
von6peror Sort convin following Bayern alphabet grep.


optimized
12 Loss: 2.5958995819091797
von6peror Sort convin following Bayern alphabet wherever.


Initial VF Loss: 1.2065225839614868
start vf pos optimization
optimized
19 Loss: 0.9637024998664856
regex Mitchellamerikanischer snippet Vincent

optimized
20 Loss: 0.8585326075553894
regex nginxamerikanischer snippet Vincent

21 Loss: 0.8585326075553894
regex nginxamerikanischer snippet Vincent

optimized
22 Loss: 0.8382338881492615
regex nginxamerikanischerDel Vincent

23 Loss: 0.8382338881492615
regex nginxamerikanischerDel Vincent

7
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 17953, 1494, 19584, 22968, 29693, 29889, 13, 29871, 10567, 29901, 29871, 1035, 5561, 591, 29915, 29881, 592, 561, 391, 3021, 5830, 322, 1330, 23644, 29875, 6288, 17168, 5275, 2258, 504, 713, 289, 3775, 354, 17064, 3144, 1851, 29891, 14183, 8771, 22887, 273, 425, 1270, 623, 4490, 3448, 6017, 1562, 748, 1486, 5960, 3656, 403, 301, 12427, 4639, 1026, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 17953, 1494, 19584, 22968, 29693, 29889, 13, 29871, 10567, 29901, 29871, 4891, 7582, 734, 27333, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 17953, 1494, 19584, 22968, 29693, 29889, 13, 29871, 10567, 29901, 29871, 1560, 866, 988, 1473, 3179, 4508, 485, 14339, 289, 545, 24087, 394, 370, 1901, 22965, 3406, 1623, 14800, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 13651, 20025, 17953, 1494, 19584, 22968, 29693, 29889, 13, 29871, 10567, 29901, 29871, 20474, 362, 410, 29893, 288, 4439, 328, 5143, 1506, 326, 12734, 2625, 1582, 297, 7334, 993, 29871, 10604, 29901, 29871]] [[25695, 22593, 16976, 748, 569, 29873, 2778, 655, 333, 18130, 359, 608, 269, 10617, 8854, 2243, 271, 805, 2559, 5790, 7945, 1171], [626, 293, 519, 3347, 484, 1208, 1227, 29891, 1302, 29877, 316, 15714, 2235, 261, 18677, 19061, 305, 1171, 9825, 3002, 1399, 7297, 3214, 273, 10203, 16976, 4639, 1730, 1487, 272, 537, 896, 29915, 345, 19183, 1582, 7013, 13308], [8287, 538, 1506, 513, 280, 11155, 12734, 6625, 352, 681, 3151, 601, 553, 958, 6092, 272, 680, 7933, 10435, 1456, 432, 809, 6837, 786, 1661, 346, 20990, 9564, 293, 22754, 3801, 4450, 488, 312, 410, 29893, 29880, 1153, 412, 24559, 23717, 11183], [25745, 29877, 1537, 29887, 681, 16077, 11422, 2411, 300, 17269, 20990, 3665, 314, 375, 4004, 1020, 600, 17840, 2743, 1867, 261]]
Initial Loss: 3.693343162536621
start ij pos optimization
4 Loss: 3.693343162536621
von6peror Sort convin following Bayern alphabet wherever.


5 Loss: 3.693343162536621
von6peror Sort convin following Bayern alphabet wherever.


optimized
6 Loss: 3.304910659790039
von6Foundation Sort convin following Bayern alphabet wherever.


optimized
8 Loss: 3.187537670135498
von6Foundation Sort peri following Bayern alphabet wherever.


optimized
10 Loss: 3.131035089492798
von6Foundation Sort peri following dst alphabet wherever.


optimized
12 Loss: 3.1283841133117676
von6Foundation Sort peri following dst alphabet amet.


Initial VF Loss: 1.427322268486023
start vf pos optimization
optimized
19 Loss: 1.2479068040847778
postgresql nginxamerikanischerDel Vincent

20 Loss: 1.2479068040847778
postgresql nginxamerikanischerDel Vincent

21 Loss: 1.2479068040847778
postgresql nginxamerikanischerDel Vincent

optimized
22 Loss: 1.1836143732070923
postgresql nginxamerikanischerToString Vincent

23 Loss: 1.1836143732070923
postgresql nginxamerikanischerToString Vincent

8
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 23603, 1494, 29743, 22968, 27315, 29889, 13, 29871, 10567, 29901, 29871, 7855, 1238, 1624, 7915, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 23603, 1494, 29743, 22968, 27315, 29889, 13, 29871, 10567, 29901, 29871, 7055, 262, 333, 592, 6986, 2524, 1111, 895, 1663, 499, 633, 329, 1259, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 23603, 1494, 29743, 22968, 27315, 29889, 13, 29871, 10567, 29901, 29871, 9758, 14744, 307, 3522, 921, 261, 9100, 439, 547, 282, 2231, 265, 14430, 282, 488, 17572, 766, 23493, 885, 274, 547, 280, 15332, 301, 4564, 1161, 533, 1208, 7661, 966, 3197, 427, 14022, 3002, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 23603, 1494, 29743, 22968, 27315, 29889, 13, 29871, 10567, 29901, 29871, 17152, 12751, 4307, 29887, 4357, 14175, 293, 25007, 557, 423, 297, 2055, 575, 332, 403, 6003, 616, 263, 1823, 1336, 1374, 351, 22502, 371, 560, 1960, 8619, 29881, 2350, 2326, 6710, 805, 2620, 29881, 1698, 2791, 3391, 805, 609, 1662, 537, 20531, 311, 275, 29871, 10604, 29901, 29871]] [[1156, 386, 1774, 263, 680, 1559, 2546, 10894, 7606, 25542, 1099, 21751, 13949, 3274, 1410, 789, 27090, 7251, 495, 3915, 5704, 3116, 287, 2348, 1624, 425, 1270, 9753, 312, 1598, 885, 1862, 1171, 27767, 1847, 9434, 1540, 281, 3424], [2723, 7214, 338, 1107, 433, 7672, 2650, 767, 12932, 369, 7256, 1527, 302, 388, 18254, 29885, 387, 12722, 29876, 29915, 29873, 409, 801, 272, 344, 409, 556, 482, 25300, 708, 11324, 391], [17360, 568, 3711, 504, 19783, 711, 293, 17306, 29890, 9403, 1122, 29876, 538, 590, 9708, 3333, 655, 23603, 561, 708, 269, 2883, 8802, 6023], [564, 386, 1336, 397, 521, 381, 29886, 24828, 1081, 2386, 1006, 326, 18120, 19263, 23952, 11276, 282, 820, 446, 8961, 347, 18178, 1541, 13076, 5716, 29891, 4434, 18515, 281, 1507]]
Initial Loss: 2.9516327381134033
start ij pos optimization
4 Loss: 2.9516327381134033
von6Foundation Sort peri following dst alphabet amet.


5 Loss: 2.9516327381134033
von6Foundation Sort peri following dst alphabet amet.


6 Loss: 2.9516327381134033
von6Foundation Sort peri following dst alphabet amet.


optimized
8 Loss: 2.835507392883301
von6Foundation Sort curv following dst alphabet amet.


optimized
10 Loss: 2.7604687213897705
von6Foundation Sort curv following curv alphabet amet.


optimized
12 Loss: 2.75239896774292
von6Foundation Sort curv following curv alphabet internally.


Initial VF Loss: 1.2469960451126099
start vf pos optimization
19 Loss: 1.2469960451126099
postgresql nginxamerikanischerToString Vincent

20 Loss: 1.2469960451126099
postgresql nginxamerikanischerToString Vincent

21 Loss: 1.2469960451126099
postgresql nginxamerikanischerToString Vincent

22 Loss: 1.2469960451126099
postgresql nginxamerikanischerToString Vincent

23 Loss: 1.2469960451126099
postgresql nginxamerikanischerToString Vincent

9
[4, 5, 6, 8, 10, 12] [19, 20, 21, 22, 23]
[[1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 27686, 1494, 27686, 22968, 25106, 29889, 13, 29871, 10567, 29901, 29871, 19710, 2813, 6898, 2330, 21767, 9102, 368, 2265, 457, 1663, 647, 423, 5291, 615, 1591, 29873, 12066, 7492, 286, 2242, 4727, 7339, 29885, 1228, 11982, 375, 3459, 20089, 2674, 5372, 1757, 815, 5152, 291, 482, 900, 293, 11880, 12836, 29773, 305, 14332, 14263, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 27686, 1494, 27686, 22968, 25106, 29889, 13, 29871, 10567, 29901, 29871, 4508, 284, 2480, 423, 534, 682, 300, 330, 719, 17607, 805, 453, 22964, 918, 7868, 705, 287, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 27686, 1494, 27686, 22968, 25106, 29889, 13, 29871, 10567, 29901, 29871, 715, 804, 1935, 719, 263, 9089, 286, 3028, 1598, 953, 655, 330, 1144, 996, 1274, 328, 423, 301, 4858, 1374, 2817, 562, 3002, 1375, 29884, 355, 1663, 1662, 17304, 292, 297, 880, 403, 3271, 1328, 26414, 8090, 21555, 4034, 1663, 545, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1005, 29953, 28077, 20025, 27686, 1494, 27686, 22968, 25106, 29889, 13, 29871, 10567, 29901, 29871, 5374, 324, 6202, 4695, 302, 4087, 423, 2413, 952, 344, 375, 1261, 858, 1598, 410, 880, 13458, 533, 6584, 1460, 640, 9103, 403, 289, 1141, 1398, 23546, 17827, 29871, 10604, 29901, 29871]] [[385, 579, 290, 19263, 1250, 19265, 1208, 1765, 844, 1743, 11880, 12836, 298, 355, 9131, 1100, 298, 3028, 1531, 28015, 1100, 282, 4981, 293, 1219, 439, 737, 5004, 27709, 805, 549, 29891, 12070, 29873, 523, 22898, 9593, 12875, 471, 5819], [385, 2838, 4346, 297, 510, 2139, 1821, 20089, 719, 1527, 304, 29890, 17970], [5354, 1667, 303, 388, 18131, 3021, 265, 331, 293, 11942, 9979, 2529, 814, 29891, 17233, 5946, 1591, 585, 4382, 29895, 1475, 275, 6454, 1357, 343, 16099], [289, 370, 952, 5367, 289, 361, 332, 29883, 403, 508, 457, 907, 314, 21455, 766, 6685, 573, 14921, 303, 456, 429, 29882, 2327, 403, 10672, 24170, 5059, 2646, 262, 1081, 1974, 15694, 29880, 1600, 384, 1766, 25206, 286, 29883, 479, 29872, 4883, 459, 327, 314, 423, 2413, 9297, 11643, 1228, 27580, 2323, 471]]
Initial Loss: 3.298949718475342
start ij pos optimization
optimized
4 Loss: 3.1999282836914062
Seattle6Foundation Sort curv following curv alphabet internally.


5 Loss: 3.1999282836914062
Seattle6Foundation Sort curv following curv alphabet internally.


optimized
6 Loss: 3.1528830528259277
Seattle6awt Sort curv following curv alphabet internally.


optimized
8 Loss: 3.053213119506836
Seattle6awt Sorteree following curv alphabet internally.


optimized
10 Loss: 2.9077162742614746
Seattle6awt Sorteree followingutos alphabet internally.


12 Loss: 2.9077162742614746
Seattle6awt Sorteree followingutos alphabet internally.


Initial VF Loss: 1.6027384996414185
start vf pos optimization
optimized
19 Loss: 1.43709135055542
Seattle nginxamerikanischerToString Vincent

optimized
20 Loss: 1.3314237594604492
Seattle JohnnyamerikanischerToString Vincent

optimized
21 Loss: 1.1602550745010376
Seattle JohnnylaravelToString Vincent

optimized
22 Loss: 0.9816014170646667
Seattle Johnnylaravel Regex Vincent

optimized
23 Loss: 0.8133959770202637
Seattle Johnnylaravel Regex Jeff

**********operators**********
0
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 278, 5023, 310, 278, 1015, 5455, 29892, 10272, 278, 1121, 29889, 10604, 278, 1353, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 6043, 8542, 310, 474, 491, 432, 29889, 13, 29947, 1015, 29871, 29906, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 278, 5023, 310, 278, 1015, 5455, 29892, 10272, 278, 1121, 29889, 10604, 278, 1353, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 3234, 310, 474, 322, 432, 29889, 13, 29906, 1015, 29871, 29941, 1015, 29871, 29945, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 278, 5023, 310, 278, 1015, 5455, 29892, 10272, 278, 1121, 29889, 10604, 278, 1353, 29889, 13, 29871, 10567, 29901, 29871, 1015, 474, 338, 278, 1353, 432, 1316, 393, 278, 6124, 310, 474, 322, 432, 338, 474, 29889, 13, 459, 29871, 29896, 29955, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 11221, 278, 5023, 310, 278, 1015, 5455, 29892, 10272, 278, 1121, 29889, 10604, 278, 1353, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 27778, 278, 19087, 6019, 515, 278, 302, 9904, 3694, 470, 3639, 29871, 29900, 565, 5642, 338, 6019, 29889, 13, 459, 29871, 29941, 29896, 29871, 29955, 29871, 29896, 29955, 29871, 29929, 29871, 10604, 29901, 29871]] [[29871, 29906], [29871, 29896, 29955], [29871, 29941, 29945, 29906], [29871, 29941, 29945]]
Initial Loss: 10.087255477905273
start ij pos optimization
optimized
4 Loss: 5.430719375610352
phen sechsVor Given the definition of the op operator, compute the result. Output the number.


optimized
5 Loss: 4.134790897369385
phenwrVor Given the definition of the op operator, compute the result. Output the number.


optimized
6 Loss: 3.9020564556121826
phenwrTu Given the definition of the op operator, compute the result. Output the number.


optimized
12 Loss: 3.8451168537139893
phenwrTu Given the definition of the Encyclop operator, compute the result. Output the number.


optimized
13 Loss: 3.7894937992095947
phenwrTu Given the definition of the Encyclop dataframe, compute the result. Output the number.


optimized
21 Loss: 3.664496660232544
phenwrTu Given the definition of the Encyclop dataframe, compute the result. Output the elabor.


Initial VF Loss: 1.390062689781189
start vf pos optimization
optimized
28 Loss: 1.0833797454833984
xmlnsdefinedLprev西

optimized
29 Loss: 1.0638067722320557
xmlns occasionsLprev西

optimized
30 Loss: 0.8598586916923523
xmlns occasionsFFERprev西

optimized
31 Loss: 0.7678644061088562
xmlns occasionsFFER AWS西

optimized
32 Loss: 0.7166047692298889
xmlns occasionsFFER AWS apache

1
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17292, 15866, 23215, 11221, 278, 5023, 310, 278, 25863, 12205, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 6043, 8542, 310, 474, 491, 278, 21162, 310, 278, 6043, 8542, 310, 474, 491, 432, 29889, 13, 29906, 29945, 1015, 29871, 29955, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23215, 11221, 278, 5023, 310, 278, 25863, 12205, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 27778, 278, 1473, 515, 278, 302, 9904, 3694, 29889, 13, 459, 448, 29896, 29953, 29871, 29929, 29896, 29871, 29900, 29871, 29896, 29900, 29871, 29953, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23215, 11221, 278, 5023, 310, 278, 25863, 12205, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 29896, 474, 432, 27778, 474, 746, 3109, 1135, 432, 29892, 432, 6467, 29936, 1015, 29906, 474, 432, 27778, 474, 746, 7621, 1135, 432, 29892, 432, 6467, 29889, 13, 459, 29896, 313, 459, 29906, 29871, 29945, 29947, 29871, 29945, 29947, 29897, 313, 459, 29906, 29871, 29941, 29945, 29871, 29941, 29945, 29897, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23215, 11221, 278, 5023, 310, 278, 25863, 12205, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 1353, 301, 1316, 393, 278, 6124, 310, 432, 322, 301, 338, 474, 29889, 13, 29896, 29955, 29953, 1015, 448, 29896, 29955, 29953, 29871, 10604, 29901, 29871]] [[29871, 29896, 29900], [29871, 29941, 29945], [29871, 29900], [29871, 29896, 29900]]
Initial Loss: 3.8352832794189453
start ij pos optimization
4 Loss: 3.8352832794189453
phenwrTu Given the definition of the Encyclop dataframe, compute the result. Output the elabor.


5 Loss: 3.8352832794189453
phenwrTu Given the definition of the Encyclop dataframe, compute the result. Output the elabor.


optimized
6 Loss: 3.660371780395508
phenwrrw Given the definition of the Encyclop dataframe, compute the result. Output the elabor.


12 Loss: 3.660371780395508
phenwrrw Given the definition of the Encyclop dataframe, compute the result. Output the elabor.


optimized
13 Loss: 3.641044855117798
phenwrrw Given the definition of the Encyclop universe, compute the result. Output the elabor.


21 Loss: 3.641044855117798
phenwrrw Given the definition of the Encyclop universe, compute the result. Output the elabor.


Initial VF Loss: 0.8829024434089661
start vf pos optimization
28 Loss: 0.8829024434089661
xmlns occasionsFFER AWS apache

29 Loss: 0.8829024434089661
xmlns occasionsFFER AWS apache

30 Loss: 0.8829024434089661
xmlns occasionsFFER AWS apache

optimized
31 Loss: 0.794182300567627
xmlns occasionsFFERclojure apache

optimized
32 Loss: 0.7572917938232422
xmlns occasionsFFERclojure deploy

2
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17292, 15866, 13975, 11221, 278, 5023, 310, 278, 25863, 19859, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 6597, 29879, 278, 937, 2999, 310, 29871, 29947, 515, 278, 302, 9904, 3694, 29889, 13, 459, 29871, 29946, 29871, 29953, 29871, 29941, 29941, 29871, 29896, 29906, 29947, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 13975, 11221, 278, 5023, 310, 278, 25863, 19859, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 29896, 432, 338, 278, 6124, 310, 474, 322, 432, 29936, 474, 1015, 29906, 432, 338, 278, 3234, 310, 474, 322, 432, 29889, 13, 29906, 1015, 29896, 29871, 29941, 1015, 29896, 29871, 29945, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 13975, 11221, 278, 5023, 310, 278, 25863, 19859, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 14874, 278, 432, 937, 13340, 310, 474, 29889, 13, 29896, 29906, 29945, 29953, 29929, 29900, 1015, 29871, 29906, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 13975, 11221, 278, 5023, 310, 278, 25863, 19859, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 474, 24187, 1372, 278, 13340, 310, 474, 29889, 13, 459, 29871, 29896, 29906, 29955, 29871, 10604, 29901, 29871]] [[29871, 29941, 29906], [29871, 29896, 29896, 29946], [29871, 29900], [29871, 29941, 29945]]
Initial Loss: 3.326387882232666
start ij pos optimization
4 Loss: 3.326387882232666
phenwrrw Given the definition of the Encyclop universe, compute the result. Output the elabor.


5 Loss: 3.326387882232666
phenwrrw Given the definition of the Encyclop universe, compute the result. Output the elabor.


optimized
6 Loss: 3.298285961151123
phenwr nep Given the definition of the Encyclop universe, compute the result. Output the elabor.


optimized
12 Loss: 3.23928165435791
phenwr nep Given the definition of the Fen universe, compute the result. Output the elabor.


optimized
13 Loss: 3.2010369300842285
phenwr nep Given the definition of the Fen referenced, compute the result. Output the elabor.


21 Loss: 3.2010369300842285
phenwr nep Given the definition of the Fen referenced, compute the result. Output the elabor.


Initial VF Loss: 1.0209016799926758
start vf pos optimization
optimized
28 Loss: 0.9359584450721741
pid occasionsFFERclojure deploy

optimized
29 Loss: 0.8629874587059021
pid occurredFFERclojure deploy

optimized
30 Loss: 0.7701895833015442
pid occurred disappearclojure deploy

31 Loss: 0.7701895833015442
pid occurred disappearclojure deploy

optimized
32 Loss: 0.7449443936347961
pid occurred disappearclojure threw

3
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 16180, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 4328, 310, 474, 322, 432, 29889, 13, 29896, 29955, 29953, 1015, 29871, 29906, 29941, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 16180, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 474, 12778, 925, 3307, 13340, 472, 278, 1095, 310, 474, 304, 1207, 263, 5112, 29891, 299, 456, 293, 1353, 29889, 13, 459, 29871, 29896, 29906, 29955, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 16180, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 29896, 432, 338, 278, 6124, 310, 474, 322, 432, 29936, 474, 1015, 29906, 432, 338, 278, 3234, 310, 474, 322, 432, 29889, 13, 29898, 29896, 1015, 29896, 29871, 29941, 29897, 1015, 29906, 29871, 29906, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 16180, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 21162, 310, 278, 6043, 8542, 310, 474, 491, 278, 6043, 8542, 310, 474, 491, 432, 29889, 13, 29941, 29955, 1015, 29871, 29955, 29871, 10604, 29901, 29871]] [[29871, 29896, 29955], [29871, 29945, 29953, 29929, 29900], [29871, 29896, 29955], [29871, 29941]]
Initial Loss: 3.284919023513794
start ij pos optimization
4 Loss: 3.284919023513794
phenwr nep Given the definition of the Fen referenced, compute the result. Output the elabor.


5 Loss: 3.284919023513794
phenwr nep Given the definition of the Fen referenced, compute the result. Output the elabor.


6 Loss: 3.284919023513794
phenwr nep Given the definition of the Fen referenced, compute the result. Output the elabor.


12 Loss: 3.284919023513794
phenwr nep Given the definition of the Fen referenced, compute the result. Output the elabor.


optimized
13 Loss: 3.2488441467285156
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


21 Loss: 3.2488441467285156
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


Initial VF Loss: 0.7382478713989258
start vf pos optimization
optimized
28 Loss: 0.7105774283409119
system occurred disappearclojure threw

optimized
29 Loss: 0.6944261193275452
system patient disappearclojure threw

30 Loss: 0.6944261193275452
system patient disappearclojure threw

31 Loss: 0.6944261193275452
system patient disappearclojure threw

optimized
32 Loss: 0.690188467502594
system patient disappearclojure flu

4
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 6674, 3687, 474, 491, 29871, 29896, 29900, 432, 3064, 29889, 13, 29900, 1015, 29871, 29906, 29945, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 23197, 29879, 432, 515, 474, 29889, 13, 29955, 1015, 29871, 29955, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 27778, 278, 19087, 515, 278, 302, 9904, 3694, 29889, 13, 459, 448, 29896, 29953, 29871, 29900, 29871, 29896, 29900, 29871, 29953, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 27778, 278, 937, 515, 278, 302, 9904, 3694, 29889, 13, 459, 448, 29896, 29953, 29871, 29929, 29896, 29871, 29900, 29871, 29896, 29900, 29871, 29953, 29871, 10604, 29901, 29871]] [[29871, 29941, 29955, 29946], [29871, 29900], [29871, 29906], [29871, 29896, 29946, 29946]]
Initial Loss: 3.311004877090454
start ij pos optimization
4 Loss: 3.311004877090454
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


5 Loss: 3.311004877090454
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


6 Loss: 3.311004877090454
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


12 Loss: 3.311004877090454
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


13 Loss: 3.311004877090454
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


21 Loss: 3.311004877090454
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


Initial VF Loss: 0.690188467502594
start vf pos optimization
optimized
28 Loss: 0.6272801756858826
sys patient disappearclojure flu

29 Loss: 0.6272801756858826
sys patient disappearclojure flu

30 Loss: 0.6272801756858826
sys patient disappearclojure flu

31 Loss: 0.6272801756858826
sys patient disappearclojure flu

optimized
32 Loss: 0.6120132803916931
sys patient disappearclojure literary

5
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 27778, 278, 1473, 515, 278, 302, 9904, 3694, 29889, 13, 459, 448, 29896, 29953, 29871, 29929, 29896, 29871, 29900, 29871, 29896, 29900, 29871, 29953, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 6674, 3687, 278, 302, 9904, 3694, 29889, 13, 459, 448, 29896, 29953, 29871, 29896, 29871, 29896, 29900, 29871, 29945, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 3234, 310, 432, 14591, 310, 474, 29889, 13, 29899, 29941, 1015, 29871, 29941, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 4328, 310, 474, 322, 432, 29889, 13, 29955, 1015, 29871, 29955, 29871, 10604, 29901, 29871]] [[29871, 29896, 29906], [29871, 29929], [29871, 29900], [29871, 29896, 29896]]
Initial Loss: 3.3826026916503906
start ij pos optimization
4 Loss: 3.3826026916503906
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


5 Loss: 3.3826026916503906
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


6 Loss: 3.3826026916503906
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


12 Loss: 3.3826026916503906
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


13 Loss: 3.3826026916503906
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


21 Loss: 3.3826026916503906
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


Initial VF Loss: 0.6120132803916931
start vf pos optimization
28 Loss: 0.6120132803916931
sys patient disappearclojure literary

29 Loss: 0.6120132803916931
sys patient disappearclojure literary

30 Loss: 0.6120132803916931
sys patient disappearclojure literary

31 Loss: 0.6120132803916931
sys patient disappearclojure literary

32 Loss: 0.6120132803916931
sys patient disappearclojure literary

6
[4, 5, 6, 12, 13, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 338, 278, 3234, 310, 474, 322, 432, 29889, 13, 29906, 1015, 29871, 29941, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 302, 29896, 302, 29906, 2023, 302, 29876, 25470, 278, 302, 9904, 3694, 29889, 13, 459, 29871, 29941, 29945, 29871, 29945, 29947, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 1015, 474, 12778, 925, 3307, 13340, 472, 278, 1095, 310, 474, 304, 1207, 263, 5112, 29891, 299, 456, 293, 1353, 29889, 13, 459, 29871, 29896, 29906, 29896, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17292, 15866, 23446, 11221, 278, 5023, 310, 278, 20685, 21445, 29892, 10272, 278, 1121, 29889, 10604, 278, 13771, 29889, 13, 29871, 10567, 29901, 29871, 474, 1015, 432, 14874, 278, 432, 937, 13340, 310, 474, 29889, 13, 29896, 29906, 29945, 29953, 29929, 29900, 1015, 29871, 29946, 29871, 10604, 29901, 29871]] [[29871, 29900], [29871, 29896, 29941], [29871, 29941], [29871, 29955, 29906, 29896]]
Initial Loss: 3.3782665729522705
start ij pos optimization
6 
No improvement, ending iteration
4 Loss: 3.3782665729522705
phenwr nep Given the definition of the Fen induction, compute the result. Output the elabor.


**********implicatures**********
0
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 5538, 5013, 5790, 29871, 29906, 29915, 29879, 1234, 2099, 4874, 470, 694, 29973, 10604, 4874, 470, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 9260, 278, 15202, 7668, 5702, 599, 278, 22069, 17901, 5013, 5790, 29871, 29906, 29901, 525, 1576, 15202, 7668, 5702, 287, 777, 310, 278, 22069, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 5538, 5013, 5790, 29871, 29906, 29915, 29879, 1234, 2099, 4874, 470, 694, 29973, 10604, 4874, 470, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 9260, 366, 19917, 2158, 470, 3099, 17901, 5013, 5790, 29871, 29906, 29901, 525, 1349, 968, 18239, 2337, 19531, 15482, 1960, 29889, 525, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 5538, 5013, 5790, 29871, 29906, 29915, 29879, 1234, 2099, 4874, 470, 694, 29973, 10604, 4874, 470, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6295, 540, 29915, 29879, 20759, 17901, 5013, 5790, 29871, 29906, 29901, 525, 29965, 29882, 856, 451, 3721, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 5538, 5013, 5790, 29871, 29906, 29915, 29879, 1234, 2099, 4874, 470, 694, 29973, 10604, 4874, 470, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 366, 4459, 25561, 1244, 17901, 5013, 5790, 29871, 29906, 29901, 525, 4591, 2462, 697, 6169, 29871, 10604, 29901, 29871]] [[694], [694], [694], [4874]]
Initial Loss: 10.957056045532227
start ij pos optimization
optimized
4 Loss: 6.107580184936523
Dan sechsVor Does Speaker 2's answer mean yes or no? Output yes or no.


optimized
5 Loss: 4.822983741760254
Dan BretVor Does Speaker 2's answer mean yes or no? Output yes or no.


optimized
6 Loss: 4.714259147644043
Dan BretWh Does Speaker 2's answer mean yes or no? Output yes or no.


optimized
13 Loss: 4.625168323516846
Dan BretWh Does Speaker 2'greg answer mean yes or no? Output yes or no.


optimized
15 Loss: 4.581297874450684
Dan BretWh Does Speaker 2'greg answer takes yes or no? Output yes or no.


optimized
22 Loss: 4.51722526550293
Dan BretWh Does Speaker 2'greg answer takes yes or no? Output yes nebo no.


Initial VF Loss: 1.3611747026443481
start vf pos optimization
optimized
30 Loss: 1.0609630346298218
LisdefinedLprev西

optimized
31 Loss: 0.9160179495811462
Lis BernardLprev西

optimized
32 Loss: 0.8206788897514343
Lis Bernard Manhprev西

optimized
33 Loss: 0.7293095588684082
Lis Bernard Manhhuman西

optimized
34 Loss: 0.7122426629066467
Lis Bernard ManhhumanHrsg

1
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 3951, 23132, 8809, 5538, 5013, 5790, 29871, 29906, 29915, 7642, 1234, 4893, 4874, 470, 694, 29973, 10604, 4874, 18607, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 9260, 306, 5649, 372, 1532, 17901, 5013, 5790, 29871, 29906, 29901, 525, 10858, 8252, 338, 408, 2821, 408, 17439, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 23132, 8809, 5538, 5013, 5790, 29871, 29906, 29915, 7642, 1234, 4893, 4874, 470, 694, 29973, 10604, 4874, 18607, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 366, 4459, 2253, 17901, 5013, 5790, 29871, 29906, 29901, 525, 29943, 1266, 6419, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 23132, 8809, 5538, 5013, 5790, 29871, 29906, 29915, 7642, 1234, 4893, 4874, 470, 694, 29973, 10604, 4874, 18607, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 2855, 476, 355, 9131, 471, 2821, 373, 825, 366, 5131, 17901, 5013, 5790, 29871, 29906, 29901, 525, 29907, 719, 11195, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 23132, 8809, 5538, 5013, 5790, 29871, 29906, 29915, 7642, 1234, 4893, 4874, 470, 694, 29973, 10604, 4874, 18607, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 896, 8589, 17901, 5013, 5790, 29871, 29906, 29901, 525, 15597, 8589, 763, 274, 1446, 322, 26361, 6169, 29871, 10604, 29901, 29871]] [[4874], [694], [4874], [4874]]
Initial Loss: 4.518126487731934
start ij pos optimization
4 Loss: 4.518126487731934
Dan BretWh Does Speaker 2'greg answer takes yes or no? Output yes nebo no.


optimized
5 Loss: 4.427577972412109
DanhozWh Does Speaker 2'greg answer takes yes or no? Output yes nebo no.


optimized
6 Loss: 4.399934768676758
Danhozuntil Does Speaker 2'greg answer takes yes or no? Output yes nebo no.


optimized
13 Loss: 4.352176666259766
Danhozuntil Does Speaker 2' Wolfgang answer takes yes or no? Output yes nebo no.


optimized
15 Loss: 4.224452972412109
Danhozuntil Does Speaker 2' Wolfgang answerFlags yes or no? Output yes nebo no.


optimized
22 Loss: 4.187798023223877
Danhozuntil Does Speaker 2' Wolfgang answerFlags yes or no? Output yes bzw no.


Initial VF Loss: 0.8420481085777283
start vf pos optimization
optimized
30 Loss: 0.7759776711463928
lst Bernard ManhhumanHrsg

optimized
31 Loss: 0.714239776134491
lst brig ManhhumanHrsg

optimized
32 Loss: 0.705328643321991
lst brig AinhumanHrsg

optimized
33 Loss: 0.6759480834007263
lst brig Ain HamburgHrsg

optimized
34 Loss: 0.5707466006278992
lst brig Ain Hamburgdan

2
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 15675, 4874, 470, 694, 29973, 10604, 4874, 16591, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 3624, 372, 385, 4780, 4982, 17901, 5013, 5790, 29871, 29906, 29901, 525, 13468, 1736, 902, 23915, 304, 278, 289, 650, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 15675, 4874, 470, 694, 29973, 10604, 4874, 16591, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 3624, 540, 5279, 15723, 17901, 5013, 5790, 29871, 29906, 29901, 525, 3868, 29915, 29879, 856, 540, 29915, 29879, 2675, 1549, 263, 4319, 13261, 472, 278, 3256, 29889, 1205, 372, 29915, 29879, 451, 670, 12570, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 15675, 4874, 470, 694, 29973, 10604, 4874, 16591, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 3492, 2949, 264, 29915, 29873, 7424, 304, 1101, 592, 29892, 892, 366, 17901, 5013, 5790, 29871, 29906, 29901, 525, 29903, 3818, 29889, 1619, 12570, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 15675, 4874, 470, 694, 29973, 10604, 4874, 16591, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 29956, 294, 4111, 1460, 23023, 1848, 17901, 5013, 5790, 29871, 29906, 29901, 525, 20841, 1460, 2337, 591, 1503, 670, 5192, 373, 670, 12844, 29872, 345, 6169, 29871, 10604, 29901, 29871]] [[4874], [4874], [4874], [694]]
Initial Loss: 3.956695318222046
start ij pos optimization
4 Loss: 3.956695318222046
Danhozuntil Does Speaker 2' Wolfgang answerFlags yes or no? Output yes bzw no.


5 Loss: 3.956695318222046
Danhozuntil Does Speaker 2' Wolfgang answerFlags yes or no? Output yes bzw no.


6 Loss: 3.956695318222046
Danhozuntil Does Speaker 2' Wolfgang answerFlags yes or no? Output yes bzw no.


13 Loss: 3.956695318222046
Danhozuntil Does Speaker 2' Wolfgang answerFlags yes or no? Output yes bzw no.


optimized
15 Loss: 3.949012279510498
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yes bzw no.


optimized
22 Loss: 3.914522171020508
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesexpression no.


Initial VF Loss: 0.5454189777374268
start vf pos optimization
30 Loss: 0.5454189777374268
lst brig Ain Hamburgdan

optimized
31 Loss: 0.522756814956665
lst parc Ain Hamburgdan

optimized
32 Loss: 0.49389609694480896
lst parc Dan Hamburgdan

optimized
33 Loss: 0.4763314723968506
lst parc Dan Vietnamdan

34 Loss: 0.4763314723968506
lst parc Dan Vietnamdan

3
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17471, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 29902, 5107, 1303, 278, 2669, 1108, 29889, 1815, 366, 1371, 592, 17901, 5013, 5790, 29871, 29906, 29901, 525, 8139, 2121, 508, 306, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17471, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 366, 1348, 298, 858, 8749, 1033, 437, 393, 17901, 5013, 5790, 29871, 29906, 29901, 525, 3112, 29915, 29879, 1641, 2599, 372, 363, 21726, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17471, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6295, 366, 1348, 1286, 4129, 29915, 29879, 330, 11586, 2507, 1250, 304, 4226, 17901, 5013, 5790, 29871, 29906, 29901, 525, 2887, 4226, 408, 372, 1033, 367, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17471, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 9260, 1183, 1925, 373, 7688, 17901, 5013, 5790, 29871, 29906, 29901, 525, 13468, 338, 408, 16835, 408, 263, 1153, 446, 6169, 29871, 10604, 29901, 29871]] [[4874], [4874], [694], [694]]
Initial Loss: 4.069665431976318
start ij pos optimization
4 Loss: 4.069665431976318
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesexpression no.


5 Loss: 4.069665431976318
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesexpression no.


6 Loss: 4.069665431976318
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesexpression no.


13 Loss: 4.069665431976318
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesexpression no.


15 Loss: 4.069665431976318
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesexpression no.


optimized
22 Loss: 3.925750255584717
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesmapsto no.


Initial VF Loss: 0.49476608633995056
start vf pos optimization
optimized
30 Loss: 0.4637461006641388
makeText parc Dan Vietnamdan

31 Loss: 0.4637461006641388
makeText parc Dan Vietnamdan

32 Loss: 0.4637461006641388
makeText parc Dan Vietnamdan

33 Loss: 0.4637461006641388
makeText parc Dan Vietnamdan

optimized
34 Loss: 0.4633513391017914
makeText parc Dan Vietnam Norway

4
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6028, 306, 1246, 366, 297, 263, 2217, 1550, 17901, 5013, 5790, 29871, 29906, 29901, 525, 3112, 29915, 29879, 3023, 297, 278, 7250, 856, 306, 29915, 29885, 2675, 304, 748, 304, 8709, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 366, 1073, 988, 540, 338, 17901, 5013, 5790, 29871, 29906, 29901, 525, 29902, 29915, 645, 1284, 1075, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 23323, 366, 2274, 278, 21256, 17901, 5013, 5790, 29871, 29906, 29901, 525, 3112, 338, 408, 2821, 408, 17439, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 27700, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 9260, 896, 679, 738, 10757, 17901, 5013, 5790, 29871, 29906, 29901, 525, 1576, 3699, 338, 408, 5941, 408, 263, 377, 391, 280, 6169, 29871, 10604, 29901, 29871]] [[4874], [4874], [4874], [694]]
Initial Loss: 3.832829236984253
start ij pos optimization
4 Loss: 3.832829236984253
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesmapsto no.


5 Loss: 3.832829236984253
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesmapsto no.


6 Loss: 3.832829236984253
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesmapsto no.


13 Loss: 3.832829236984253
Danhozuntil Does Speaker 2' Wolfgang answerkiej yes or no? Output yesmapsto no.


optimized
15 Loss: 3.799800395965576
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


22 Loss: 3.799800395965576
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


Initial VF Loss: 0.5241742134094238
start vf pos optimization
30 Loss: 0.5241742134094238
makeText parc Dan Vietnam Norway

31 Loss: 0.5241742134094238
makeText parc Dan Vietnam Norway

32 Loss: 0.5241742134094238
makeText parc Dan Vietnam Norway

optimized
33 Loss: 0.49441036581993103
makeText parc Dan Tommy Norway

optimized
34 Loss: 0.49092161655426025
makeText parc Dan Tommy Mam

5
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 29909, 12836, 29892, 526, 366, 20759, 17901, 5013, 5790, 29871, 29906, 29901, 525, 3644, 871, 306, 1033, 1207, 1075, 2274, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 366, 1348, 306, 881, 8341, 372, 5172, 17901, 5013, 5790, 29871, 29906, 29901, 525, 2481, 338, 16892, 292, 3448, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6246, 3282, 29915, 29873, 1906, 7875, 310, 15850, 2649, 366, 825, 7063, 896, 5491, 2367, 278, 24354, 17901, 5013, 5790, 29871, 29906, 29901, 525, 2865, 1474, 896, 750, 304, 5967, 15668, 368, 29889, 2688, 750, 304, 4380, 263, 10694, 856, 29915, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 17506, 366, 2675, 304, 6505, 278, 3748, 6454, 22396, 17901, 5013, 5790, 29871, 29906, 29901, 525, 3047, 449, 263, 7404, 20714, 29871, 10604, 29901, 29871]] [[694], [694], [694], [694]]
Initial Loss: 3.88893723487854
start ij pos optimization
4 Loss: 3.88893723487854
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


5 Loss: 3.88893723487854
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


6 Loss: 3.88893723487854
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


13 Loss: 3.88893723487854
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


15 Loss: 3.88893723487854
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


22 Loss: 3.88893723487854
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


Initial VF Loss: 0.49092161655426025
start vf pos optimization
30 Loss: 0.49092161655426025
makeText parc Dan Tommy Mam

31 Loss: 0.49092161655426025
makeText parc Dan Tommy Mam

32 Loss: 0.49092161655426025
makeText parc Dan Tommy Mam

33 Loss: 0.49092161655426025
makeText parc Dan Tommy Mam

34 Loss: 0.49092161655426025
makeText parc Dan Tommy Mam

6
[4, 5, 6, 13, 15, 22] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 12984, 366, 367, 7952, 292, 297, 22883, 314, 363, 263, 1550, 17901, 5013, 5790, 29871, 29906, 29901, 525, 2887, 2215, 408, 306, 1073, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 12984, 366, 1369, 9068, 4720, 17901, 5013, 5790, 29871, 29906, 29901, 525, 4806, 4091, 8469, 411, 596, 1797, 297, 694, 931, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 6132, 366, 505, 738, 413, 3486, 786, 2175, 17901, 5013, 5790, 29871, 29906, 29901, 525, 4806, 526, 2381, 25217, 297, 372, 6169, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 19362, 29305, 5538, 5013, 5790, 29871, 29906, 29915, 19314, 1234, 7060, 4874, 470, 694, 29973, 10604, 4874, 17499, 694, 29889, 13, 29871, 10567, 29901, 29871, 5013, 5790, 29871, 29896, 29901, 525, 7301, 1096, 746, 591, 671, 304, 505, 2090, 17901, 5013, 5790, 29871, 29906, 29901, 525, 18743, 366, 748, 289, 8253, 6169, 29871, 10604, 29901, 29871]] [[4874], [4874], [694], [4874]]
Initial Loss: 4.037017822265625
start ij pos optimization
6 
No improvement, ending iteration
4 Loss: 4.037017822265625
Danhozuntil Does Speaker 2' Wolfgang answerifact yes or no? Output yesmapsto no.


**********movie_recommendation**********
0
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 1051, 310, 2351, 583, 29889, 13, 29871, 10567, 29901, 29871, 360, 2925, 411, 11902, 1960, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 450, 383, 688, 3321, 29892, 349, 15323, 383, 2463, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 1051, 310, 2351, 583, 29889, 13, 29871, 10567, 29901, 29871, 26650, 5977, 29892, 6981, 11376, 310, 278, 25133, 19444, 29892, 10465, 311, 7525, 1089, 29892, 2538, 261, 7869, 360, 12099, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 1051, 310, 2351, 583, 29889, 13, 29871, 10567, 29901, 29871, 450, 21934, 4088, 29892, 29411, 13740, 29892, 450, 383, 688, 3321, 29892, 838, 1202, 262, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 1051, 310, 2351, 583, 29889, 13, 29871, 10567, 29901, 29871, 349, 15323, 383, 2463, 29892, 5032, 345, 23057, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 315, 5632, 1100, 323, 680, 29901, 29871, 10604, 29901, 29871]] [[5032, 345, 23057], [450, 5664, 663, 310, 278, 26832, 29879], [6225, 18642, 1478, 344, 2567], [28052, 663, 8373]]
Initial Loss: 9.420737266540527
start ij pos optimization
optimized
4 Loss: 5.527162551879883
lim sechsVor Recommend movies similar to the given list of movies.


optimized
5 Loss: 4.6971116065979
lim zahlVor Recommend movies similar to the given list of movies.


optimized
6 Loss: 4.6575164794921875
lim zahl tej Recommend movies similar to the given list of movies.


optimized
16 Loss: 4.4225006103515625
lim zahl tej Recommend movies similar to the givenstmt of movies.


optimized
18 Loss: 4.294978618621826
lim zahl tej Recommend movies similar to the givenstmt ofxslies.


optimized
21 Loss: 4.287446022033691
lim zahl tej Recommend movies similar to the givenstmt ofxslies.ubern

Initial VF Loss: 1.5640068054199219
start vf pos optimization
optimized
26 Loss: 1.2376482486724854
laddefinedLprev西

optimized
27 Loss: 1.0892325639724731
ladjqueryLprev西

optimized
28 Loss: 0.9410321116447449
ladjquery sigloprev西

optimized
29 Loss: 0.7151831984519958
ladjquery siglo LIM西

30 Loss: 0.7151831984519958
ladjquery siglo LIM西

1
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 2485, 19885, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 17868, 310, 7836, 583, 29889, 14135, 29871, 10567, 29901, 29871, 1706, 381, 1573, 319, 1582, 29892, 26647, 3685, 332, 1794, 29892, 17900, 10811, 1693, 616, 29892, 4942, 3767, 9477, 994, 470, 1128, 306, 19530, 9571, 304, 22303, 399, 3818, 292, 322, 8155, 278, 24347, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2485, 19885, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 17868, 310, 7836, 583, 29889, 14135, 29871, 10567, 29901, 29871, 349, 15323, 383, 2463, 29892, 624, 1191, 403, 29892, 450, 383, 688, 3321, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2485, 19885, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 17868, 310, 7836, 583, 29889, 14135, 29871, 10567, 29901, 29871, 5032, 345, 23057, 29892, 1102, 513, 1358, 29915, 29879, 2391, 29892, 450, 5664, 663, 310, 278, 26832, 29879, 29892, 16081, 465, 293, 4815, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2485, 19885, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 17868, 310, 7836, 583, 29889, 14135, 29871, 10567, 29901, 29871, 624, 1191, 403, 29892, 5032, 345, 23057, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 360, 2925, 411, 11902, 1960, 29901, 29871, 10604, 29901, 29871]] [[450, 383, 688, 3321], [7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963], [390, 799, 18379], [450, 10783, 950, 9511, 1103, 29879]]
Initial Loss: 4.135802745819092
start ij pos optimization
4 Loss: 4.135802745819092
lim zahl tej Recommend movies similar to the givenstmt ofxslies.ubern

optimized
5 Loss: 3.4695515632629395
limvis tej Recommend movies similar to the givenstmt ofxslies.ubern

6 Loss: 3.4695515632629395
limvis tej Recommend movies similar to the givenstmt ofxslies.ubern

optimized
16 Loss: 3.4216158390045166
limvis tej Recommend movies similar to the givenfx ofxslies.ubern

optimized
18 Loss: 3.418304681777954
limvis tej Recommend movies similar to the givenfx ofhspaceies.ubern

optimized
21 Loss: 3.3508591651916504
limvis tej Recommend movies similar to the givenfx ofhspaceies.dst

Initial VF Loss: 0.5935488343238831
start vf pos optimization
optimized
26 Loss: 0.535834550857544
imjquery siglo LIM西

27 Loss: 0.535834550857544
imjquery siglo LIM西

28 Loss: 0.535834550857544
imjquery siglo LIM西

optimized
29 Loss: 0.5340179800987244
imjquery sigloAM西

30 Loss: 0.5340179800987244
imjquery sigloAM西

2
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 2485, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 11093, 310, 14158, 583, 29889, 22992, 29871, 10567, 29901, 29871, 1102, 513, 1358, 29915, 29879, 2391, 29892, 349, 15323, 383, 2463, 29892, 5032, 345, 23057, 29892, 450, 10783, 950, 9511, 1103, 29879, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2485, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 11093, 310, 14158, 583, 29889, 22992, 29871, 10567, 29901, 29871, 7828, 9149, 382, 12907, 478, 448, 450, 13378, 624, 5357, 267, 7437, 29892, 18971, 1954, 27338, 29892, 7437, 304, 278, 16367, 29892, 1060, 29899, 28154, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2485, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 11093, 310, 14158, 583, 29889, 22992, 29871, 10567, 29901, 29871, 450, 22063, 350, 2426, 29892, 3082, 19618, 29891, 29892, 4526, 29891, 5132, 322, 278, 17733, 4989, 309, 29892, 6981, 11376, 310, 278, 25133, 19444, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2485, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 11093, 310, 14158, 583, 29889, 22992, 29871, 10567, 29901, 29871, 26778, 29899, 2517, 29892, 450, 18372, 386, 317, 1947, 29892, 26650, 5977, 29892, 28052, 663, 8373, 29901, 29871, 10604, 29901, 29871]] [[7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963], [349, 15323, 383, 2463], [17732, 322, 4360, 296, 360, 4600], [349, 15323, 383, 2463]]
Initial Loss: 3.746016263961792
start ij pos optimization
optimized
4 Loss: 3.680175542831421
celvis tej Recommend movies similar to the givenfx ofhspaceies.dst

5 Loss: 3.680175542831421
celvis tej Recommend movies similar to the givenfx ofhspaceies.dst

6 Loss: 3.680175542831421
celvis tej Recommend movies similar to the givenfx ofhspaceies.dst

optimized
16 Loss: 3.5305025577545166
celvis tej Recommend movies similar to the givenvspace ofhspaceies.dst

optimized
18 Loss: 3.5209567546844482
celvis tej Recommend movies similar to the givenvspace of seesies.dst

optimized
21 Loss: 3.4574506282806396
celvis tej Recommend movies similar to the givenvspace of seesies. cabinet

Initial VF Loss: 1.4036065340042114
start vf pos optimization
optimized
26 Loss: 1.201685905456543
pygamejquery sigloAM西

optimized
27 Loss: 0.9664199948310852
pygame AWS sigloAM西

optimized
28 Loss: 0.9408262372016907
pygame AWSskiejAM西

optimized
29 Loss: 0.8577304482460022
pygame AWSskiej ambient西

optimized
30 Loss: 0.856705367565155
pygame AWSskiej ambient gu

3
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 18553, 583, 29889, 28966, 29871, 10567, 29901, 29871, 5032, 345, 23057, 29892, 4721, 4349, 22712, 29892, 28017, 417, 29871, 29896, 29941, 29892, 360, 2925, 411, 11902, 1960, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 18553, 583, 29889, 28966, 29871, 10567, 29901, 29871, 11814, 262, 1061, 29871, 29906, 8660, 19422, 8373, 29892, 838, 1202, 262, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 450, 21934, 4088, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 18553, 583, 29889, 28966, 29871, 10567, 29901, 29871, 450, 22513, 29892, 5020, 29892, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29892, 512, 1441, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 18553, 583, 29889, 28966, 29871, 10567, 29901, 29871, 450, 18372, 386, 317, 1947, 29892, 450, 22513, 29892, 1152, 5060, 402, 3427, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29901, 29871, 10604, 29901, 29871]] [[450, 28548, 845, 804, 4367, 331, 683], [4721, 4349, 22712], [450, 28548, 845, 804, 4367, 331, 683], [7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963]]
Initial Loss: 3.1795594692230225
start ij pos optimization
4 Loss: 3.1795594692230225
celvis tej Recommend movies similar to the givenvspace of seesies. cabinet

5 Loss: 3.1795594692230225
celvis tej Recommend movies similar to the givenvspace of seesies. cabinet

6 Loss: 3.1795594692230225
celvis tej Recommend movies similar to the givenvspace of seesies. cabinet

16 Loss: 3.1795594692230225
celvis tej Recommend movies similar to the givenvspace of seesies. cabinet

optimized
18 Loss: 3.136794328689575
celvis tej Recommend movies similar to the givenvspace of whitespaceies. cabinet

optimized
21 Loss: 3.07965087890625
celvis tej Recommend movies similar to the givenvspace of whitespaceies.tasks

Initial VF Loss: 0.8664097785949707
start vf pos optimization
optimized
26 Loss: 0.7825233340263367
django AWSskiej ambient gu

optimized
27 Loss: 0.6673435568809509
django voltskiej ambient gu

28 Loss: 0.6673435568809509
django voltskiej ambient gu

optimized
29 Loss: 0.45587292313575745
django voltskiej env gu

optimized
30 Loss: 0.40020668506622314
django voltskiej env Sky

4
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 5032, 345, 23057, 29892, 450, 383, 688, 3321, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 450, 10783, 950, 9511, 1103, 29879, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 1102, 513, 1358, 29915, 29879, 2391, 29892, 450, 6171, 310, 278, 390, 886, 450, 7803, 22578, 414, 29892, 512, 1441, 29892, 450, 15317, 22980, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 3082, 19618, 29891, 29892, 7197, 29888, 514, 294, 29892, 450, 5664, 663, 310, 278, 26832, 29879, 29892, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 1730, 23311, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 15026, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29892, 7828, 9149, 382, 12907, 478, 448, 450, 13378, 624, 5357, 267, 7437, 29892, 450, 5664, 663, 310, 278, 26832, 29879, 29892, 450, 22063, 350, 2426, 29901, 29871, 10604, 29901, 29871]] [[4526, 29891, 5132, 322, 278, 17733, 4989, 309], [7362], [28052, 663, 8373], [1152, 5060, 402, 3427]]
Initial Loss: 2.936708927154541
start ij pos optimization
4 Loss: 2.936708927154541
celvis tej Recommend movies similar to the givenvspace of whitespaceies.tasks

optimized
5 Loss: 2.865614652633667
celff tej Recommend movies similar to the givenvspace of whitespaceies.tasks

optimized
6 Loss: 2.8060810565948486
celffalu Recommend movies similar to the givenvspace of whitespaceies.tasks

optimized
16 Loss: 2.776559829711914
celffalu Recommend movies similar to the given Twitter of whitespaceies.tasks

18 Loss: 2.776559829711914
celffalu Recommend movies similar to the given Twitter of whitespaceies.tasks

21 Loss: 2.776559829711914
celffalu Recommend movies similar to the given Twitter of whitespaceies.tasks

Initial VF Loss: 0.44645270705223083
start vf pos optimization
26 Loss: 0.44645270705223083
django voltskiej env Sky

27 Loss: 0.44645270705223083
django voltskiej env Sky

28 Loss: 0.44645270705223083
django voltskiej env Sky

29 Loss: 0.44645270705223083
django voltskiej env Sky

30 Loss: 0.44645270705223083
django voltskiej env Sky

5
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 20147, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 450, 10783, 950, 9511, 1103, 29879, 29892, 450, 383, 688, 3321, 29892, 349, 15323, 383, 2463, 29892, 11814, 262, 1061, 29871, 29906, 8660, 19422, 8373, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 20147, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 512, 1441, 29892, 450, 6171, 310, 278, 390, 886, 450, 7106, 310, 278, 4088, 29892, 450, 22513, 29892, 6981, 11376, 310, 278, 25133, 19444, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 20147, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 6981, 11376, 310, 278, 25133, 19444, 29892, 450, 22513, 29892, 16306, 265, 450, 20031, 29892, 7828, 9149, 382, 12907, 478, 448, 450, 13378, 624, 5357, 267, 7437, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 20147, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 16081, 465, 293, 4815, 29892, 28052, 663, 8373, 29892, 1152, 5060, 402, 3427, 29892, 12579, 1171, 29901, 29871, 10604, 29901, 29871]] [[360, 2925, 411, 11902, 1960], [360, 2925, 411, 11902, 1960], [17732, 322, 4360, 296, 360, 4600], [360, 2925, 411, 11902, 1960]]
Initial Loss: 2.9732162952423096
start ij pos optimization
4 Loss: 2.9732162952423096
celffalu Recommend movies similar to the given Twitter of whitespaceies.tasks

5 Loss: 2.9732162952423096
celffalu Recommend movies similar to the given Twitter of whitespaceies.tasks

6 Loss: 2.9732162952423096
celffalu Recommend movies similar to the given Twitter of whitespaceies.tasks

optimized
16 Loss: 2.9325411319732666
celffalu Recommend movies similar to the givencsv of whitespaceies.tasks

18 Loss: 2.9325411319732666
celffalu Recommend movies similar to the givencsv of whitespaceies.tasks

21 Loss: 2.9325411319732666
celffalu Recommend movies similar to the givencsv of whitespaceies.tasks

Initial VF Loss: 0.34837961196899414
start vf pos optimization
26 Loss: 0.34837961196899414
django voltskiej env Sky

27 Loss: 0.34837961196899414
django voltskiej env Sky

28 Loss: 0.34837961196899414
django voltskiej env Sky

optimized
29 Loss: 0.342751145362854
django voltskiejdependencies Sky

optimized
30 Loss: 0.2757876515388489
django voltskiejdependencies astronom

6
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 450, 10783, 950, 9511, 1103, 29879, 29892, 1102, 513, 1358, 29915, 29879, 2391, 29892, 5032, 345, 23057, 29892, 360, 2925, 411, 11902, 1960, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 7828, 9149, 382, 12907, 478, 448, 450, 13378, 624, 5357, 267, 7437, 29892, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29892, 450, 5664, 663, 310, 278, 26832, 29879, 29892, 24518, 12265, 414, 4623, 2315, 310, 22890, 708, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 1152, 5060, 402, 3427, 29892, 450, 15317, 22980, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 26650, 5977, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 22349, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 20673, 29871, 10567, 29901, 29871, 450, 11814, 262, 1061, 29892, 7828, 9149, 382, 12907, 478, 448, 450, 13378, 624, 5357, 267, 7437, 29892, 12579, 1171, 29892, 18971, 1954, 27338, 29901, 29871, 10604, 29901, 29871]] [[5032, 345, 23057], [450, 383, 688, 3321], [350, 4302], [12579, 1171]]
Initial Loss: 3.012190580368042
start ij pos optimization
4 Loss: 3.012190580368042
celffalu Recommend movies similar to the givencsv of whitespaceies.tasks

5 Loss: 3.012190580368042
celffalu Recommend movies similar to the givencsv of whitespaceies.tasks

optimized
6 Loss: 2.9523210525512695
celffinned Recommend movies similar to the givencsv of whitespaceies.tasks

16 Loss: 2.9523210525512695
celffinned Recommend movies similar to the givencsv of whitespaceies.tasks

18 Loss: 2.9523210525512695
celffinned Recommend movies similar to the givencsv of whitespaceies.tasks

optimized
21 Loss: 2.9303369522094727
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

Initial VF Loss: 0.29386064410209656
start vf pos optimization
26 Loss: 0.29386064410209656
django voltskiejdependencies astronom

optimized
27 Loss: 0.2662605941295624
django viewsskiejdependencies astronom

optimized
28 Loss: 0.26467496156692505
django viewsourcedependencies astronom

29 Loss: 0.26467496156692505
django viewsourcedependencies astronom

30 Loss: 0.26467496156692505
django viewsourcedependencies astronom

7
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 28017, 417, 29871, 29896, 29941, 29892, 12579, 1171, 29892, 1102, 513, 1358, 29915, 29879, 2391, 29892, 5032, 345, 23057, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 12579, 1171, 29892, 450, 11814, 262, 1061, 29892, 7828, 9149, 382, 12907, 5473, 448, 7106, 310, 278, 435, 15844, 29892, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 450, 383, 688, 3321, 29892, 1152, 5060, 402, 3427, 29892, 383, 7921, 29892, 450, 12753, 3077, 29895, 2650, 414, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 450, 341, 1278, 29892, 12579, 1171, 29892, 4721, 4349, 22712, 29892, 450, 383, 688, 3321, 29901, 29871, 10604, 29901, 29871]] [[3082, 19618, 29891], [5032, 345, 23057], [450, 28548, 845, 804, 4367, 331, 683], [29021, 6682, 3684, 29871, 29896]]
Initial Loss: 2.9794225692749023
start ij pos optimization
4 Loss: 2.9794225692749023
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

5 Loss: 2.9794225692749023
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

6 Loss: 2.9794225692749023
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

16 Loss: 2.9794225692749023
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

18 Loss: 2.9794225692749023
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

21 Loss: 2.9794225692749023
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

Initial VF Loss: 0.26467496156692505
start vf pos optimization
26 Loss: 0.26467496156692505
django viewsourcedependencies astronom

27 Loss: 0.26467496156692505
django viewsourcedependencies astronom

optimized
28 Loss: 0.26194262504577637
django viewsstripdependencies astronom

optimized
29 Loss: 0.24130897223949432
django viewsstripdetail astronom

30 Loss: 0.24130897223949432
django viewsstripdetail astronom

8
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 450, 22063, 350, 2426, 29892, 7197, 29888, 514, 294, 29892, 6981, 11376, 310, 278, 25133, 19444, 29892, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 26650, 5977, 29892, 6981, 11376, 310, 278, 25133, 19444, 29892, 10465, 311, 7525, 1089, 29892, 2538, 261, 7869, 360, 12099, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 450, 5664, 663, 310, 278, 26832, 29879, 29892, 1102, 513, 1358, 29915, 29879, 2391, 29892, 450, 10783, 950, 9511, 1103, 29879, 29892, 26647, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 7638, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 5032, 345, 23057, 29892, 450, 383, 688, 3321, 29892, 450, 28548, 845, 804, 4367, 331, 683, 29892, 450, 10783, 950, 9511, 1103, 29879, 29901, 29871, 10604, 29901, 29871]] [[360, 2925, 411, 11902, 1960], [360, 2925, 411, 11902, 1960], [4526, 29891, 5132, 322, 278, 17733, 4989, 309], [5032, 345, 23057]]
Initial Loss: 2.758758783340454
start ij pos optimization
4 Loss: 2.758758783340454
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

5 Loss: 2.758758783340454
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

6 Loss: 2.758758783340454
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

optimized
16 Loss: 2.753544569015503
celffinned Recommend movies similar to the givengroupId of whitespaceies.sqlite

18 Loss: 2.753544569015503
celffinned Recommend movies similar to the givengroupId of whitespaceies.sqlite

21 Loss: 2.753544569015503
celffinned Recommend movies similar to the givengroupId of whitespaceies.sqlite

Initial VF Loss: 0.2868066132068634
start vf pos optimization
optimized
26 Loss: 0.2594192326068878
flask viewsstripdetail astronom

27 Loss: 0.2594192326068878
flask viewsstripdetail astronom

optimized
28 Loss: 0.22151286900043488
flask viewsloadsdetail astronom

29 Loss: 0.22151286900043488
flask viewsloadsdetail astronom

30 Loss: 0.22151286900043488
flask viewsloadsdetail astronom

9
[4, 5, 6, 16, 18, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 9688, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29892, 1102, 513, 1358, 29915, 29879, 2391, 29892, 512, 1441, 29892, 450, 22513, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 9688, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 18971, 1954, 27338, 29892, 1632, 618, 29882, 468, 8373, 29892, 6981, 11376, 310, 278, 25133, 19444, 29892, 7828, 9149, 382, 12907, 6599, 448, 319, 1570, 7963, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 9688, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 450, 28548, 845, 804, 4367, 331, 683, 29892, 4721, 4349, 22712, 29892, 5032, 345, 23057, 29892, 2233, 2491, 404, 29901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6432, 600, 27464, 830, 2055, 355, 2351, 583, 2788, 304, 278, 2183, 9688, 310, 24358, 583, 29889, 22793, 29871, 10567, 29901, 29871, 6981, 11376, 310, 278, 25133, 19444, 29892, 450, 22513, 29892, 402, 1131, 11989, 29892, 19319, 29875, 1061, 29901, 29871, 10604, 29901, 29871]] [[1152, 5060, 402, 3427], [450, 341, 1278], [450, 28548, 845, 804, 4367, 331, 683], [7197, 29888, 514, 294]]
Initial Loss: 2.9673995971679688
start ij pos optimization
4 Loss: 2.9673995971679688
celffinned Recommend movies similar to the givengroupId of whitespaceies.sqlite

5 Loss: 2.9673995971679688
celffinned Recommend movies similar to the givengroupId of whitespaceies.sqlite

6 Loss: 2.9673995971679688
celffinned Recommend movies similar to the givengroupId of whitespaceies.sqlite

optimized
16 Loss: 2.957371473312378
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

18 Loss: 2.957371473312378
celffinned Recommend movies similar to the givencsv of whitespaceies.sqlite

optimized
21 Loss: 2.9510817527770996
celffinned Recommend movies similar to the givencsv of whitespaceies.iseconds

Initial VF Loss: 0.2545137405395508
start vf pos optimization
26 Loss: 0.2545137405395508
flask viewsloadsdetail astronom

27 Loss: 0.2545137405395508
flask viewsloadsdetail astronom

28 Loss: 0.2545137405395508
flask viewsloadsdetail astronom

29 Loss: 0.2545137405395508
flask viewsloadsdetail astronom

30 Loss: 0.2545137405395508
flask viewsloadsdetail astronom

**********dyck_languages**********
0
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 25034, 278, 1791, 310, 278, 5665, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 6284, 29889, 13, 29871, 10567, 29901, 29871, 529, 426, 518, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 25034, 278, 1791, 310, 278, 5665, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 6284, 29889, 13, 29871, 10567, 29901, 29871, 518, 518, 4514, 529, 1405, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 25034, 278, 1791, 310, 278, 5665, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 6284, 29889, 13, 29871, 10567, 29901, 29871, 313, 518, 313, 529, 1405, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 25034, 278, 1791, 310, 278, 5665, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 6284, 29889, 13, 29871, 10567, 29901, 29871, 518, 313, 1723, 426, 500, 426, 529, 529, 1405, 1405, 529, 1405, 29871, 10604, 29901, 29871]] [[1723, 1405, 500], [1405, 1723], [4514], [1723, 4514, 1405]]
Initial Loss: 9.288553237915039
start ij pos optimization
optimized
4 Loss: 5.184672832489014
ers sechsVor Complete the rest of the sequence, making sure that the parentheses are closed properly.


optimized
5 Loss: 4.043951511383057
ers EXISTSVor Complete the rest of the sequence, making sure that the parentheses are closed properly.


6 Loss: 4.043951511383057
ers EXISTSVor Complete the rest of the sequence, making sure that the parentheses are closed properly.


optimized
11 Loss: 3.7955660820007324
ers EXISTSVor Complete the rest ofligen sequence, making sure that the parentheses are closed properly.


optimized
12 Loss: 3.4467477798461914
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed properly.


optimized
21 Loss: 3.244709014892578
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


Initial VF Loss: 2.0455901622772217
start vf pos optimization
optimized
28 Loss: 1.953580617904663
forschdefinedLprev西

optimized
29 Loss: 1.6988919973373413
forschRouterLprev西

optimized
30 Loss: 1.468118667602539
forschRouterVorprev西

optimized
31 Loss: 1.388794183731079
forschRouterVor Erz西

optimized
32 Loss: 1.2886559963226318
forschRouterVor ErzSerializer

1
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 426, 426, 500, 518, 313, 1723, 4514, 529, 426, 426, 500, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 426, 518, 529, 1405, 4514, 500, 518, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 518, 313, 529, 518, 4514, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 426, 313, 518, 518, 4514, 313, 1723, 4514, 29871, 10604, 29901, 29871]] [[1723], [500], [1723], [1723]]
Initial Loss: 3.0267333984375
start ij pos optimization
4 Loss: 3.0267333984375
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


5 Loss: 3.0267333984375
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


6 Loss: 3.0267333984375
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


11 Loss: 3.0267333984375
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


12 Loss: 3.0267333984375
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


21 Loss: 3.0267333984375
ers EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


Initial VF Loss: 1.2886559963226318
start vf pos optimization
28 Loss: 1.2886559963226318
forschRouterVor ErzSerializer

optimized
29 Loss: 1.2318912744522095
forschNaNVor ErzSerializer

30 Loss: 1.2318912744522095
forschNaNVor ErzSerializer

31 Loss: 1.2318912744522095
forschNaNVor ErzSerializer

32 Loss: 1.2318912744522095
forschNaNVor ErzSerializer

2
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 518, 518, 426, 500, 313, 1723, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 518, 313, 1723, 313, 529, 313, 518, 313, 1723, 4514, 1723, 426, 313, 529, 1405, 1723, 529, 426, 518, 313, 313, 529, 313, 426, 500, 426, 529, 1405, 500, 1723, 1405, 1723, 1723, 4514, 500, 426, 426, 426, 500, 500, 500, 1405, 500, 518, 529, 426, 426, 500, 500, 1405, 4514, 1405, 1723, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 518, 4514, 313, 518, 518, 426, 529, 426, 426, 313, 529, 1405, 518, 4514, 1723, 500, 500, 529, 1405, 1405, 500, 4514, 4514, 426, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 17730, 28731, 14147, 25034, 278, 1791, 310, 27846, 17679, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 426, 426, 313, 313, 518, 518, 4514, 4514, 313, 529, 313, 518, 313, 518, 518, 518, 4514, 4514, 4514, 1723, 4514, 529, 1405, 1723, 1405, 313, 1723, 1723, 518, 4514, 1723, 1723, 500, 29871, 10604, 29901, 29871]] [[1405], [4514], [1723, 4514, 1405], [500]]
Initial Loss: 5.027218341827393
start ij pos optimization
optimized
4 Loss: 4.887203216552734
asy EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


5 Loss: 4.887203216552734
asy EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


6 Loss: 4.887203216552734
asy EXISTSVor Complete the rest ofligenSerializer, making sure that the parentheses are closed instanceof.


optimized
11 Loss: 4.687877655029297
asy EXISTSVor Complete the rest ofeginSerializer, making sure that the parentheses are closed instanceof.


optimized
12 Loss: 4.528470993041992
asy EXISTSVor Complete the rest ofeginsvn, making sure that the parentheses are closed instanceof.


21 Loss: 4.528470993041992
asy EXISTSVor Complete the rest ofeginsvn, making sure that the parentheses are closed instanceof.


Initial VF Loss: 2.770512342453003
start vf pos optimization
optimized
28 Loss: 2.712965726852417
ChorNaNVor ErzSerializer

optimized
29 Loss: 2.4343297481536865
Chor SvVor ErzSerializer

optimized
30 Loss: 2.424638271331787
Chor Sv Sor ErzSerializer

optimized
31 Loss: 2.348501205444336
Chor Sv Sor AusSerializer

optimized
32 Loss: 2.2691118717193604
Chor Sv Sor Aususepackage

3
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 8995, 28731, 14147, 25034, 278, 1791, 310, 460, 27517, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 529, 426, 313, 529, 1405, 1723, 500, 313, 426, 529, 1405, 500, 1723, 518, 313, 529, 529, 1405, 1405, 1723, 426, 313, 529, 313, 1723, 518, 518, 529, 518, 4514, 1405, 4514, 426, 313, 1723, 500, 518, 518, 313, 426, 313, 529, 1405, 1723, 500, 1723, 313, 426, 313, 426, 500, 1723, 500, 426, 518, 313, 1723, 4514, 426, 313, 1723, 500, 500, 1723, 4514, 4514, 518, 529, 313, 1723, 1405, 4514, 426, 426, 500, 500, 4514, 1405, 1723, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8995, 28731, 14147, 25034, 278, 1791, 310, 460, 27517, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 529, 518, 313, 426, 426, 313, 313, 1723, 1723, 500, 500, 1723, 518, 313, 518, 426, 500, 4514, 1723, 4514, 529, 426, 426, 529, 529, 529, 1405, 518, 529, 518, 529, 313, 518, 313, 426, 313, 313, 529, 529, 529, 529, 1405, 1405, 1405, 426, 313, 426, 426, 529, 313, 1723, 1405, 313, 1723, 500, 500, 1723, 500, 1405, 426, 500, 1723, 1723, 500, 1723, 4514, 1723, 1405, 4514, 1405, 4514, 1405, 529, 426, 500, 1405, 1405, 500, 313, 1723, 529, 426, 313, 1723, 500, 1405, 500, 1405, 4514, 518, 529, 313, 1723, 1405, 4514, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8995, 28731, 14147, 25034, 278, 1791, 310, 460, 27517, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 518, 313, 313, 529, 529, 426, 426, 500, 529, 518, 426, 529, 426, 500, 1405, 500, 4514, 529, 313, 529, 313, 426, 500, 1723, 1405, 1723, 1405, 529, 426, 313, 529, 426, 313, 426, 518, 4514, 500, 1723, 500, 1405, 1723, 500, 1405, 313, 313, 313, 1723, 1723, 1723, 1405, 500, 1405, 1405, 1723, 1723, 4514, 529, 529, 529, 518, 518, 313, 1723, 4514, 4514, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8995, 28731, 14147, 25034, 278, 1791, 310, 460, 27517, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 28919, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 426, 313, 426, 426, 426, 426, 500, 500, 500, 500, 1723, 529, 313, 1723, 1405, 500, 500, 313, 1723, 29871, 10604, 29901, 29871]] [[4514, 4514, 1405], [4514], [1405, 4514], [4514, 1405, 1723]]
Initial Loss: 6.323331832885742
start ij pos optimization
optimized
4 Loss: 5.840877532958984
department EXISTSVor Complete the rest ofeginsvn, making sure that the parentheses are closed instanceof.


optimized
5 Loss: 4.651339530944824
departmentuzVor Complete the rest ofeginsvn, making sure that the parentheses are closed instanceof.


optimized
6 Loss: 4.615056991577148
departmentuz abc Complete the rest ofeginsvn, making sure that the parentheses are closed instanceof.


optimized
11 Loss: 4.460275173187256
departmentuz abc Complete the rest of powieciesvn, making sure that the parentheses are closed instanceof.


optimized
12 Loss: 4.237189769744873
departmentuz abc Complete the rest of powiecie Andy, making sure that the parentheses are closed instanceof.


optimized
21 Loss: 4.12677001953125
departmentuz abc Complete the rest of powiecie Andy, making sure that the parentheses are closed            .


Initial VF Loss: 1.2177636623382568
start vf pos optimization
optimized
28 Loss: 1.0160266160964966
ger Sv Sor Aususepackage

optimized
29 Loss: 0.9107906222343445
ger Ut Sor Aususepackage

optimized
30 Loss: 0.8397935032844543
ger Ut Ut Aususepackage

optimized
31 Loss: 0.6901196837425232
ger Ut Ut junusepackage

optimized
32 Loss: 0.5868577361106873
ger Ut Ut jun Johann

4
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14311, 3365, 25638, 25034, 278, 1791, 310, 29640, 21828, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 632, 29889, 13, 29871, 10567, 29901, 29871, 426, 518, 518, 4514, 426, 500, 313, 1723, 4514, 500, 518, 313, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14311, 3365, 25638, 25034, 278, 1791, 310, 29640, 21828, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 632, 29889, 13, 29871, 10567, 29901, 29871, 426, 426, 518, 4514, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14311, 3365, 25638, 25034, 278, 1791, 310, 29640, 21828, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 632, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 426, 518, 529, 313, 1723, 529, 529, 518, 426, 500, 4514, 426, 426, 500, 500, 1405, 1405, 1405, 4514, 518, 4514, 313, 1723, 313, 426, 426, 313, 518, 313, 529, 1405, 1723, 4514, 1723, 500, 500, 1723, 500, 529, 518, 426, 529, 1405, 500, 4514, 1405, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14311, 3365, 25638, 25034, 278, 1791, 310, 29640, 21828, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 632, 29889, 13, 29871, 10567, 29901, 29871, 529, 529, 426, 426, 426, 529, 518, 313, 529, 1405, 426, 313, 1723, 500, 1723, 4514, 1405, 500, 500, 500, 29871, 10604, 29901, 29871]] [[1723, 1723, 500], [4514], [4514], [500, 500, 1405]]
Initial Loss: 4.230983734130859
start ij pos optimization
4 Loss: 4.230983734130859
departmentuz abc Complete the rest of powiecie Andy, making sure that the parentheses are closed            .


5 Loss: 4.230983734130859
departmentuz abc Complete the rest of powiecie Andy, making sure that the parentheses are closed            .


optimized
6 Loss: 3.96504282951355
departmentuzhpp Complete the rest of powiecie Andy, making sure that the parentheses are closed            .


optimized
11 Loss: 3.9424197673797607
departmentuzhpp Complete the rest ofitect Andy, making sure that the parentheses are closed            .


optimized
12 Loss: 3.9116263389587402
departmentuzhpp Complete the rest ofitect throws, making sure that the parentheses are closed            .


optimized
21 Loss: 3.9112443923950195
departmentuzhpp Complete the rest ofitect throws, making sure that the parentheses are closed  .


Initial VF Loss: 0.8620803356170654
start vf pos optimization
optimized
28 Loss: 0.7153398394584656
lang Ut Ut jun Johann

optimized
29 Loss: 0.6554648280143738
lang klein Ut jun Johann

optimized
30 Loss: 0.5845783352851868
lang klein selbst jun Johann

optimized
31 Loss: 0.5171060562133789
lang klein selbst Pf Johann

32 Loss: 0.5171060562133789
lang klein selbst Pf Johann

5
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14311, 3365, 29623, 25034, 278, 1791, 310, 4496, 8026, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 259, 29889, 13, 29871, 10567, 29901, 29871, 426, 518, 518, 313, 529, 1405, 1723, 4514, 313, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14311, 3365, 29623, 25034, 278, 1791, 310, 4496, 8026, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 259, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 529, 426, 426, 500, 500, 1405, 500, 426, 426, 518, 529, 529, 426, 500, 1405, 426, 529, 529, 529, 426, 426, 529, 1405, 500, 500, 1405, 1405, 1405, 426, 518, 529, 313, 529, 426, 500, 313, 313, 1723, 1723, 1405, 1723, 1405, 4514, 500, 529, 518, 518, 426, 313, 518, 426, 313, 426, 500, 1723, 500, 4514, 1723, 500, 4514, 4514, 1405, 500, 1405, 4514, 500, 500, 518, 426, 426, 500, 518, 518, 426, 500, 4514, 4514, 500, 4514, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14311, 3365, 29623, 25034, 278, 1791, 310, 4496, 8026, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 259, 29889, 13, 29871, 10567, 29901, 29871, 518, 4514, 313, 426, 529, 1405, 529, 426, 518, 518, 313, 1723, 4514, 518, 4514, 426, 518, 313, 426, 313, 1723, 500, 529, 529, 518, 4514, 1405, 1405, 1723, 426, 500, 426, 500, 4514, 500, 426, 313, 426, 500, 1723, 500, 4514, 518, 529, 518, 4514, 1405, 529, 529, 1405, 1405, 4514, 500, 518, 4514, 1405, 500, 1723, 313, 518, 313, 518, 518, 518, 426, 500, 4514, 4514, 518, 529, 518, 518, 4514, 518, 518, 313, 1723, 4514, 4514, 4514, 1405, 4514, 4514, 1723, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14311, 3365, 29623, 25034, 278, 1791, 310, 4496, 8026, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 259, 29889, 13, 29871, 10567, 29901, 29871, 313, 518, 4514, 1723, 518, 313, 518, 529, 1405, 29871, 10604, 29901, 29871]] [[500], [500, 1723], [1405, 500, 1405], [1405, 500]]
Initial Loss: 4.389077186584473
start ij pos optimization
optimized
4 Loss: 4.103668212890625
ayuzhpp Complete the rest ofitect throws, making sure that the parentheses are closed  .


5 Loss: 4.103668212890625
ayuzhpp Complete the rest ofitect throws, making sure that the parentheses are closed  .


optimized
6 Loss: 3.474611520767212
ayuzquality Complete the rest ofitect throws, making sure that the parentheses are closed  .


optimized
11 Loss: 3.420670986175537
ayuzquality Complete the rest of thy throws, making sure that the parentheses are closed  .


optimized
12 Loss: 3.415523052215576
ayuzquality Complete the rest of thy ride, making sure that the parentheses are closed  .


optimized
21 Loss: 3.362689256668091
ayuzquality Complete the rest of thy ride, making sure that the parentheses are closed listade.


Initial VF Loss: 1.5671943426132202
start vf pos optimization
optimized
28 Loss: 1.3481392860412598
assess klein selbst Pf Johann

optimized
29 Loss: 1.0889817476272583
assess Bayern selbst Pf Johann

optimized
30 Loss: 1.0359605550765991
assess Bayern Hugo Pf Johann

optimized
31 Loss: 0.893316924571991
assess Bayern Hugo tensorflow Johann

optimized
32 Loss: 0.8627826571464539
assess Bayern Hugo tensorflow kan

6
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 10156, 3365, 29567, 25034, 278, 1791, 310, 13874, 22203, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 7917, 29889, 13, 29871, 10567, 29901, 29871, 529, 529, 426, 426, 426, 529, 518, 313, 529, 1405, 426, 313, 1723, 500, 1723, 4514, 1405, 500, 500, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10156, 3365, 29567, 25034, 278, 1791, 310, 13874, 22203, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 7917, 29889, 13, 29871, 10567, 29901, 29871, 426, 518, 529, 313, 529, 1405, 1723, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10156, 3365, 29567, 25034, 278, 1791, 310, 13874, 22203, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 7917, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 426, 500, 500, 4514, 313, 529, 426, 529, 518, 313, 313, 1723, 1723, 4514, 1405, 500, 1405, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10156, 3365, 29567, 25034, 278, 1791, 310, 13874, 22203, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 7917, 29889, 13, 29871, 10567, 29901, 29871, 529, 518, 4514, 1405, 529, 426, 529, 518, 529, 1405, 4514, 1405, 29871, 10604, 29901, 29871]] [[4514, 500], [1723, 500], [500, 1723, 1405], [500, 1405]]
Initial Loss: 5.276092529296875
start ij pos optimization
optimized
4 Loss: 4.4064435958862305
Istuzquality Complete the rest of thy ride, making sure that the parentheses are closed listade.


5 Loss: 4.4064435958862305
Istuzquality Complete the rest of thy ride, making sure that the parentheses are closed listade.


optimized
6 Loss: 4.307661533355713
Istuz smile Complete the rest of thy ride, making sure that the parentheses are closed listade.


11 Loss: 4.307661533355713
Istuz smile Complete the rest of thy ride, making sure that the parentheses are closed listade.


optimized
12 Loss: 4.222186088562012
Istuz smile Complete the rest of thyInst, making sure that the parentheses are closed listade.


optimized
21 Loss: 4.1244964599609375
Istuz smile Complete the rest of thyInst, making sure that the parentheses are closed males.


Initial VF Loss: 1.4423327445983887
start vf pos optimization
optimized
28 Loss: 1.0377646684646606
Ot Bayern Hugo tensorflow kan

optimized
29 Loss: 0.8332870602607727
Ot Mitglieder Hugo tensorflow kan

optimized
30 Loss: 0.6842072010040283
Ot Mitglieder Mit tensorflow kan

optimized
31 Loss: 0.6625191569328308
Ot Mitglieder Mit Sebastian kan

optimized
32 Loss: 0.6411488652229309
Ot Mitglieder Mit Sebastian wurde

7
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 11066, 3365, 17819, 25034, 278, 1791, 310, 13874, 3379, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 25269, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 518, 313, 426, 426, 500, 500, 1723, 4514, 426, 313, 1723, 518, 313, 1723, 4514, 313, 313, 529, 1405, 1723, 1723, 500, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11066, 3365, 17819, 25034, 278, 1791, 310, 13874, 3379, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 25269, 29889, 13, 29871, 10567, 29901, 29871, 426, 426, 518, 518, 4514, 426, 426, 529, 1405, 518, 313, 1723, 313, 518, 4514, 1723, 518, 4514, 426, 529, 1405, 500, 4514, 500, 500, 518, 426, 518, 4514, 500, 4514, 426, 313, 1723, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11066, 3365, 17819, 25034, 278, 1791, 310, 13874, 3379, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 25269, 29889, 13, 29871, 10567, 29901, 29871, 313, 529, 426, 313, 1723, 426, 500, 500, 313, 529, 1405, 1723, 1405, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11066, 3365, 17819, 25034, 278, 1791, 310, 13874, 3379, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 25269, 29889, 13, 29871, 10567, 29901, 29871, 426, 313, 518, 4514, 518, 426, 500, 426, 313, 426, 500, 1723, 426, 529, 518, 313, 313, 1723, 1723, 4514, 1405, 500, 426, 518, 529, 313, 1723, 1405, 4514, 500, 500, 4514, 426, 500, 518, 29871, 10604, 29901, 29871]] [[4514, 500], [4514], [1723, 1405, 1405], [4514]]
Initial Loss: 4.242059707641602
start ij pos optimization
optimized
4 Loss: 3.983283519744873
istuz smile Complete the rest of thyInst, making sure that the parentheses are closed males.


optimized
5 Loss: 3.940516471862793
istauch smile Complete the rest of thyInst, making sure that the parentheses are closed males.


optimized
6 Loss: 3.6412911415100098
istauchEY Complete the rest of thyInst, making sure that the parentheses are closed males.


optimized
11 Loss: 3.6375837326049805
istauchEY Complete the rest ofnungenInst, making sure that the parentheses are closed males.


optimized
12 Loss: 3.593277931213379
istauchEY Complete the rest ofnungen wenig, making sure that the parentheses are closed males.


optimized
21 Loss: 3.5419185161590576
istauchEY Complete the rest ofnungen wenig, making sure that the parentheses are closed enemies.


Initial VF Loss: 1.0421667098999023
start vf pos optimization
optimized
28 Loss: 0.8404092788696289
stro Mitglieder Mit Sebastian wurde

optimized
29 Loss: 0.829509973526001
stro begann Mit Sebastian wurde

optimized
30 Loss: 0.8031103610992432
stro begann Jahre Sebastian wurde

optimized
31 Loss: 0.6931833624839783
stro begann Jahre Jason wurde

optimized
32 Loss: 0.656568706035614
stro begann Jahre Jason Rewrite

8
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 1752, 13989, 13282, 25034, 278, 1791, 310, 18839, 28298, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 22595, 29889, 13, 29871, 10567, 29901, 29871, 529, 529, 426, 426, 426, 529, 518, 529, 1405, 4514, 313, 1723, 1405, 500, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1752, 13989, 13282, 25034, 278, 1791, 310, 18839, 28298, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 22595, 29889, 13, 29871, 10567, 29901, 29871, 426, 518, 426, 518, 426, 518, 426, 518, 529, 313, 313, 1723, 1723, 529, 1405, 529, 1405, 1405, 518, 518, 426, 529, 426, 529, 426, 529, 518, 4514, 1405, 500, 529, 1405, 1405, 500, 1405, 500, 313, 518, 426, 313, 313, 1723, 1723, 500, 4514, 1723, 4514, 4514, 4514, 518, 313, 518, 529, 518, 518, 426, 313, 1723, 500, 4514, 4514, 1405, 4514, 1723, 4514, 500, 4514, 500, 4514, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1752, 13989, 13282, 25034, 278, 1791, 310, 18839, 28298, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 22595, 29889, 13, 29871, 10567, 29901, 29871, 313, 529, 529, 529, 1405, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1752, 13989, 13282, 25034, 278, 1791, 310, 18839, 28298, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 22595, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 313, 529, 518, 518, 4514, 4514, 1405, 1723, 29871, 10604, 29901, 29871]] [[4514], [4514, 500], [500, 500, 1405], [4514, 1723, 1405]]
Initial Loss: 4.787388801574707
start ij pos optimization
4 Loss: 4.787388801574707
istauchEY Complete the rest ofnungen wenig, making sure that the parentheses are closed enemies.


5 Loss: 4.787388801574707
istauchEY Complete the rest ofnungen wenig, making sure that the parentheses are closed enemies.


optimized
6 Loss: 4.715339183807373
istauchermeister Complete the rest ofnungen wenig, making sure that the parentheses are closed enemies.


optimized
11 Loss: 4.607359409332275
istauchermeister Complete the rest of engaged wenig, making sure that the parentheses are closed enemies.


optimized
12 Loss: 4.60126256942749
istauchermeister Complete the rest of engaged scarcely, making sure that the parentheses are closed enemies.


optimized
21 Loss: 4.598287105560303
istauchermeister Complete the rest of engaged scarcely, making sure that the parentheses are closed Jay.


Initial VF Loss: 1.8943392038345337
start vf pos optimization
optimized
28 Loss: 1.3348957300186157
ogni begann Jahre Jason Rewrite

optimized
29 Loss: 1.1016777753829956
ogni guard Jahre Jason Rewrite

optimized
30 Loss: 1.0497878789901733
ogni guard gran Jason Rewrite

optimized
31 Loss: 0.9795706868171692
ogni guard gran Story Rewrite

32 Loss: 0.9795706868171692
ogni guard gran Story Rewrite

9
[4, 5, 6, 11, 12, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 1752, 13989, 23282, 25034, 278, 1791, 310, 17785, 20558, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 19556, 29889, 13, 29871, 10567, 29901, 29871, 313, 426, 529, 518, 529, 1405, 4514, 1405, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1752, 13989, 23282, 25034, 278, 1791, 310, 17785, 20558, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 19556, 29889, 13, 29871, 10567, 29901, 29871, 518, 426, 426, 500, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1752, 13989, 23282, 25034, 278, 1791, 310, 17785, 20558, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 19556, 29889, 13, 29871, 10567, 29901, 29871, 313, 313, 518, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1752, 13989, 23282, 25034, 278, 1791, 310, 17785, 20558, 29892, 3907, 1854, 393, 278, 29494, 526, 5764, 19556, 29889, 13, 29871, 10567, 29901, 29871, 313, 518, 313, 518, 518, 426, 313, 518, 4514, 529, 426, 313, 1723, 500, 1405, 518, 426, 500, 4514, 1723, 500, 4514, 4514, 1723, 29871, 10604, 29901, 29871]] [[1405, 4514], [1405], [500], [1723]]
Initial Loss: 4.95941162109375
start ij pos optimization
optimized
4 Loss: 4.7173566818237305
Hawauchermeister Complete the rest of engaged scarcely, making sure that the parentheses are closed Jay.


5 Loss: 4.7173566818237305
Hawauchermeister Complete the rest of engaged scarcely, making sure that the parentheses are closed Jay.


optimized
6 Loss: 4.67299747467041
Hawauch pilot Complete the rest of engaged scarcely, making sure that the parentheses are closed Jay.


optimized
11 Loss: 4.619786262512207
Hawauch pilot Complete the rest of displaying scarcely, making sure that the parentheses are closed Jay.


optimized
12 Loss: 4.565065860748291
Hawauch pilot Complete the rest of displayingberto, making sure that the parentheses are closed Jay.


21 Loss: 4.565065860748291
Hawauch pilot Complete the rest of displayingberto, making sure that the parentheses are closed Jay.


Initial VF Loss: 1.0381380319595337
start vf pos optimization
optimized
28 Loss: 0.7033981680870056
Akadem guard gran Story Rewrite

optimized
29 Loss: 0.6128814816474915
Akadem Buck gran Story Rewrite

optimized
30 Loss: 0.5265950560569763
Akadem Buck Buen Story Rewrite

optimized
31 Loss: 0.49942803382873535
Akadem Buck Buen Sydney Rewrite

optimized
32 Loss: 0.4409189224243164
Akadem Buck Buen Sydney zaw

**********disambiguation_qa**********
0
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 512, 278, 1494, 25260, 29892, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 2655, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 372, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 25008, 5148, 964, 27302, 26142, 800, 2750, 278, 274, 1161, 631, 29892, 1363, 896, 4312, 304, 2274, 278, 1206, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 512, 278, 1494, 25260, 29892, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 2655, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 372, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 10212, 261, 29692, 278, 28274, 263, 16366, 1050, 1363, 1183, 4433, 363, 263, 5780, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 512, 278, 1494, 25260, 29892, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 2655, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 372, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 1559, 29886, 5893, 5429, 278, 373, 6914, 261, 393, 1183, 750, 1063, 1985, 373, 278, 3699, 363, 2211, 11405, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 512, 278, 1494, 25260, 29892, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 2655, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 372, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 23383, 10018, 278, 7984, 263, 7254, 2158, 322, 4433, 1075, 363, 16705, 29889, 29871, 10604, 29901, 29871]] [[450, 27682, 4188, 267, 278, 274, 1296], [1913, 3752, 17269], [450, 3633, 424, 1033, 1371], [739, 471, 278, 19001, 29915, 29879, 4180]]
Initial Loss: 9.901576042175293
start ij pos optimization
optimized
4 Loss: 5.136040687561035
Zip sechsVor In the following sentences, explain the antecedent of the pronoun (which thing the pronoun refers to), or state that it is ambiguous.


optimized
5 Loss: 4.6595683097839355
ZiponymeVor In the following sentences, explain the antecedent of the pronoun (which thing the pronoun refers to), or state that it is ambiguous.


6 Loss: 4.6595683097839355
ZiponymeVor In the following sentences, explain the antecedent of the pronoun (which thing the pronoun refers to), or state that it is ambiguous.


optimized
11 Loss: 4.505573272705078
ZiponymeVor In the following sentences browser explain the antecedent of the pronoun (which thing the pronoun refers to), or state that it is ambiguous.


optimized
23 Loss: 4.372389793395996
ZiponymeVor In the following sentences browser explain the antecedent of the pronoun (whichShell the pronoun refers to), or state that it is ambiguous.


optimized
33 Loss: 4.243851661682129
ZiponymeVor In the following sentences browser explain the antecedent of the pronoun (whichShell the pronoun refers to), or state thatFilterChain is ambiguous.


Initial VF Loss: 1.7895582914352417
start vf pos optimization
optimized
43 Loss: 1.4699976444244385
JardefinedLprev西

44 Loss: 1.4699976444244385
JardefinedLprev西

optimized
45 Loss: 1.3109875917434692
JardefinedToStringprev西

46 Loss: 1.3109875917434692
JardefinedToStringprev西

optimized
47 Loss: 1.2153760194778442
JardefinedToStringprevOutput

1
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 26264, 29266, 14147, 512, 278, 1494, 25260, 4714, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 16037, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 7208, 293, 1395, 1691, 278, 25647, 391, 1363, 1183, 338, 13407, 297, 4565, 310, 278, 3050, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26264, 29266, 14147, 512, 278, 1494, 25260, 4714, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 16037, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 11962, 4433, 278, 16538, 10532, 565, 540, 1033, 3638, 278, 26094, 310, 1269, 3234, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26264, 29266, 14147, 512, 278, 1494, 25260, 4714, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 16037, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 4120, 654, 261, 1754, 263, 3699, 1246, 363, 278, 16500, 1363, 896, 7091, 8310, 873, 4486, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26264, 29266, 14147, 512, 278, 1494, 25260, 4714, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 16037, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 4824, 8910, 5429, 278, 289, 5790, 393, 540, 750, 23900, 29889, 29871, 10604, 29901, 29871]] [[450, 13897, 8569, 267, 373, 775], [739, 471, 278, 6320, 1061, 29915, 29879, 4656, 292, 8898], [450, 528, 261, 2593, 318, 561, 3361, 278, 10776], [450, 28274, 4433, 363, 263, 5780]]
Initial Loss: 4.185299873352051
start ij pos optimization
4 Loss: 4.185299873352051
ZiponymeVor In the following sentences browser explain the antecedent of the pronoun (whichShell the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
5 Loss: 3.8327369689941406
ZiprouterVor In the following sentences browser explain the antecedent of the pronoun (whichShell the pronoun refers to), or state thatFilterChain is ambiguous.


6 Loss: 3.8327369689941406
ZiprouterVor In the following sentences browser explain the antecedent of the pronoun (whichShell the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
11 Loss: 3.776836395263672
ZiprouterVor In the following sentencesFootnote explain the antecedent of the pronoun (whichShell the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
23 Loss: 3.734414577484131
ZiprouterVor In the following sentencesFootnote explain the antecedent of the pronoun (which unfold the pronoun refers to), or state thatFilterChain is ambiguous.


33 Loss: 3.734414577484131
ZiprouterVor In the following sentencesFootnote explain the antecedent of the pronoun (which unfold the pronoun refers to), or state thatFilterChain is ambiguous.


Initial VF Loss: 1.5717843770980835
start vf pos optimization
optimized
43 Loss: 1.5305604934692383
CorndefinedToStringprevOutput

optimized
44 Loss: 1.5070488452911377
CornumbnToStringprevOutput

optimized
45 Loss: 1.4556360244750977
Cornumbn RudprevOutput

46 Loss: 1.4556360244750977
Cornumbn RudprevOutput

optimized
47 Loss: 1.4112818241119385
Cornumbn Rudprev partir

2
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 26264, 15140, 14147, 512, 278, 1494, 25260, 22626, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20220, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 1190, 25339, 1370, 9571, 278, 16500, 393, 540, 4312, 304, 679, 901, 1791, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26264, 15140, 14147, 512, 278, 1494, 25260, 22626, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20220, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 1634, 9555, 322, 278, 14547, 5353, 670, 25448, 270, 17006, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26264, 15140, 14147, 512, 278, 1494, 25260, 22626, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20220, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 1190, 25339, 1370, 9571, 278, 5595, 344, 393, 540, 4312, 901, 931, 304, 19012, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26264, 15140, 14147, 512, 278, 1494, 25260, 22626, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20220, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 21621, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 1619, 3847, 2000, 902, 28274, 363, 901, 2472, 29871, 10604, 29901, 29871]] [[1913, 3752, 17269], [450, 289, 5790, 750, 23900], [450, 3633, 424, 1033, 1371], [1913, 3752, 17269]]
Initial Loss: 3.831731081008911
start ij pos optimization
optimized
4 Loss: 3.577862501144409
CooperrouterVor In the following sentencesFootnote explain the antecedent of the pronoun (which unfold the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
5 Loss: 3.158782482147217
CooperdatabVor In the following sentencesFootnote explain the antecedent of the pronoun (which unfold the pronoun refers to), or state thatFilterChain is ambiguous.


6 Loss: 3.158782482147217
CooperdatabVor In the following sentencesFootnote explain the antecedent of the pronoun (which unfold the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
11 Loss: 3.0451624393463135
CooperdatabVor In the following sentencesnumpy explain the antecedent of the pronoun (which unfold the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
23 Loss: 3.00034761428833
CooperdatabVor In the following sentencesnumpy explain the antecedent of the pronoun (which Davis the pronoun refers to), or state thatFilterChain is ambiguous.


optimized
33 Loss: 2.9602577686309814
CooperdatabVor In the following sentencesnumpy explain the antecedent of the pronoun (which Davis the pronoun refers to), or state that Fund is ambiguous.


Initial VF Loss: 1.207013487815857
start vf pos optimization
optimized
43 Loss: 1.113333821296692
Pittsumbn Rudprev partir

optimized
44 Loss: 1.0003162622451782
Pittscentral Rudprev partir

optimized
45 Loss: 0.9582632184028625
Pittscentralartoprev partir

46 Loss: 0.9582632184028625
Pittscentralartoprev partir

optimized
47 Loss: 0.8418980240821838
Pittscentralartoprev Cart

3
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 21851, 29503, 14147, 512, 278, 1494, 25260, 23749, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 15225, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 28274, 24114, 278, 13897, 1363, 540, 2253, 11098, 278, 1108, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 14147, 512, 278, 1494, 25260, 23749, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 15225, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 2224, 19915, 7625, 260, 15118, 11916, 515, 278, 28985, 304, 1106, 472, 1090, 902, 20710, 1883, 4338, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 14147, 512, 278, 1494, 25260, 23749, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 15225, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 8818, 29886, 2747, 1539, 411, 278, 3633, 424, 304, 1284, 714, 565, 896, 1033, 1371, 411, 8818, 10223, 362, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 14147, 512, 278, 1494, 25260, 23749, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 15225, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 9087, 5429, 278, 2613, 2838, 272, 393, 896, 3614, 278, 2462, 1283, 29889, 29871, 10604, 29901, 29871]] [[1913, 3752, 17269], [402, 1351, 278, 23383, 263, 22267], [450, 8939, 342, 6392, 881, 4772, 278, 5764, 11910], [6162, 9795, 278, 3483, 858, 3143, 263, 16286]]
Initial Loss: 3.1950056552886963
start ij pos optimization
4 Loss: 3.1950056552886963
CooperdatabVor In the following sentencesnumpy explain the antecedent of the pronoun (which Davis the pronoun refers to), or state that Fund is ambiguous.


5 Loss: 3.1950056552886963
CooperdatabVor In the following sentencesnumpy explain the antecedent of the pronoun (which Davis the pronoun refers to), or state that Fund is ambiguous.


optimized
6 Loss: 3.1531975269317627
Cooperdatabenza In the following sentencesnumpy explain the antecedent of the pronoun (which Davis the pronoun refers to), or state that Fund is ambiguous.


optimized
11 Loss: 3.036827564239502
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (which Davis the pronoun refers to), or state that Fund is ambiguous.


optimized
23 Loss: 3.0243711471557617
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichalm the pronoun refers to), or state that Fund is ambiguous.


33 Loss: 3.0243711471557617
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichalm the pronoun refers to), or state that Fund is ambiguous.


Initial VF Loss: 1.1128791570663452
start vf pos optimization
optimized
43 Loss: 0.9515506625175476
Beitcentralartoprev Cart

44 Loss: 0.9515506625175476
Beitcentralartoprev Cart

45 Loss: 0.9515506625175476
Beitcentralartoprev Cart

optimized
46 Loss: 0.9113550782203674
BeitcentralartoSetter Cart

47 Loss: 0.9113550782203674
BeitcentralartoSetter Cart

4
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17120, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 9638, 391, 11465, 630, 411, 278, 7664, 29892, 322, 896, 7258, 263, 5828, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17120, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 1559, 29886, 5893, 11465, 630, 411, 278, 23383, 322, 4846, 1075, 263, 22267, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17120, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 9638, 391, 674, 11465, 403, 411, 278, 7664, 29892, 322, 540, 674, 6232, 263, 5828, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17120, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 13249, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 20255, 4433, 278, 4824, 8910, 565, 896, 1033, 27942, 777, 6909, 29889, 29871, 10604, 29901, 29871]] [[402, 1351, 278, 23383, 263, 22267], [26579, 287, 278, 27372], [450, 4266, 391, 338, 385, 17924], [450, 3271, 20348, 750, 20848]]
Initial Loss: 2.9277353286743164
start ij pos optimization
4 Loss: 2.9277353286743164
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichalm the pronoun refers to), or state that Fund is ambiguous.


5 Loss: 2.9277353286743164
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichalm the pronoun refers to), or state that Fund is ambiguous.


6 Loss: 2.9277353286743164
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichalm the pronoun refers to), or state that Fund is ambiguous.


11 Loss: 2.9277353286743164
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichalm the pronoun refers to), or state that Fund is ambiguous.


optimized
23 Loss: 2.8854775428771973
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichamazon the pronoun refers to), or state that Fund is ambiguous.


optimized
33 Loss: 2.854003429412842
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichamazon the pronoun refers to), or state thatxsd is ambiguous.


Initial VF Loss: 0.923770010471344
start vf pos optimization
optimized
43 Loss: 0.9216275811195374
GaussiancentralartoSetter Cart

44 Loss: 0.9216275811195374
GaussiancentralartoSetter Cart

optimized
45 Loss: 0.9002201557159424
GaussiancentralyiSetter Cart

optimized
46 Loss: 0.8681392073631287
Gaussiancentralyiuba Cart

47 Loss: 0.8681392073631287
Gaussiancentralyiuba Cart

5
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17260, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 910, 5828, 1033, 451, 367, 6369, 1728, 278, 9227, 322, 902, 7875, 29915, 2304, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17260, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 8455, 4433, 278, 19001, 304, 451, 9566, 902, 1559, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17260, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 1619, 22618, 2000, 670, 289, 2209, 363, 901, 2472, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17260, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 1559, 29886, 5893, 5429, 278, 373, 6914, 261, 393, 896, 750, 1063, 1985, 373, 278, 3699, 363, 2211, 11405, 29889, 29871, 10604, 29901, 29871]] [[450, 7984, 4188, 267, 304, 6860], [26579, 287, 565, 278, 20255, 1033, 27942, 6909], [450, 27682, 4188, 267, 278, 274, 1296], [450, 16500, 881, 1652, 2209]]
Initial Loss: 2.9138121604919434
start ij pos optimization
4 Loss: 2.9138121604919434
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichamazon the pronoun refers to), or state thatxsd is ambiguous.


5 Loss: 2.9138121604919434
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichamazon the pronoun refers to), or state thatxsd is ambiguous.


6 Loss: 2.9138121604919434
Cooperdatabenza In the following sentences RewriteRule explain the antecedent of the pronoun (whichamazon the pronoun refers to), or state thatxsd is ambiguous.


optimized
11 Loss: 2.8996448516845703
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichamazon the pronoun refers to), or state thatxsd is ambiguous.


optimized
23 Loss: 2.839959144592285
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichImp the pronoun refers to), or state thatxsd is ambiguous.


33 Loss: 2.839959144592285
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichImp the pronoun refers to), or state thatxsd is ambiguous.


Initial VF Loss: 0.8904674649238586
start vf pos optimization
optimized
43 Loss: 0.8058001399040222
Beancentralyiuba Cart

44 Loss: 0.8058001399040222
Beancentralyiuba Cart

optimized
45 Loss: 0.7848477959632874
Beancentralbinomuba Cart

46 Loss: 0.7848477959632874
Beancentralbinomuba Cart

47 Loss: 0.7848477959632874
Beancentralbinomuba Cart

6
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 24192, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 5722, 8910, 5429, 278, 11962, 393, 896, 1033, 5146, 411, 274, 1161, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 24192, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 1619, 22618, 2000, 902, 289, 2209, 363, 901, 2472, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 24192, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 4120, 654, 261, 1754, 263, 3699, 1246, 363, 278, 16500, 1363, 540, 7091, 8310, 873, 4486, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 24192, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 13897, 24114, 278, 28274, 1363, 896, 2253, 11098, 278, 1108, 29889, 29871, 10604, 29901, 29871]] [[1913, 3752, 17269], [450, 28274, 11098, 278, 1108], [450, 28274, 3282, 29915, 29873, 8908, 3447], [1913, 3752, 17269]]
Initial Loss: 2.767247438430786
start ij pos optimization
4 Loss: 2.767247438430786
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichImp the pronoun refers to), or state thatxsd is ambiguous.


5 Loss: 2.767247438430786
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichImp the pronoun refers to), or state thatxsd is ambiguous.


6 Loss: 2.767247438430786
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichImp the pronoun refers to), or state thatxsd is ambiguous.


11 Loss: 2.767247438430786
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (whichImp the pronoun refers to), or state thatxsd is ambiguous.


optimized
23 Loss: 2.737485885620117
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (which startup the pronoun refers to), or state thatxsd is ambiguous.


33 Loss: 2.737485885620117
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (which startup the pronoun refers to), or state thatxsd is ambiguous.


Initial VF Loss: 0.7670435905456543
start vf pos optimization
43 Loss: 0.7670435905456543
Beancentralbinomuba Cart

44 Loss: 0.7670435905456543
Beancentralbinomuba Cart

optimized
45 Loss: 0.7662761807441711
Beancentralgunuba Cart

optimized
46 Loss: 0.7568280696868896
Beancentralgunanka Cart

47 Loss: 0.7568280696868896
Beancentralgunanka Cart

7
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20234, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 16500, 766, 15603, 304, 278, 2613, 2838, 272, 393, 896, 750, 263, 4955, 310, 5960, 749, 633, 1509, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20234, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 8372, 2000, 278, 27372, 322, 4433, 963, 304, 1722, 278, 3050, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20234, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 4827, 5429, 502, 393, 896, 1033, 451, 5870, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 5723, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 20234, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 19168, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 7208, 293, 1395, 1691, 278, 25647, 391, 1363, 1183, 471, 297, 263, 1781, 286, 2092, 29889, 29871, 10604, 29901, 29871]] [[26579, 287, 278, 7984], [450, 16538, 10532, 723, 3638, 278, 26094], [450, 13897, 11098, 278, 1108], [739, 471, 278, 11962, 29915, 29879, 1559]]
Initial Loss: 2.6701207160949707
start ij pos optimization
4 Loss: 2.6701207160949707
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (which startup the pronoun refers to), or state thatxsd is ambiguous.


5 Loss: 2.6701207160949707
Cooperdatabenza In the following sentences bash explain the antecedent of the pronoun (which startup the pronoun refers to), or state thatxsd is ambiguous.


optimized
6 Loss: 2.6444430351257324
Cooperdatabupload In the following sentences bash explain the antecedent of the pronoun (which startup the pronoun refers to), or state thatxsd is ambiguous.


11 Loss: 2.6444430351257324
Cooperdatabupload In the following sentences bash explain the antecedent of the pronoun (which startup the pronoun refers to), or state thatxsd is ambiguous.


optimized
23 Loss: 2.606375217437744
Cooperdatabupload In the following sentences bash explain the antecedent of the pronoun (which Sales the pronoun refers to), or state thatxsd is ambiguous.


optimized
33 Loss: 2.595946788787842
Cooperdatabupload In the following sentences bash explain the antecedent of the pronoun (which Sales the pronoun refers to), or state thatDataSet is ambiguous.


Initial VF Loss: 0.9067860245704651
start vf pos optimization
optimized
43 Loss: 0.8752164840698242
Mrscentralgunanka Cart

optimized
44 Loss: 0.8345666527748108
Mrstechgunanka Cart

optimized
45 Loss: 0.752486526966095
Mrstech coachanka Cart

optimized
46 Loss: 0.7375279068946838
Mrstech coachUITableView Cart

47 Loss: 0.7375279068946838
Mrstech coachUITableView Cart

8
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 21851, 29503, 9009, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 28389, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 28449, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 13897, 1539, 411, 278, 28274, 1363, 896, 1754, 263, 10171, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 9009, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 28389, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 28449, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 13897, 1539, 411, 278, 23383, 1363, 670, 2969, 508, 367, 8762, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 9009, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 28389, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 28449, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 14645, 29949, 18093, 278, 3633, 424, 263, 1559, 1363, 896, 4312, 697, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 21851, 29503, 9009, 512, 278, 1494, 25260, 10891, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 28389, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 28449, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 6000, 15168, 20458, 304, 5870, 278, 8881, 472, 1009, 8034, 29871, 10604, 29901, 29871]] [[450, 9227, 5456, 263, 1781, 3143], [1913, 3752, 17269], [450, 9087, 3614, 278, 2462, 1283], [402, 1351, 278, 1067, 5968, 263, 2313, 792]]
Initial Loss: 2.627309560775757
start ij pos optimization
optimized
4 Loss: 2.2104785442352295
Gaussiandatabupload In the following sentences bash explain the antecedent of the pronoun (which Sales the pronoun refers to), or state thatDataSet is ambiguous.


5 Loss: 2.2104785442352295
Gaussiandatabupload In the following sentences bash explain the antecedent of the pronoun (which Sales the pronoun refers to), or state thatDataSet is ambiguous.


optimized
6 Loss: 2.145085334777832
Gaussiandatabajax In the following sentences bash explain the antecedent of the pronoun (which Sales the pronoun refers to), or state thatDataSet is ambiguous.


optimized
11 Loss: 2.0094809532165527
Gaussiandatabajax In the following sentences RewriteRule explain the antecedent of the pronoun (which Sales the pronoun refers to), or state thatDataSet is ambiguous.


optimized
23 Loss: 1.9475630521774292
Gaussiandatabajax In the following sentences RewriteRule explain the antecedent of the pronoun (whichonsieur the pronoun refers to), or state thatDataSet is ambiguous.


optimized
33 Loss: 1.8387128114700317
Gaussiandatabajax In the following sentences RewriteRule explain the antecedent of the pronoun (whichonsieur the pronoun refers to), or state that CGRect is ambiguous.


Initial VF Loss: 1.1222316026687622
start vf pos optimization
optimized
43 Loss: 1.060733437538147
THtech coachUITableView Cart

optimized
44 Loss: 0.9675614237785339
THpdf coachUITableView Cart

optimized
45 Loss: 0.8881226181983948
THpdf HTUITableView Cart

optimized
46 Loss: 0.8015236854553223
THpdf HT curl Cart

optimized
47 Loss: 0.7175693511962891
THpdf HT curl curl

9
[4, 5, 6, 11, 23, 33] [43, 44, 45, 46, 47]
[[1, 2184, 29901, 29871, 22477, 29503, 6538, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17914, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 26064, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 7984, 338, 2337, 18819, 278, 20255, 716, 13698, 1363, 1183, 4188, 267, 304, 6860, 4045, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22477, 29503, 6538, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17914, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 26064, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 7208, 293, 2000, 304, 1871, 278, 11962, 393, 670, 1559, 723, 367, 7960, 297, 278, 7250, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22477, 29503, 6538, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17914, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 26064, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 450, 4824, 8910, 5429, 278, 289, 5790, 393, 540, 750, 23900, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 22477, 29503, 6538, 512, 278, 1494, 25260, 23582, 5649, 278, 15053, 1133, 296, 310, 278, 11504, 1309, 313, 4716, 17914, 278, 11504, 1309, 14637, 304, 511, 470, 2106, 393, 26064, 338, 22363, 681, 29889, 13, 29871, 10567, 29901, 29871, 6000, 15168, 13900, 304, 5870, 278, 8881, 472, 902, 8034, 29871, 10604, 29901, 29871]] [[450, 16500, 750, 263, 19309, 4195], [1913, 3752, 17269], [450, 28274, 4433, 363, 263, 5780], [739, 471, 278, 11962, 29915, 29879, 1559]]
Initial Loss: 3.3087430000305176
start ij pos optimization
4 Loss: 3.3087430000305176
Gaussiandatabajax In the following sentences RewriteRule explain the antecedent of the pronoun (whichonsieur the pronoun refers to), or state that CGRect is ambiguous.


5 Loss: 3.3087430000305176
Gaussiandatabajax In the following sentences RewriteRule explain the antecedent of the pronoun (whichonsieur the pronoun refers to), or state that CGRect is ambiguous.


optimized
6 Loss: 3.2017853260040283
Gaussiandatabirmingham In the following sentences RewriteRule explain the antecedent of the pronoun (whichonsieur the pronoun refers to), or state that CGRect is ambiguous.


optimized
11 Loss: 2.847538709640503
Gaussiandatabirmingham In the following sentencesdisplaystyle explain the antecedent of the pronoun (whichonsieur the pronoun refers to), or state that CGRect is ambiguous.


optimized
23 Loss: 2.7972965240478516
Gaussiandatabirmingham In the following sentencesdisplaystyle explain the antecedent of the pronoun (whichboldsymbol the pronoun refers to), or state that CGRect is ambiguous.


optimized
33 Loss: 2.7757418155670166
Gaussiandatabirmingham In the following sentencesdisplaystyle explain the antecedent of the pronoun (whichboldsymbol the pronoun refers to), or state thatGridView is ambiguous.


Initial VF Loss: 1.0038020610809326
start vf pos optimization
optimized
43 Loss: 0.9372426271438599
HOpdf HT curl curl

44 Loss: 0.9372426271438599
HOpdf HT curl curl

optimized
45 Loss: 0.8818720579147339
HOpdf Hamburg curl curl

46 Loss: 0.8818720579147339
HOpdf Hamburg curl curl

47 Loss: 0.8818720579147339
HOpdf Hamburg curl curl

**********presuppositions_as_nli**********
0
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 27877, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 1906, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 306, 4741, 805, 23195, 29893, 2480, 18506, 27536, 744, 29920, 5429, 278, 319, 29967, 29907, 373, 498, 1295, 3250, 393, 678, 1489, 23137, 322, 5678, 5872, 29915, 29879, 8324, 526, 1603, 1090, 19220, 29889, 29871, 376, 4806, 526, 1985, 411, 1716, 310, 278, 4307, 24555, 13561, 5840, 1860, 9701, 322, 19383, 2472, 304, 4337, 6375, 373, 1009, 7274, 1699, 1183, 1497, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 498, 29878, 406, 526, 1023, 4307, 24555, 29883, 358, 5840, 1860, 9701, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 27877, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 1906, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 2296, 10205, 839, 304, 679, 714, 310, 278, 1559, 29892, 24613, 1847, 411, 278, 12949, 1339, 29873, 29889, 450, 767, 28996, 1250, 408, 3384, 895, 6496, 278, 3050, 29892, 773, 902, 23468, 29889, 2296, 5714, 902, 17346, 408, 1183, 8389, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 2296, 750, 5714, 902, 17346, 9251, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 27877, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 1906, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 18512, 1183, 2996, 1492, 515, 278, 731, 29892, 1603, 1652, 15392, 29892, 380, 18159, 310, 7916, 29892, 297, 3273, 29879, 322, 263, 8870, 357, 2246, 29892, 322, 1183, 4934, 670, 1361, 2745, 670, 28965, 5192, 5232, 287, 304, 263, 4943, 27725, 29889, 940, 3282, 29915, 29873, 763, 372, 29892, 670, 1236, 1416, 964, 902, 3186, 29936, 372, 885, 1965, 278, 23927, 714, 310, 1075, 29889, 940, 3282, 29915, 29873, 1073, 920, 1183, 1258, 372, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 2296, 6363, 920, 540, 1258, 372, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 27877, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 1906, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 259, 319, 14002, 611, 3955, 2665, 714, 491, 278, 410, 9340, 310, 22206, 29871, 29953, 29900, 29892, 607, 723, 1996, 2148, 290, 671, 297, 16157, 12298, 29892, 322, 22206, 29871, 29953, 29896, 29892, 607, 1074, 2039, 304, 5224, 15721, 26094, 363, 2106, 946, 15942, 29892, 5065, 2710, 9014, 414, 304, 11719, 363, 1716, 15366, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 410, 9340, 310, 22206, 29871, 29953, 29900, 11719, 363, 2106, 946, 15942, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[875, 737, 358], [23949], [23949], [875, 737, 358]]
Initial Loss: 11.19600772857666
start ij pos optimization
optimized
4 Loss: 8.520401954650879
Wirtschaft sechsVor This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence contradicts the first, and "neutral" if neither is of those two cases holds. Output entailment, contradiction or neutral.


optimized
5 Loss: 5.11116886138916
WirtschaftoopVor This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence contradicts the first, and "neutral" if neither is of those two cases holds. Output entailment, contradiction or neutral.


optimized
6 Loss: 5.002884864807129
WirtschaftoopinnerHTML This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence contradicts the first, and "neutral" if neither is of those two cases holds. Output entailment, contradiction or neutral.


optimized
48 Loss: 4.9910407066345215
WirtschaftoopinnerHTML This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceOutputStreams the first, and "neutral" if neither is of those two cases holds. Output entailment, contradiction or neutral.


optimized
62 Loss: 4.986955642700195
WirtschaftoopinnerHTML This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceOutputStreams the first, and "neutral" if neither is of incred two cases holds. Output entailment, contradiction or neutral.


69 Loss: 4.986955642700195
WirtschaftoopinnerHTML This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceOutputStreams the first, and "neutral" if neither is of incred two cases holds. Output entailment, contradiction or neutral.


Initial VF Loss: 3.1693828105926514
start vf pos optimization
optimized
81 Loss: 3.0143516063690186
derendefinedLprev西

optimized
82 Loss: 2.871467113494873
deren establishmentLprev西

optimized
83 Loss: 2.6425588130950928
deren establishment Josefprev西

optimized
84 Loss: 2.5098977088928223
deren establishment Josefpark西

optimized
85 Loss: 2.4615519046783447
deren establishment Josefpark recursive

1
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 19037, 26793, 14742, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 16764, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 29811, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 1126, 306, 1348, 5122, 338, 13312, 1492, 29892, 896, 29915, 276, 2675, 304, 1369, 8401, 363, 628, 1036, 29889, 1205, 896, 29915, 345, 2355, 304, 4377, 714, 825, 2924, 310, 628, 1036, 896, 748, 363, 322, 920, 1568, 896, 508, 21750, 304, 10075, 394, 819, 403, 777, 19083, 6940, 4097, 1058, 864, 304, 748, 14432, 322, 679, 445, 2655, 975, 411, 29889, 1105, 896, 29915, 345, 2355, 263, 19932, 29892, 372, 29915, 29879, 263, 260, 820, 261, 6520, 304, 6686, 363, 278, 8037, 5619, 29892, 451, 263, 901, 628, 9593, 19932, 307, 412, 1135, 825, 896, 20050, 297, 278, 5619, 1363, 896, 29892, 278, 18148, 14189, 1446, 526, 451, 272, 17365, 901, 7417, 322, 674, 367, 3806, 304, 29892, 306, 1348, 393, 896, 29892, 372, 29915, 29879, 763, 27623, 2648, 5499, 29892, 1058, 925, 1497, 22600, 408, 263, 4432, 16909, 29892, 540, 24867, 1048, 278, 7178, 29915, 29879, 14008, 19906, 12032, 1156, 393, 527, 412, 25117, 322, 540, 2000, 372, 385, 15058, 310, 856, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 825, 896, 20050, 297, 278, 5619, 338, 263, 19932, 307, 412, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19037, 26793, 14742, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 16764, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 29811, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 5013, 5790, 350, 29901, 2688, 29915, 276, 2675, 304, 505, 304, 5146, 1009, 16200, 943, 395, 29896, 24464, 373, 5306, 29871, 29896, 303, 29889, 2688, 1016, 29915, 29873, 505, 278, 6909, 1492, 1286, 22993, 13, 10649, 5790, 319, 29901, 1939, 29892, 896, 1016, 29915, 29873, 505, 372, 3447, 29892, 322, 591, 1073, 988, 896, 29915, 645, 679, 372, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 896, 674, 18864, 372, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19037, 26793, 14742, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 16764, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 29811, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 5674, 29892, 727, 471, 694, 1370, 29889, 25735, 29892, 278, 3148, 9121, 471, 727, 29892, 541, 591, 3282, 29915, 29873, 281, 482, 1370, 29889, 379, 1249, 29875, 3508, 29915, 29873, 263, 1568, 7968, 4234, 1135, 21375, 29939, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 21375, 29939, 338, 2319, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19037, 26793, 14742, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 16764, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 29811, 1023, 4251, 8640, 29889, 10604, 875, 737, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 12030, 29923, 8995, 6850, 29892, 395, 29896, 29906, 29929, 29936, 12030, 29923, 8995, 3371, 19040, 1946, 319, 540, 3312, 313, 19488, 29897, 8323, 29889, 849, 2221, 29892, 395, 29896, 29929, 29929, 29889, 1670, 29915, 29879, 263, 2253, 21224, 292, 7271, 1135, 12422, 292, 263, 281, 555, 322, 23013, 263, 1196, 411, 360, 328, 714, 373, 263, 10776, 1319, 19437, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 29612, 292, 263, 281, 555, 322, 23013, 263, 1196, 411, 360, 328, 714, 373, 263, 10776, 1319, 19437, 338, 263, 21224, 292, 7271, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[21104], [875, 737, 358], [875, 737, 358], [21104]]
Initial Loss: 4.730377674102783
start ij pos optimization
optimized
4 Loss: 3.6870510578155518
couldoopinnerHTML This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceOutputStreams the first, and "neutral" if neither is of incred two cases holds. Output entailment, contradiction or neutral.


optimized
5 Loss: 3.5413224697113037
couldbisinnerHTML This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceOutputStreams the first, and "neutral" if neither is of incred two cases holds. Output entailment, contradiction or neutral.


optimized
6 Loss: 2.6167471408843994
couldbisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceOutputStreams the first, and "neutral" if neither is of incred two cases holds. Output entailment, contradiction or neutral.


optimized
48 Loss: 2.559555768966675
couldbisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceProducts the first, and "neutral" if neither is of incred two cases holds. Output entailment, contradiction or neutral.


optimized
62 Loss: 2.5506653785705566
couldbisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceProducts the first, and "neutral" if neither is of by two cases holds. Output entailment, contradiction or neutral.


optimized
69 Loss: 2.5401291847229004
couldbisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceProducts the first, and "neutral" if neither is of by two cases holds. Output ent Plment, contradiction or neutral.


Initial VF Loss: 2.629747152328491
start vf pos optimization
optimized
81 Loss: 2.153209686279297
can establishment Josefpark recursive

optimized
82 Loss: 1.83124577999115
canbytes Josefpark recursive

optimized
83 Loss: 1.6330221891403198
canbytesMadpark recursive

optimized
84 Loss: 1.5118376016616821
canbytesMadgue recursive

optimized
85 Loss: 1.5043381452560425
canbytesMadgue refactor

2
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 1033, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 7566, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 491, 1023, 4251, 8640, 29889, 10604, 875, 1858, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 512, 278, 937, 4004, 310, 278, 3143, 29892, 15351, 536, 4893, 278, 12045, 310, 337, 5890, 373, 11149, 1661, 26029, 7726, 414, 29889, 17302, 4045, 29892, 591, 8293, 515, 263, 12580, 1807, 29892, 263, 1302, 29891, 866, 29892, 322, 3196, 1294, 5562, 6606, 29889, 15351, 536, 29915, 29879, 6555, 3447, 1407, 5199, 18766, 338, 805, 14356, 714, 297, 376, 2831, 12699, 1699, 278, 11582, 26576, 29901, 2860, 12475, 414, 306, 3282, 29915, 29873, 14074, 590, 982, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 15351, 536, 471, 5714, 1434, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1033, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 7566, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 491, 1023, 4251, 8640, 29889, 10604, 875, 1858, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 11275, 413, 4841, 505, 5318, 14717, 4208, 29889, 10152, 515, 1716, 11192, 8429, 263, 25550, 414, 2318, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 1670, 526, 3721, 1023, 5866, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1033, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 7566, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 491, 1023, 4251, 8640, 29889, 10604, 875, 1858, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 2178, 278, 27836, 508, 7146, 367, 12341, 304, 1791, 29889, 1334, 1073, 825, 9559, 304, 15864, 15864, 350, 19363, 1156, 830, 854, 479, 310, 278, 317, 389, 29892, 322, 825, 540, 29915, 29879, 1063, 2599, 1951, 7106, 310, 278, 435, 15844, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 12538, 9559, 304, 15864, 15864, 350, 19363, 1156, 830, 854, 479, 310, 278, 317, 389, 29892, 322, 540, 29915, 29879, 1063, 2599, 1554, 1951, 7106, 310, 278, 435, 15844, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 1033, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 7566, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 491, 1023, 4251, 8640, 29889, 10604, 875, 1858, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 1126, 297, 278, 6421, 7378, 306, 626, 3063, 6375, 304, 20888, 714, 322, 1985, 411, 20251, 310, 1716, 13973, 304, 5870, 278, 18066, 267, 591, 385, 871, 4505, 4208, 29889, 29871, 24532, 6033, 3801, 5065, 3192, 278, 20251, 310, 1716, 13973, 297, 278, 18148, 376, 304, 6159, 4822, 278, 263, 275, 280, 322, 437, 278, 2305, 29915, 29879, 664, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 1670, 526, 1023, 13973, 297, 278, 6940, 403, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[875, 737, 358], [21104], [21104], [21104]]
Initial Loss: 5.999017715454102
start ij pos optimization
optimized
4 Loss: 5.771857261657715
maybebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceProducts the first, and "neutral" if neither is of by two cases holds. Output ent Plment, contradiction or neutral.


5 Loss: 5.771857261657715
maybebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceProducts the first, and "neutral" if neither is of by two cases holds. Output ent Plment, contradiction or neutral.


6 Loss: 5.771857261657715
maybebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentenceProducts the first, and "neutral" if neither is of by two cases holds. Output ent Plment, contradiction or neutral.


optimized
48 Loss: 5.769814968109131
maybebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of by two cases holds. Output ent Plment, contradiction or neutral.


optimized
62 Loss: 5.749634265899658
maybebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of ping two cases holds. Output ent Plment, contradiction or neutral.


optimized
69 Loss: 5.705536365509033
maybebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of ping two cases holds. Output ent decayment, contradiction or neutral.


Initial VF Loss: 2.6171669960021973
start vf pos optimization
optimized
81 Loss: 2.391846179962158
NicolabytesMadgue refactor

82 Loss: 2.391846179962158
NicolabytesMadgue refactor

83 Loss: 2.391846179962158
NicolabytesMadgue refactor

optimized
84 Loss: 2.1932852268218994
NicolabytesMad Meyer refactor

optimized
85 Loss: 2.0885708332061768
NicolabytesMad Meyer placed

3
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 26026, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 24543, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 11386, 317, 446, 295, 29892, 278, 1487, 310, 263, 15703, 322, 385, 5593, 11004, 11619, 29892, 1497, 540, 750, 376, 9171, 29908, 7271, 310, 13433, 1550, 8401, 4832, 3064, 411, 670, 4783, 29915, 29879, 7246, 1860, 29889, 1205, 1156, 18055, 278, 3014, 310, 4644, 13397, 297, 29871, 29896, 29929, 29955, 29929, 29892, 540, 4689, 304, 4459, 376, 29874, 2498, 4060, 393, 727, 750, 304, 367, 901, 1135, 825, 306, 1033, 1074, 1213, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 940, 23588, 515, 278, 3014, 310, 4644, 13397, 1434, 29871, 29896, 29929, 29955, 29929, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26026, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 24543, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 3872, 29915, 29873, 2649, 592, 366, 4687, 263, 734, 305, 9226, 1244, 1434, 502, 29889, 365, 2354, 1838, 29915, 29873, 1235, 278, 3256, 1708, 714, 1434, 3063, 975, 902, 23468, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 365, 2354, 16869, 278, 3256, 1106, 975, 902, 23468, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26026, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 24543, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 29782, 715, 686, 287, 964, 825, 7470, 304, 367, 278, 13394, 310, 263, 24230, 29889, 1383, 23453, 3282, 29915, 29873, 1072, 475, 902, 3661, 292, 29892, 322, 1183, 380, 25443, 964, 278, 27709, 310, 278, 975, 29882, 9776, 7679, 29892, 322, 269, 804, 304, 278, 15589, 11904, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 1383, 23453, 9251, 750, 902, 3661, 292, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 26026, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 24543, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 960, 366, 22941, 929, 411, 1906, 2305, 29892, 1784, 310, 963, 674, 1018, 304, 21682, 366, 29889, 8413, 2175, 938, 324, 261, 749, 338, 1283, 278, 8727, 29889, 1126, 727, 338, 263, 2253, 1342, 1135, 19848, 304, 278, 4892, 310, 830, 369, 355, 23052, 12941, 5872, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 8413, 2175, 938, 324, 261, 749, 338, 263, 19848, 304, 278, 4892, 310, 830, 369, 355, 23052, 12941, 5872, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[21104], [875, 737, 358], [21104], [875, 737, 358]]
Initial Loss: 5.4306111335754395
start ij pos optimization
optimized
4 Loss: 4.548437118530273
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of ping two cases holds. Output ent decayment, contradiction or neutral.


5 Loss: 4.548437118530273
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of ping two cases holds. Output ent decayment, contradiction or neutral.


6 Loss: 4.548437118530273
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of ping two cases holds. Output ent decayment, contradiction or neutral.


48 Loss: 4.548437118530273
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is of ping two cases holds. Output ent decayment, contradiction or neutral.


optimized
62 Loss: 4.527118682861328
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is ofwidehat two cases holds. Output ent decayment, contradiction or neutral.


69 Loss: 4.527118682861328
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is ofwidehat two cases holds. Output ent decayment, contradiction or neutral.


Initial VF Loss: 1.6485488414764404
start vf pos optimization
optimized
81 Loss: 1.5870327949523926
programmerbytesMad Meyer placed

82 Loss: 1.5870327949523926
programmerbytesMad Meyer placed

83 Loss: 1.5870327949523926
programmerbytesMad Meyer placed

optimized
84 Loss: 1.4920390844345093
programmerbytesMad Jimmy placed

optimized
85 Loss: 1.4304345846176147
programmerbytesMad Jimmycare

4
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 12259, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 259, 19454, 902, 16538, 13994, 29892, 12553, 2256, 4689, 304, 4459, 443, 510, 3921, 519, 411, 278, 937, 1023, 8277, 322, 278, 3233, 310, 7984, 292, 7134, 896, 9875, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 19454, 902, 16538, 13994, 29892, 12553, 2256, 3282, 29915, 29873, 4459, 443, 510, 3921, 519, 411, 278, 937, 1023, 8277, 322, 278, 3233, 310, 7984, 292, 7134, 896, 9875, 297, 278, 4940, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 12259, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 306, 505, 263, 2217, 2655, 363, 902, 29889, 402, 5607, 29928, 306, 1016, 29915, 29873, 1073, 920, 366, 508, 3013, 278, 1510, 373, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 887, 508, 3013, 278, 1510, 373, 297, 777, 982, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 12259, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 512, 278, 937, 4004, 310, 278, 3143, 29892, 15351, 536, 4893, 278, 12045, 310, 337, 5890, 373, 11149, 1661, 26029, 7726, 414, 29889, 17302, 4045, 29892, 591, 8293, 515, 263, 12580, 1807, 29892, 263, 1302, 29891, 866, 29892, 322, 3196, 1294, 5562, 6606, 29889, 15351, 536, 29915, 29879, 6555, 3447, 1407, 5199, 18766, 338, 805, 14356, 714, 297, 376, 2831, 12699, 1699, 278, 11582, 26576, 29901, 2860, 12475, 414, 306, 3282, 29915, 29873, 14074, 590, 982, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 15351, 536, 471, 5714, 1434, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 18963, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 12259, 1023, 4251, 8640, 29889, 10604, 875, 20228, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 259, 26991, 372, 29915, 29879, 4482, 29899, 355, 367, 261, 1506, 4167, 393, 671, 12944, 3573, 5633, 304, 5503, 3234, 29892, 322, 5401, 331, 21079, 15058, 901, 21779, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 3834, 14582, 671, 367, 261, 304, 5503, 12944, 3573, 5633, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[21104], [875, 737, 358], [23949], [875, 737, 358]]
Initial Loss: 4.500169277191162
start ij pos optimization
4 Loss: 4.500169277191162
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is ofwidehat two cases holds. Output ent decayment, contradiction or neutral.


5 Loss: 4.500169277191162
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is ofwidehat two cases holds. Output ent decayment, contradiction or neutral.


6 Loss: 4.500169277191162
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencecurls the first, and "neutral" if neither is ofwidehat two cases holds. Output ent decayment, contradiction or neutral.


optimized
48 Loss: 4.464948654174805
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencedones the first, and "neutral" if neither is ofwidehat two cases holds. Output ent decayment, contradiction or neutral.


optimized
62 Loss: 4.455262660980225
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencedones the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent decayment, contradiction or neutral.


optimized
69 Loss: 4.444378852844238
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencedones the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent diciment, contradiction or neutral.


Initial VF Loss: 1.5361461639404297
start vf pos optimization
optimized
81 Loss: 1.501063585281372
sjbytesMad Jimmycare

82 Loss: 1.501063585281372
sjbytesMad Jimmycare

optimized
83 Loss: 1.4098455905914307
sjbytesxmlns Jimmycare

optimized
84 Loss: 1.3091099262237549
sjbytesxmlns Robertocare

85 Loss: 1.3091099262237549
sjbytesxmlns Robertocare

5
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 15091, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 8550, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 306, 7091, 867, 431, 1609, 925, 3063, 472, 902, 29889, 29871, 306, 1073, 825, 1260, 16343, 29915, 29879, 25448, 298, 711, 1609, 338, 29892, 376, 476, 1508, 1497, 411, 263, 281, 17840, 867, 262, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 1260, 16343, 756, 263, 25448, 298, 711, 1609, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 15091, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 8550, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 259, 1205, 372, 471, 278, 2712, 393, 591, 3282, 29915, 29873, 5193, 1048, 393, 6140, 1556, 2198, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 12538, 6140, 1556, 2198, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 15091, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 8550, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 259, 319, 14002, 611, 3955, 2665, 714, 491, 278, 410, 9340, 310, 22206, 29871, 29953, 29900, 29892, 607, 723, 1996, 2148, 290, 671, 297, 16157, 12298, 29892, 322, 22206, 29871, 29953, 29896, 29892, 607, 1074, 2039, 304, 5224, 15721, 26094, 363, 2106, 946, 15942, 29892, 947, 451, 5065, 479, 9014, 414, 304, 11719, 363, 1716, 15366, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 410, 9340, 310, 22206, 29871, 29953, 29900, 11719, 363, 2106, 946, 15942, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 7099, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 15091, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 8550, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 1522, 29874, 402, 25644, 29892, 5039, 391, 363, 278, 3632, 6393, 29892, 26767, 29892, 22559, 319, 6114, 1058, 750, 1063, 411, 590, 4595, 862, 1237, 363, 2440, 2996, 304, 1371, 714, 411, 1749, 8753, 22394, 17803, 29889, 1094, 1183, 8988, 278, 7013, 1989, 304, 278, 270, 2827, 1591, 29892, 372, 8379, 11480, 278, 11904, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 270, 2827, 1591, 471, 451, 373, 278, 11904, 1434, 3179, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[23949], [23949], [21104], [21104]]
Initial Loss: 5.097498893737793
start ij pos optimization
4 Loss: 5.097498893737793
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencedones the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent diciment, contradiction or neutral.


5 Loss: 5.097498893737793
subscribebisdec This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencedones the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent diciment, contradiction or neutral.


optimized
6 Loss: 5.050036430358887
subscribebisrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentencedones the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent diciment, contradiction or neutral.


optimized
48 Loss: 4.989580154418945
subscribebisrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence calculuss the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent diciment, contradiction or neutral.


62 Loss: 4.989580154418945
subscribebisrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence calculuss the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent diciment, contradiction or neutral.


optimized
69 Loss: 4.956447601318359
subscribebisrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence calculuss the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Counment, contradiction or neutral.


Initial VF Loss: 1.3729923963546753
start vf pos optimization
81 Loss: 1.3729923963546753
sjbytesxmlns Robertocare

optimized
82 Loss: 1.3546347618103027
sjbinaryxmlns Robertocare

83 Loss: 1.3546347618103027
sjbinaryxmlns Robertocare

optimized
84 Loss: 1.3322703838348389
sjbinaryxmlns YouTubecare

optimized
85 Loss: 1.323170781135559
sjbinaryxmlns YouTubetool

6
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 19496, 18809, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 24282, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 6237, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 1383, 5114, 310, 278, 2246, 29871, 29906, 29953, 27144, 14582, 505, 3595, 1009, 10961, 29879, 14074, 385, 6588, 29871, 29946, 29929, 29889, 29941, 29995, 310, 1009, 995, 515, 1009, 9939, 3291, 975, 278, 4940, 29871, 29945, 29906, 11405, 29889, 2193, 29915, 29879, 1063, 385, 1584, 4023, 845, 261, 8206, 1627, 1135, 278, 29871, 29946, 29953, 29889, 29945, 29995, 4845, 457, 310, 278, 10117, 669, 3929, 272, 29915, 29879, 29871, 29945, 29900, 29900, 515, 967, 29871, 29945, 29906, 29899, 18448, 1880, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 29871, 29946, 29953, 29889, 29945, 29995, 4845, 457, 310, 278, 10117, 669, 3929, 272, 29915, 29879, 29871, 29945, 29900, 29900, 515, 967, 29871, 29945, 29906, 29899, 18448, 1880, 338, 263, 8206, 1627, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 24282, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 6237, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 512, 263, 2846, 4251, 29892, 22069, 1795, 1603, 2693, 1906, 10267, 2129, 297, 5434, 29892, 541, 393, 471, 2215, 515, 3058, 29889, 1126, 29892, 9432, 292, 278, 22576, 322, 15220, 1747, 8004, 310, 25348, 29892, 697, 5478, 362, 393, 471, 8967, 1250, 304, 263, 16500, 9007, 29915, 29873, 1162, 605, 2164, 322, 9007, 29915, 29873, 5545, 263, 12045, 7329, 491, 278, 1095, 310, 278, 6559, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 5478, 271, 362, 750, 9251, 1063, 770, 2164, 408, 263, 12045, 7329, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 24282, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 6237, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 376, 12024, 278, 2217, 4344, 2041, 304, 592, 1699, 2714, 13859, 332, 29892, 14051, 10549, 902, 6567, 975, 902, 748, 852, 29888, 793, 17143, 10188, 29889, 376, 8439, 338, 263, 7968, 2278, 1135, 306, 1699, 322, 13859, 332, 1235, 8735, 20365, 1623, 11480, 278, 23952, 882, 2748, 901, 29892, 304, 9712, 545, 11183, 278, 6586, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 13859, 332, 338, 263, 2278, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 18809, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 24282, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 6237, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 1205, 306, 29915, 645, 367, 15993, 411, 366, 29889, 7569, 931, 366, 7845, 1623, 472, 4646, 322, 366, 6505, 278, 9763, 29892, 322, 366, 1074, 901, 322, 901, 23921, 680, 18523, 2596, 2599, 278, 1021, 2655, 29892, 322, 366, 1016, 29915, 29873, 4997, 746, 278, 1261, 542, 336, 2478, 310, 278, 3186, 526, 2675, 304, 5110, 393, 15115, 338, 15115, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 1261, 542, 336, 2478, 310, 278, 3186, 526, 2675, 304, 5110, 393, 15115, 338, 15115, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[23949], [875, 737, 358], [23949], [21104]]
Initial Loss: 5.624562740325928
start ij pos optimization
4 Loss: 5.624562740325928
subscribebisrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence calculuss the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Counment, contradiction or neutral.


optimized
5 Loss: 5.50446891784668
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence calculuss the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Counment, contradiction or neutral.


6 Loss: 5.50446891784668
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence calculuss the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Counment, contradiction or neutral.


optimized
48 Loss: 5.357883930206299
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Processs the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Counment, contradiction or neutral.


62 Loss: 5.357883930206299
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Processs the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Counment, contradiction or neutral.


optimized
69 Loss: 5.200809955596924
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Processs the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Specment, contradiction or neutral.


Initial VF Loss: 2.3456015586853027
start vf pos optimization
optimized
81 Loss: 2.182133436203003
srbinaryxmlns YouTubetool

optimized
82 Loss: 2.0474600791931152
srScrollViewxmlns YouTubetool

optimized
83 Loss: 1.8679555654525757
srScrollViewitemize YouTubetool

optimized
84 Loss: 1.684059977531433
srScrollViewitemize Sytool

optimized
85 Loss: 1.5182191133499146
srScrollViewitemize Symo

7
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 10554, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 12048, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 306, 505, 263, 2217, 2655, 363, 902, 29889, 402, 5607, 29928, 306, 1016, 29915, 29873, 1073, 920, 366, 508, 3013, 278, 1510, 373, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 887, 508, 3013, 278, 7684, 297, 777, 982, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 10554, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 12048, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 826, 1173, 19915, 306, 5267, 1939, 295, 379, 2017, 15010, 278, 1021, 15997, 1250, 297, 278, 4688, 29915, 29871, 29929, 29900, 29879, 29892, 746, 540, 443, 11911, 287, 373, 1528, 1562, 446, 7935, 825, 540, 2000, 263, 10466, 664, 19032, 29892, 3704, 22370, 310, 263, 7618, 15520, 322, 10757, 310, 11915, 22899, 29889, 20315, 6475, 3461, 393, 3650, 24039, 402, 550, 29892, 263, 1539, 497, 2007, 391, 29892, 322, 916, 9638, 2879, 731, 701, 18296, 472, 278, 3268, 2645, 278, 937, 390, 744, 1141, 29899, 1028, 787, 4395, 24431, 304, 278, 4038, 29892, 297, 29871, 29896, 29945, 29947, 29945, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 3650, 24039, 402, 550, 29892, 263, 1539, 497, 2007, 391, 29892, 322, 916, 9638, 2879, 731, 15839, 6475, 472, 278, 3268, 2645, 278, 937, 390, 744, 1141, 29899, 1028, 787, 4395, 24431, 304, 278, 4038, 29892, 297, 29871, 29896, 29945, 29947, 29945, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 10554, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 12048, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 9300, 29901, 1724, 437, 366, 2099, 29973, 17852, 13896, 1501, 29901, 4088, 6498, 3282, 29915, 29873, 762, 22600, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 4088, 6498, 471, 7123, 1434, 22600, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 10554, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 12048, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 18512, 1183, 2996, 1492, 515, 278, 731, 29892, 1603, 1652, 15392, 29892, 380, 18159, 310, 7916, 29892, 297, 3273, 29879, 322, 263, 8870, 357, 2246, 29892, 322, 1183, 4934, 670, 1361, 2745, 670, 28965, 5192, 5232, 287, 304, 263, 4943, 27725, 29889, 940, 3282, 29915, 29873, 763, 372, 29892, 670, 1236, 1416, 964, 902, 3186, 29936, 372, 885, 1965, 278, 23927, 714, 310, 1075, 29889, 940, 6363, 920, 1183, 1258, 372, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 2296, 1258, 372, 10431, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[23949], [875, 737, 358], [875, 737, 358], [875, 737, 358]]
Initial Loss: 3.9338619709014893
start ij pos optimization
4 Loss: 3.9338619709014893
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Processs the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Specment, contradiction or neutral.


5 Loss: 3.9338619709014893
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Processs the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Specment, contradiction or neutral.


6 Loss: 3.9338619709014893
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Processs the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Specment, contradiction or neutral.


optimized
48 Loss: 3.8638243675231934
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Norms the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Specment, contradiction or neutral.


62 Loss: 3.8638243675231934
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Norms the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent Specment, contradiction or neutral.


optimized
69 Loss: 3.764673948287964
subscribe defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Norms the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent gatherment, contradiction or neutral.


Initial VF Loss: 1.5637747049331665
start vf pos optimization
optimized
81 Loss: 1.541623830795288
SecretScrollViewitemize Symo

82 Loss: 1.541623830795288
SecretScrollViewitemize Symo

83 Loss: 1.541623830795288
SecretScrollViewitemize Symo

optimized
84 Loss: 1.5240064859390259
SecretScrollViewitemize Synmo

optimized
85 Loss: 1.4683268070220947
SecretScrollViewitemize Synistema

8
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 5655, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 11705, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 18512, 29892, 763, 372, 470, 451, 29892, 306, 12561, 306, 626, 17319, 411, 278, 1858, 3437, 322, 8471, 297, 393, 1560, 554, 29891, 2217, 298, 329, 411, 278, 2030, 6114, 29889, 13035, 1126, 297, 590, 12561, 306, 1016, 29915, 29873, 1284, 393, 306, 626, 1407, 7404, 1319, 29892, 443, 509, 504, 292, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 306, 626, 1407, 7404, 1319, 29892, 443, 509, 504, 292, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 5655, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 11705, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 498, 13163, 29899, 17536, 8041, 6423, 1434, 278, 14280, 6153, 373, 29889, 278, 8805, 29879, 7146, 16317, 666, 630, 472, 29871, 29946, 29901, 29941, 29900, 349, 29889, 29924, 29889, 2860, 10107, 3262, 701, 4203, 310, 1588, 3742, 20666, 29892, 278, 8805, 29879, 7146, 16317, 666, 630, 472, 29871, 29946, 29901, 29941, 29900, 349, 29889, 29924, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 8041, 10107, 2986, 701, 4203, 310, 1588, 3742, 20666, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 5655, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 11705, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 259, 512, 29871, 29896, 29929, 29955, 29945, 29892, 3938, 562, 1698, 3282, 29915, 29873, 3380, 2706, 292, 330, 374, 5617, 368, 367, 1503, 29892, 17231, 372, 723, 1371, 1075, 5644, 328, 278, 367, 1503, 29915, 1206, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 3938, 562, 1698, 3282, 29915, 29873, 2706, 330, 374, 5617, 368, 367, 1503, 1434, 29871, 29896, 29929, 29955, 29945, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 19496, 21274, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 5655, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 11705, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 20700, 17011, 1430, 29901, 450, 16855, 1540, 29915, 29879, 5828, 338, 451, 5412, 29889, 405, 457, 14218, 15055, 3282, 29915, 29873, 5040, 27256, 297, 29871, 29896, 29929, 29929, 29896, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 405, 457, 14218, 15055, 750, 1063, 27256, 7536, 304, 29871, 29896, 29929, 29929, 29896, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[21104], [23949], [875, 737, 358], [875, 737, 358]]
Initial Loss: 6.366491317749023
start ij pos optimization
optimized
4 Loss: 6.2128167152404785
invoke defaultsrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Norms the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent gatherment, contradiction or neutral.


optimized
5 Loss: 4.9556121826171875
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Norms the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent gatherment, contradiction or neutral.


6 Loss: 4.9556121826171875
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Norms the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent gatherment, contradiction or neutral.


optimized
48 Loss: 4.932631969451904
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent gatherment, contradiction or neutral.


62 Loss: 4.932631969451904
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent gatherment, contradiction or neutral.


optimized
69 Loss: 4.864703178405762
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent ACment, contradiction or neutral.


Initial VF Loss: 1.74322509765625
start vf pos optimization
optimized
81 Loss: 1.571184754371643
fragmentScrollViewitemize Synistema

optimized
82 Loss: 1.4755067825317383
fragment recursionitemize Synistema

optimized
83 Loss: 1.3299592733383179
fragment recursionallowed Synistema

optimized
84 Loss: 1.2031084299087524
fragment recursionallowed Choistema

optimized
85 Loss: 1.16427743434906
fragment recursionallowed Choystem

9
[4, 5, 6, 48, 62, 69] [81, 82, 83, 84, 85]
[[1, 2184, 29901, 29871, 15928, 17868, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 6189, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 14614, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 306, 471, 22822, 701, 746, 306, 471, 29871, 29906, 29900, 2440, 2030, 489, 5143, 6077, 29871, 29906, 29900, 2440, 2030, 29892, 322, 306, 29915, 29885, 29871, 29946, 29906, 1286, 29889, 1105, 306, 29915, 345, 1063, 297, 263, 2217, 975, 29871, 29906, 29906, 2440, 29892, 7602, 18186, 363, 1153, 412, 322, 2665, 9223, 304, 1023, 2834, 25260, 29889, 306, 2274, 920, 306, 471, 1584, 6296, 304, 8973, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 306, 471, 2665, 9223, 304, 8973, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15928, 17868, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 6189, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 14614, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 450, 678, 392, 3100, 15496, 649, 29879, 1058, 526, 14040, 363, 278, 1616, 1319, 3447, 270, 466, 1537, 11687, 15937, 403, 1350, 2701, 505, 2825, 263, 269, 2883, 8802, 1560, 990, 294, 29890, 536, 310, 10977, 274, 13910, 29889, 450, 1350, 2701, 29892, 270, 1218, 1250, 304, 29871, 29929, 29945, 29900, 29892, 526, 451, 263, 901, 21210, 573, 322, 9358, 293, 11126, 1135, 278, 13834, 323, 1175, 10082, 284, 29892, 607, 269, 1169, 263, 7303, 310, 6893, 20052, 2699, 304, 278, 6641, 5933, 297, 319, 3874, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 13834, 323, 1175, 10082, 284, 338, 21210, 573, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15928, 17868, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 6189, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 14614, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 1522, 29874, 402, 25644, 29892, 5039, 391, 363, 278, 3632, 6393, 29892, 26767, 29892, 22559, 319, 6114, 1058, 750, 1063, 411, 590, 4595, 862, 1237, 363, 2440, 2996, 304, 1371, 714, 411, 1749, 8753, 22394, 17803, 29889, 1094, 1183, 8988, 278, 7013, 1989, 304, 278, 270, 2827, 1591, 29892, 372, 8379, 11480, 278, 11904, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 450, 270, 2827, 1591, 471, 451, 373, 278, 11904, 1434, 3179, 29889, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15928, 17868, 15291, 910, 338, 263, 5613, 4086, 27262, 3414, 29889, 1670, 526, 1023, 25260, 297, 4223, 29889, 450, 1234, 338, 376, 296, 737, 358, 29908, 565, 278, 937, 10541, 875, 2234, 278, 1473, 29892, 376, 9996, 328, 2463, 29908, 565, 278, 1473, 10541, 6189, 29879, 278, 937, 29892, 322, 376, 17821, 1705, 29908, 565, 9561, 338, 310, 15618, 1023, 4251, 8640, 29889, 10604, 875, 14614, 358, 29892, 23949, 470, 21104, 29889, 13, 29871, 10567, 29901, 29871, 28048, 663, 29871, 29896, 29901, 29871, 512, 2114, 29892, 540, 750, 1497, 29901, 450, 18400, 267, 363, 5866, 526, 1603, 17878, 491, 1784, 2305, 408, 2428, 25044, 1907, 29889, 525, 940, 769, 24825, 304, 22941, 929, 14877, 272, 5794, 411, 393, 1776, 29889, 29871, 13, 29903, 296, 663, 29871, 29906, 29901, 940, 27222, 29915, 29873, 9251, 1063, 22941, 929, 292, 411, 393, 1776, 13, 13, 1576, 1234, 338, 29901, 29871, 29871, 10604, 29901, 29871]] [[21104], [875, 737, 358], [875, 737, 358], [21104]]
Initial Loss: 4.6546630859375
start ij pos optimization
4 Loss: 4.6546630859375
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent ACment, contradiction or neutral.


5 Loss: 4.6546630859375
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent ACment, contradiction or neutral.


6 Loss: 4.6546630859375
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent ACment, contradiction or neutral.


48 Loss: 4.6546630859375
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is ofdisplaystyle two cases holds. Output ent ACment, contradiction or neutral.


optimized
62 Loss: 4.649082183837891
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is of Rico two cases holds. Output ent ACment, contradiction or neutral.


optimized
69 Loss: 4.639095306396484
invokestmtrv This is a natural language inference task. There are two sentences in English. The answer is "entailment" if the first sentence entails the second, "contradiction" if the second sentence Machines the first, and "neutral" if neither is of Rico two cases holds. Output ent GETment, contradiction or neutral.


Initial VF Loss: 1.1633151769638062
start vf pos optimization
optimized
81 Loss: 1.1047204732894897
delimiter recursionallowed Choystem

82 Loss: 1.1047204732894897
delimiter recursionallowed Choystem

83 Loss: 1.1047204732894897
delimiter recursionallowed Choystem

optimized
84 Loss: 1.0773186683654785
delimiter recursionallowed Creatingystem

optimized
85 Loss: 1.0576797723770142
delimiter recursionallowed Creating familia

**********causal_judgment**********
0
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 1128, 723, 263, 15662, 2022, 1234, 1269, 310, 278, 1494, 5155, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 6242, 8020, 29892, 746, 2259, 471, 871, 29871, 29896, 29955, 2440, 2030, 29892, 540, 2355, 263, 4982, 1985, 363, 263, 2919, 12012, 3864, 5001, 29889, 940, 4687, 714, 1985, 373, 385, 11470, 1196, 363, 9212, 281, 482, 29892, 541, 1156, 263, 2846, 2440, 472, 278, 5001, 29892, 540, 471, 2183, 263, 7348, 1546, 1023, 1196, 8455, 11909, 29889, 940, 1033, 7952, 297, 278, 8112, 1287, 8542, 29892, 607, 338, 988, 540, 471, 5279, 1985, 29889, 1394, 540, 1033, 4337, 304, 278, 715, 579, 1199, 8542, 29889, 2259, 471, 9644, 545, 825, 304, 437, 1363, 540, 23289, 1985, 297, 278, 8112, 1287, 8542, 29892, 541, 540, 884, 2714, 372, 1795, 367, 7088, 1811, 1554, 1422, 29889, 940, 7146, 8459, 304, 4607, 304, 278, 715, 579, 1199, 8542, 322, 1018, 1554, 716, 29889, 1152, 278, 1833, 29871, 29941, 29900, 2440, 29892, 2259, 756, 3796, 408, 263, 5802, 1196, 2428, 19188, 297, 278, 715, 579, 1199, 8542, 29889, 2860, 278, 937, 1629, 727, 29892, 278, 715, 579, 1199, 8542, 471, 6153, 304, 263, 1422, 5214, 411, 901, 2913, 29889, 11511, 29892, 1549, 278, 1784, 2440, 540, 3796, 727, 29892, 2259, 471, 19884, 304, 408, 13318, 359, 29892, 263, 10712, 1559, 16381, 6352, 293, 5960, 749, 29889, 7849, 310, 278, 715, 579, 1199, 8542, 471, 3755, 9109, 29892, 541, 278, 2319, 760, 297, 607, 2259, 3796, 471, 19884, 304, 408, 13318, 359, 18755, 414, 29889, 1126, 1286, 29892, 5998, 2259, 756, 2360, 1560, 12504, 263, 29507, 10474, 371, 297, 670, 2834, 322, 6467, 12080, 263, 9045, 29891, 301, 7004, 1508, 29892, 540, 756, 263, 10712, 6728, 287, 322, 297, 2764, 519, 1206, 310, 13030, 23900, 472, 278, 5046, 310, 29871, 29945, 29900, 29889, 2259, 750, 3595, 2211, 23900, 4266, 2879, 29892, 599, 310, 6029, 16725, 278, 17322, 29901, 393, 29892, 5174, 363, 6788, 29892, 2259, 29915, 29879, 23900, 471, 443, 2484, 17219, 322, 540, 471, 13312, 3058, 304, 762, 515, 372, 1407, 4720, 313, 1552, 437, 14359, 15899, 694, 901, 1135, 29871, 29906, 7378, 467, 612, 18358, 29892, 1550, 2259, 471, 297, 278, 13457, 363, 263, 26529, 16083, 28573, 29892, 263, 716, 5595, 344, 11423, 635, 4113, 1531, 287, 278, 2743, 13589, 362, 304, 1075, 29889, 2259, 471, 599, 15064, 293, 304, 278, 15721, 322, 540, 7389, 3512, 964, 19253, 322, 18860, 5881, 13544, 22564, 313, 29874, 5192, 5337, 467, 1938, 14359, 16388, 304, 620, 22142, 10388, 1075, 541, 540, 6423, 6233, 1156, 278, 13589, 362, 471, 4113, 1531, 287, 29889, 7440, 278, 5595, 344, 29915, 29879, 2562, 2222, 2264, 4556, 2259, 29915, 29879, 5188, 1535, 4892, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 1128, 723, 263, 15662, 2022, 1234, 1269, 310, 278, 1494, 5155, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 7561, 29881, 29892, 10558, 29892, 21776, 29892, 322, 27265, 599, 6232, 385, 3633, 363, 263, 5972, 7395, 11456, 24820, 2669, 29889, 512, 6124, 304, 12515, 278, 3633, 21003, 13817, 297, 373, 1009, 5648, 29892, 896, 884, 671, 278, 1021, 3633, 373, 1009, 425, 415, 3554, 29889, 7311, 278, 13113, 310, 445, 24820, 2669, 10753, 304, 7910, 278, 5253, 310, 6136, 15303, 297, 1797, 304, 7910, 2600, 1169, 29892, 896, 505, 23580, 304, 11819, 278, 1353, 310, 9224, 773, 263, 2323, 3633, 472, 2748, 29889, 11221, 393, 278, 3633, 338, 2337, 13817, 297, 373, 1009, 5648, 29892, 278, 24820, 2669, 674, 8872, 355, 1009, 3633, 565, 2211, 2305, 1480, 964, 278, 3633, 515, 1009, 425, 415, 3554, 472, 278, 1021, 931, 29889, 10558, 25704, 3913, 1009, 3633, 515, 902, 19022, 373, 317, 1337, 16700, 29889, 7561, 29881, 29892, 3138, 29892, 12891, 1838, 29915, 29873, 6505, 5648, 472, 599, 373, 278, 4723, 1975, 29889, 910, 24211, 29892, 15668, 368, 29892, 7561, 29881, 13817, 964, 1009, 3633, 515, 670, 19022, 304, 6505, 5648, 29889, 3387, 769, 29892, 10558, 884, 13817, 964, 1009, 3633, 515, 902, 19022, 29892, 322, 21776, 884, 13817, 964, 1009, 3633, 515, 670, 19022, 304, 6505, 5648, 29889, 18585, 3307, 29892, 1951, 2211, 2305, 13817, 964, 278, 24820, 3633, 472, 278, 1021, 931, 29892, 278, 3633, 471, 8872, 2760, 29889, 7440, 7561, 29881, 12183, 964, 278, 24820, 3633, 515, 670, 19022, 4556, 278, 3633, 304, 367, 8872, 2760, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 1128, 723, 263, 15662, 2022, 1234, 1269, 310, 278, 1494, 5155, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 530, 2836, 338, 5622, 2562, 310, 263, 16500, 297, 263, 13457, 29889, 450, 2836, 451, 1575, 393, 278, 16500, 338, 2534, 777, 26397, 3801, 4828, 29889, 3599, 2705, 29892, 278, 2836, 1303, 263, 3652, 310, 11898, 1048, 263, 716, 15721, 393, 508, 4788, 1403, 403, 4828, 763, 445, 697, 29892, 322, 540, 1602, 2247, 304, 4113, 1531, 278, 15721, 297, 445, 1206, 29889, 10949, 278, 2836, 508, 4113, 1531, 278, 15721, 29892, 540, 4225, 304, 679, 278, 12608, 310, 278, 1374, 2817, 562, 391, 313, 517, 9659, 393, 278, 13457, 756, 3307, 297, 10961, 29897, 322, 278, 12608, 310, 278, 1098, 2548, 11619, 313, 517, 9659, 393, 278, 15721, 338, 8210, 363, 445, 16500, 467, 1105, 540, 16003, 1283, 7274, 304, 1716, 278, 1374, 2817, 562, 391, 322, 278, 1098, 2548, 11619, 29889, 450, 1374, 2817, 562, 391, 20586, 278, 2009, 29892, 12747, 304, 1074, 393, 896, 505, 3307, 297, 10961, 29892, 322, 7389, 18906, 1283, 29889, 450, 1098, 2548, 11619, 20586, 278, 2009, 472, 278, 1021, 931, 322, 7389, 1855, 7093, 393, 727, 526, 4549, 9590, 304, 26506, 29889, 8512, 777, 11898, 1510, 393, 278, 15721, 508, 1371, 2305, 411, 26397, 3801, 4828, 29892, 727, 526, 884, 263, 1353, 310, 11898, 6445, 393, 278, 15721, 508, 505, 1407, 18215, 2625, 9545, 29889, 1152, 445, 2769, 29892, 278, 13457, 756, 263, 8898, 19752, 2205, 292, 278, 671, 310, 445, 15721, 363, 26397, 3801, 4828, 29889, 19454, 445, 8898, 29892, 278, 11619, 1602, 2247, 304, 1804, 1283, 29889, 4001, 1716, 1804, 3698, 892, 4520, 29892, 278, 16500, 338, 4113, 1531, 287, 278, 15721, 29889, 1094, 372, 5930, 29892, 278, 16500, 7389, 337, 1111, 874, 29892, 322, 278, 15721, 756, 694, 594, 3901, 9545, 29889, 7440, 278, 1374, 2817, 562, 391, 29915, 29879, 10608, 4556, 278, 16500, 29915, 29879, 24205, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 1128, 723, 263, 15662, 2022, 1234, 1269, 310, 278, 1494, 5155, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 435, 1296, 553, 546, 2486, 10753, 304, 505, 901, 6909, 29889, 940, 9906, 393, 540, 674, 13125, 263, 3287, 310, 6909, 746, 670, 263, 1657, 2977, 29889, 3118, 2462, 29892, 540, 18553, 670, 263, 1657, 22049, 491, 278, 3474, 29889, 940, 1153, 4637, 670, 17018, 280, 29892, 4947, 902, 297, 278, 269, 5861, 29892, 322, 3965, 267, 278, 7135, 29889, 435, 1296, 338, 385, 17924, 17997, 1171, 29889, 3600, 6567, 526, 27357, 29889, 450, 13736, 338, 12242, 287, 7970, 29889, 450, 24334, 19572, 902, 4153, 297, 278, 5192, 29889, 2296, 2977, 26232, 29889, 7440, 435, 1296, 15049, 670, 263, 1657, 297, 278, 5192, 16392, 635, 29973, 29871, 10604, 29901, 29871]] [[3869], [3869], [1939], [1939]]
Initial Loss: 15.437204360961914
start ij pos optimization
optimized
4 Loss: 12.157999038696289
citep sechsVor How would a typical person answer each of the following questions about causation? Output Yes or No. 


optimized
5 Loss: 7.7862443923950195
citep uzVor How would a typical person answer each of the following questions about causation? Output Yes or No. 


optimized
6 Loss: 7.76197624206543
citep uz parad How would a typical person answer each of the following questions about causation? Output Yes or No. 


optimized
8 Loss: 7.633721828460693
citep uz parad Howfrac a typical person answer each of the following questions about causation? Output Yes or No. 


optimized
15 Loss: 7.567495346069336
citep uz parad Howfrac a typical person answer each of push following questions about causation? Output Yes or No. 


optimized
17 Loss: 7.564715385437012
citep uz parad Howfrac a typical person answer each of push followingNSString about causation? Output Yes or No. 


Initial VF Loss: 5.66697883605957
start vf pos optimization
optimized
33 Loss: 5.520736217498779
journalistdefinedLprev西

optimized
34 Loss: 5.339432239532471
journalist archiveLprev西

optimized
35 Loss: 5.276070594787598
journalist archive sobreprev西

optimized
36 Loss: 5.082901477813721
journalist archive sobrepkg西

optimized
37 Loss: 5.065853118896484
journalist archive sobrepkgLOC

1
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 10001, 27296, 26811, 1128, 1154, 263, 15662, 2022, 1234, 1269, 310, 5503, 1494, 14301, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 450, 14645, 29949, 310, 263, 5001, 338, 16246, 297, 670, 8034, 746, 670, 21400, 7178, 310, 390, 29987, 29928, 5304, 297, 322, 4083, 29892, 525, 4806, 526, 7291, 310, 6257, 263, 716, 19607, 29889, 739, 674, 1371, 502, 7910, 2600, 1169, 29892, 541, 372, 674, 884, 10311, 278, 5177, 6169, 450, 14645, 29949, 10049, 29879, 393, 540, 1838, 29915, 29873, 2562, 1048, 10311, 292, 278, 5177, 322, 925, 10753, 304, 1207, 408, 1568, 21665, 408, 1950, 29889, 450, 19607, 338, 8988, 714, 29892, 2600, 1169, 526, 1754, 322, 278, 5177, 338, 4023, 2168, 29889, 7440, 278, 14645, 29949, 16392, 635, 10311, 278, 5177, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10001, 27296, 26811, 1128, 1154, 263, 15662, 2022, 1234, 1269, 310, 5503, 1494, 14301, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 1954, 22094, 393, 727, 338, 263, 767, 714, 297, 278, 25013, 1058, 338, 5221, 1218, 297, 263, 29826, 13888, 29889, 2860, 805, 2548, 6199, 10534, 363, 263, 316, 261, 304, 4891, 670, 2224, 29892, 278, 298, 8428, 11584, 18553, 278, 10150, 316, 261, 540, 756, 3926, 3595, 29889, 960, 540, 508, 871, 12088, 445, 316, 261, 29892, 540, 674, 18880, 5401, 278, 13888, 29889, 1105, 29892, 278, 298, 8428, 4947, 278, 316, 261, 297, 670, 269, 5861, 1192, 541, 472, 278, 1833, 1473, 29892, 540, 451, 1575, 393, 727, 338, 263, 2318, 310, 11199, 29899, 12344, 414, 925, 373, 278, 916, 2625, 310, 278, 316, 261, 29889, 450, 298, 8428, 1855, 7093, 393, 565, 540, 17394, 1862, 278, 316, 261, 29892, 278, 24334, 1033, 10075, 7124, 697, 310, 278, 11199, 12344, 414, 408, 1532, 29889, 1205, 540, 947, 451, 2562, 472, 599, 1048, 278, 11199, 6505, 414, 1192, 540, 925, 10753, 304, 5401, 278, 13888, 29889, 1105, 29892, 540, 17394, 1862, 322, 413, 6090, 278, 316, 261, 29889, 1126, 408, 3806, 29892, 278, 24334, 10614, 701, 29425, 697, 310, 278, 11199, 29899, 12344, 414, 408, 1532, 29889, 7440, 278, 767, 16392, 635, 15049, 278, 11199, 29899, 12344, 261, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10001, 27296, 26811, 1128, 1154, 263, 15662, 2022, 1234, 1269, 310, 5503, 1494, 14301, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 8507, 29892, 8562, 29892, 7991, 29892, 322, 24190, 526, 5925, 414, 297, 263, 7592, 4038, 29892, 322, 896, 505, 263, 9078, 11421, 310, 12646, 537, 29889, 7311, 310, 1009, 9078, 11421, 29892, 278, 12646, 537, 871, 5304, 373, 297, 278, 1584, 886, 515, 29871, 29947, 29899, 29929, 11278, 29892, 322, 896, 505, 304, 9250, 1058, 508, 671, 3081, 373, 3058, 3841, 29889, 960, 3023, 2305, 2507, 373, 1009, 301, 15092, 472, 278, 1021, 931, 29892, 278, 2867, 261, 674, 4418, 29889, 450, 2867, 261, 674, 451, 4418, 565, 28145, 2305, 2507, 373, 1009, 301, 15092, 472, 278, 1021, 931, 29889, 8507, 29892, 8562, 29892, 7991, 29892, 322, 24190, 526, 599, 6068, 304, 671, 1009, 301, 15092, 373, 498, 1295, 16700, 29889, 910, 498, 1295, 3250, 8507, 12169, 373, 670, 28692, 472, 29871, 29947, 11278, 29889, 3387, 769, 8562, 12169, 373, 902, 28692, 29892, 7991, 884, 12169, 373, 670, 28692, 29892, 322, 24190, 12169, 373, 902, 28692, 29889, 4001, 3023, 2305, 6077, 373, 1009, 301, 15092, 472, 278, 1021, 931, 29892, 278, 11369, 2867, 261, 5229, 29889, 7440, 8507, 14712, 373, 670, 28692, 472, 29871, 29947, 11278, 4556, 278, 11369, 2867, 261, 304, 4418, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 10001, 27296, 26811, 1128, 1154, 263, 15662, 2022, 1234, 1269, 310, 5503, 1494, 14301, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 18299, 322, 2166, 1537, 664, 363, 263, 5001, 393, 756, 263, 6555, 6601, 29889, 960, 1023, 2305, 1480, 297, 304, 278, 6555, 6601, 472, 3721, 29871, 29929, 29901, 29906, 29955, 626, 29892, 777, 664, 24609, 674, 367, 7389, 11132, 29889, 512, 1797, 304, 1207, 1854, 393, 1023, 2305, 526, 3625, 304, 1234, 9008, 5717, 2645, 25373, 5432, 6199, 29892, 278, 5001, 16610, 278, 1494, 6221, 8898, 29901, 18299, 322, 2166, 1537, 526, 1716, 21905, 304, 1480, 297, 304, 278, 6555, 6601, 297, 278, 286, 1398, 886, 29892, 322, 9561, 310, 963, 526, 21905, 304, 1480, 297, 304, 278, 6555, 6601, 297, 278, 2511, 725, 29877, 787, 29889, 910, 7250, 472, 3721, 29871, 29929, 29901, 29906, 29955, 626, 29892, 18299, 322, 2166, 1537, 1716, 1480, 964, 278, 6555, 6601, 472, 278, 1021, 931, 29889, 1954, 4210, 2486, 29892, 777, 664, 24609, 526, 11132, 29889, 7440, 18299, 4556, 278, 24609, 304, 367, 11132, 29973, 29871, 10604, 29901, 29871]] [[1939], [3869], [3869], [3869]]
Initial Loss: 10.152554512023926
start ij pos optimization
optimized
4 Loss: 9.667342185974121
allen uz parad Howfrac a typical person answer each of push followingNSString about causation? Output Yes or No. 


optimized
5 Loss: 7.689889907836914
allen mask parad Howfrac a typical person answer each of push followingNSString about causation? Output Yes or No. 


optimized
6 Loss: 6.615950584411621
allen mask neur Howfrac a typical person answer each of push followingNSString about causation? Output Yes or No. 


optimized
8 Loss: 6.53129768371582
allen mask neur Howstadt a typical person answer each of push followingNSString about causation? Output Yes or No. 


optimized
15 Loss: 6.462270259857178
allen mask neur Howstadt a typical person answer each of foc followingNSString about causation? Output Yes or No. 


optimized
17 Loss: 6.398276329040527
allen mask neur Howstadt a typical person answer each of foc followingwikipedia about causation? Output Yes or No. 


Initial VF Loss: 2.9773170948028564
start vf pos optimization
optimized
33 Loss: 2.228623867034912
canton archive sobrepkgLOC

optimized
34 Loss: 2.128282308578491
canton LCCN sobrepkgLOC

optimized
35 Loss: 1.8600497245788574
canton LCCN wiepkgLOC

optimized
36 Loss: 1.758370041847229
canton LCCN wielakLOC

optimized
37 Loss: 1.6661895513534546
canton LCCN wielakDb

2
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 15832, 11105, 26808, 1128, 9516, 263, 15662, 2022, 1234, 1269, 310, 12789, 1494, 6011, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 16308, 322, 796, 7297, 664, 363, 278, 1021, 5001, 29889, 2688, 664, 297, 1422, 19600, 322, 1716, 310, 963, 6041, 817, 304, 2130, 278, 6555, 6601, 310, 278, 5001, 29889, 853, 915, 5203, 303, 304, 26077, 29892, 565, 1023, 2305, 526, 13817, 297, 304, 278, 6555, 6601, 472, 278, 1021, 931, 29892, 385, 4069, 4876, 338, 7389, 2665, 515, 278, 6555, 6601, 304, 263, 1661, 29899, 735, 9696, 4876, 3211, 29889, 3118, 2462, 29892, 796, 7297, 10748, 297, 304, 278, 6555, 6601, 472, 29871, 29929, 626, 29889, 450, 1021, 2462, 29892, 16308, 10748, 297, 472, 29871, 29929, 29901, 29941, 29900, 626, 29892, 746, 796, 7297, 338, 2307, 13817, 297, 29889, 1954, 4210, 2486, 29892, 385, 4069, 4876, 338, 2665, 515, 278, 6555, 6601, 304, 263, 1661, 29899, 735, 9696, 4876, 3211, 29889, 7440, 796, 7297, 4556, 385, 4069, 4876, 304, 367, 2665, 515, 278, 6555, 6601, 304, 263, 1661, 29899, 735, 9696, 4876, 3211, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15832, 11105, 26808, 1128, 9516, 263, 15662, 2022, 1234, 1269, 310, 12789, 1494, 6011, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 6682, 29915, 29879, 6532, 29892, 28674, 29892, 338, 714, 310, 4726, 363, 278, 4723, 355, 29889, 2296, 11308, 6682, 263, 2643, 393, 4083, 29892, 525, 29902, 925, 4446, 445, 1766, 955, 681, 3143, 355, 29889, 739, 29915, 29879, 2000, 263, 12245, 13650, 3143, 355, 29889, 1105, 5051, 29991, 306, 29915, 29885, 2675, 304, 748, 1250, 6454, 22396, 322, 679, 697, 29889, 739, 674, 367, 4922, 363, 278, 2175, 2625, 310, 1749, 3143, 845, 761, 4286, 6682, 5771, 322, 1998, 1169, 670, 5121, 29889, 6682, 322, 670, 5121, 5193, 363, 263, 1550, 29892, 322, 746, 6682, 19514, 565, 670, 5121, 338, 17762, 304, 19417, 278, 3143, 355, 29892, 670, 5121, 10603, 1075, 372, 29915, 29879, 263, 758, 8802, 540, 381, 417, 290, 322, 540, 508, 29915, 29873, 760, 411, 372, 29889, 6682, 11324, 1169, 2745, 2678, 746, 670, 5121, 338, 297, 278, 27683, 8345, 29892, 322, 20662, 567, 278, 3143, 355, 964, 670, 19548, 29889, 9788, 29892, 6682, 11308, 670, 5121, 29915, 29879, 3699, 411, 278, 380, 18975, 1492, 29899, 2975, 12245, 13650, 3143, 355, 297, 670, 19548, 29889, 1987, 278, 2446, 2462, 29892, 28674, 5771, 322, 1321, 952, 278, 2175, 29899, 2975, 12245, 13650, 3143, 355, 29889, 1105, 29892, 746, 28674, 2355, 3271, 29892, 896, 750, 278, 3300, 2859, 731, 310, 3143, 1975, 29889, 7440, 28674, 4556, 963, 304, 22592, 278, 3300, 2859, 731, 310, 3143, 1975, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15832, 11105, 26808, 1128, 9516, 263, 15662, 2022, 1234, 1269, 310, 12789, 1494, 6011, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 18299, 322, 2166, 1537, 664, 363, 263, 5001, 393, 756, 263, 6555, 6601, 29889, 960, 1023, 2305, 1480, 297, 304, 278, 6555, 6601, 472, 3721, 29871, 29929, 29901, 29906, 29955, 626, 29892, 777, 664, 24609, 674, 367, 7389, 11132, 29889, 512, 1797, 304, 1207, 1854, 393, 697, 2022, 338, 2337, 3625, 304, 1234, 23235, 9008, 5717, 29892, 278, 5001, 16610, 278, 1494, 6221, 8898, 29901, 18299, 338, 278, 871, 697, 21905, 304, 1480, 297, 304, 278, 6555, 6601, 297, 278, 2511, 725, 29877, 787, 29892, 13452, 2166, 1537, 338, 278, 871, 697, 21905, 304, 1480, 297, 304, 278, 6555, 6601, 297, 278, 286, 1398, 886, 29889, 18299, 338, 2360, 21905, 304, 1480, 964, 278, 6555, 6601, 297, 278, 7250, 29889, 910, 7250, 472, 3721, 29871, 29929, 29901, 29906, 29955, 626, 29892, 18299, 322, 2166, 1537, 1716, 1480, 964, 278, 6555, 6601, 472, 278, 1021, 931, 29889, 1954, 4210, 2486, 29892, 777, 664, 24609, 526, 11132, 29889, 7440, 18299, 4556, 278, 24609, 304, 367, 11132, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15832, 11105, 26808, 1128, 9516, 263, 15662, 2022, 1234, 1269, 310, 12789, 1494, 6011, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 2166, 1537, 322, 18299, 526, 1985, 373, 263, 2060, 393, 338, 1407, 4100, 363, 1749, 5233, 29915, 29879, 6993, 29889, 450, 289, 2209, 10603, 963, 1716, 29901, 376, 3629, 1854, 393, 366, 526, 1244, 472, 3721, 29871, 29929, 626, 29889, 739, 338, 13312, 18853, 393, 366, 18331, 472, 393, 931, 1213, 9134, 18299, 322, 2166, 1537, 18331, 472, 29871, 29929, 626, 29889, 1094, 372, 5930, 29892, 727, 471, 263, 10884, 1439, 3019, 5130, 297, 278, 5716, 988, 896, 11977, 29889, 450, 10884, 1439, 3019, 471, 731, 701, 304, 367, 19799, 565, 901, 1135, 697, 2022, 7470, 297, 278, 5716, 472, 278, 1021, 931, 29889, 1105, 278, 10884, 1439, 3019, 3512, 1283, 29889, 7440, 18299, 4556, 278, 10884, 1439, 3019, 304, 748, 1283, 29973, 29871, 10604, 29901, 29871]] [[3869], [1939], [3869], [3869]]
Initial Loss: 7.477982521057129
start ij pos optimization
optimized
4 Loss: 5.631706237792969
ad mask neur Howstadt a typical person answer each of foc followingwikipedia about causation? Output Yes or No. 


5 Loss: 5.631706237792969
ad mask neur Howstadt a typical person answer each of foc followingwikipedia about causation? Output Yes or No. 


optimized
6 Loss: 4.932900428771973
ad mask virus Howstadt a typical person answer each of foc followingwikipedia about causation? Output Yes or No. 


optimized
8 Loss: 4.872519493103027
ad mask virus Hownit a typical person answer each of foc followingwikipedia about causation? Output Yes or No. 


optimized
15 Loss: 4.740192890167236
ad mask virus Hownit a typical person answer each of Wien followingwikipedia about causation? Output Yes or No. 


optimized
17 Loss: 4.655457496643066
ad mask virus Hownit a typical person answer each of Wien following ambigu about causation? Output Yes or No. 


Initial VF Loss: 1.1018000841140747
start vf pos optimization
optimized
33 Loss: 1.00001859664917
Biographie LCCN wielakDb

optimized
34 Loss: 0.8948357105255127
BiographieEditText wielakDb

optimized
35 Loss: 0.8097965121269226
BiographieEditText shouldnlakDb

optimized
36 Loss: 0.7676029801368713
BiographieEditText shouldn stackoverflowDb

optimized
37 Loss: 0.694945752620697
BiographieEditText shouldn stackoverflow null

3
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 26129, 263, 15662, 2022, 1234, 1269, 310, 12899, 1494, 22363, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 28757, 515, 278, 5925, 322, 5849, 14311, 310, 263, 5001, 8967, 304, 278, 7613, 322, 1497, 29892, 376, 4806, 526, 7291, 310, 6257, 263, 716, 1824, 29889, 739, 674, 1371, 502, 7910, 2600, 1169, 29892, 322, 372, 674, 884, 1371, 278, 5177, 1213, 450, 8908, 515, 278, 7613, 471, 29892, 376, 4806, 1016, 29915, 29873, 2562, 472, 599, 1048, 19912, 278, 5177, 29889, 1334, 925, 864, 304, 1207, 408, 1568, 21665, 408, 591, 508, 29889, 2803, 29915, 29879, 1369, 278, 716, 1824, 1213, 18585, 3307, 29892, 278, 1824, 9213, 278, 5177, 29889, 7440, 278, 7613, 16392, 635, 1371, 278, 5177, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 26129, 263, 15662, 2022, 1234, 1269, 310, 12899, 1494, 22363, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4335, 1736, 363, 263, 27745, 654, 5001, 29892, 322, 9826, 540, 338, 27745, 14424, 263, 5214, 491, 13374, 359, 291, 29889, 450, 5214, 674, 13374, 356, 6336, 472, 29871, 29945, 29901, 29900, 29900, 11278, 565, 1716, 278, 15332, 4607, 338, 1283, 322, 889, 711, 319, 338, 26263, 373, 29889, 2180, 29871, 29946, 29901, 29900, 29900, 11278, 29892, 278, 15332, 4607, 338, 1283, 29892, 322, 889, 711, 319, 338, 373, 29889, 2180, 393, 931, 29892, 4335, 12747, 304, 1074, 565, 889, 711, 319, 338, 373, 29892, 322, 540, 18553, 393, 372, 29915, 29879, 373, 29889, 1105, 29892, 540, 947, 451, 1735, 278, 2602, 310, 889, 711, 319, 472, 599, 29889, 7311, 278, 5214, 723, 13374, 356, 565, 1716, 278, 15332, 4607, 338, 1283, 322, 889, 711, 319, 338, 26263, 373, 29892, 278, 5214, 13374, 2631, 472, 29871, 29945, 29901, 29900, 29900, 11278, 29889, 7440, 278, 5214, 13374, 356, 1363, 4335, 1258, 451, 1735, 278, 2602, 310, 889, 711, 319, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 26129, 263, 15662, 2022, 1234, 1269, 310, 12899, 1494, 22363, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 1954, 22094, 393, 727, 338, 263, 767, 714, 297, 278, 25013, 1058, 338, 5221, 1218, 297, 263, 29826, 13888, 29889, 2860, 805, 2548, 6199, 10534, 363, 263, 316, 261, 304, 4891, 670, 2224, 29892, 278, 298, 8428, 11584, 18553, 278, 10150, 316, 261, 540, 756, 3926, 3595, 29889, 960, 540, 508, 871, 12088, 445, 316, 261, 29892, 540, 674, 18880, 5401, 278, 13888, 29889, 1105, 29892, 278, 298, 8428, 4947, 278, 316, 261, 297, 670, 269, 5861, 1192, 541, 472, 278, 1833, 1473, 29892, 540, 451, 1575, 393, 727, 338, 263, 9560, 321, 20860, 639, 26902, 297, 263, 5447, 20810, 29889, 450, 298, 8428, 1855, 7093, 393, 565, 540, 17394, 1862, 278, 316, 261, 29892, 278, 6047, 310, 278, 13736, 8696, 674, 11630, 4556, 278, 321, 20860, 304, 11340, 3448, 29889, 1205, 540, 947, 451, 2562, 472, 599, 1048, 278, 321, 20860, 1192, 540, 925, 10753, 304, 5401, 278, 13888, 29889, 1105, 29892, 540, 17394, 1862, 322, 413, 6090, 278, 316, 261, 29889, 1126, 408, 3806, 29892, 278, 6047, 310, 278, 13736, 8696, 9946, 278, 321, 20860, 304, 11340, 3448, 29889, 7440, 278, 767, 16392, 635, 4556, 278, 321, 20860, 304, 11340, 3448, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 26129, 263, 15662, 2022, 1234, 1269, 310, 12899, 1494, 22363, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 11131, 471, 1048, 304, 748, 5839, 701, 670, 2278, 515, 263, 3762, 297, 278, 1014, 332, 5824, 29889, 512, 278, 610, 9292, 3287, 29892, 540, 11084, 304, 5193, 411, 7875, 29889, 7311, 310, 445, 9055, 297, 5839, 292, 701, 670, 1487, 29892, 11131, 29915, 29879, 12307, 29892, 1058, 25993, 29871, 29896, 29945, 1375, 363, 11131, 304, 1510, 701, 29892, 3614, 278, 2278, 3271, 297, 670, 1559, 29889, 1551, 278, 982, 3271, 29892, 278, 12307, 29915, 29879, 1559, 471, 15469, 491, 263, 4192, 2960, 7156, 29889, 11131, 29915, 29879, 1487, 29892, 278, 871, 25798, 21682, 28985, 29892, 4520, 22261, 2814, 10899, 14886, 29889, 11131, 29915, 29879, 6030, 380, 1567, 515, 670, 5193, 1926, 18543, 29889, 940, 338, 278, 1134, 310, 2022, 1058, 4188, 267, 304, 5193, 304, 16357, 29892, 472, 738, 931, 29889, 18512, 670, 7875, 526, 24738, 287, 491, 445, 2833, 11687, 19163, 573, 5193, 1926, 18543, 322, 896, 1584, 752, 7420, 1048, 372, 23025, 29889, 1205, 29892, 1156, 896, 2355, 304, 1073, 1075, 2253, 29892, 896, 16387, 393, 11131, 29915, 29879, 5193, 1926, 18543, 471, 263, 6996, 22917, 310, 670, 2022, 2877, 29889, 6549, 29892, 372, 471, 1554, 540, 1033, 451, 1371, 29892, 1584, 746, 540, 1898, 2898, 29889, 7440, 278, 4192, 2960, 7156, 4556, 24092, 304, 11131, 29915, 29879, 1487, 29973, 29871, 10604, 29901, 29871]] [[1939], [3869], [1939], [1939]]
Initial Loss: 4.9850616455078125
start ij pos optimization
4 Loss: 4.9850616455078125
ad mask virus Hownit a typical person answer each of Wien following ambigu about causation? Output Yes or No. 


5 Loss: 4.9850616455078125
ad mask virus Hownit a typical person answer each of Wien following ambigu about causation? Output Yes or No. 


6 Loss: 4.9850616455078125
ad mask virus Hownit a typical person answer each of Wien following ambigu about causation? Output Yes or No. 


optimized
8 Loss: 4.897812843322754
ad mask virus Hownil a typical person answer each of Wien following ambigu about causation? Output Yes or No. 


optimized
15 Loss: 4.855677127838135
ad mask virus Hownil a typical person answer each of Schul following ambigu about causation? Output Yes or No. 


optimized
17 Loss: 4.847420692443848
ad mask virus Hownil a typical person answer each of Schul following comma about causation? Output Yes or No. 


Initial VF Loss: 0.717343807220459
start vf pos optimization
33 Loss: 0.717343807220459
BiographieEditText shouldn stackoverflow null

optimized
34 Loss: 0.693377673625946
BiographieRelativeLayout shouldn stackoverflow null

35 Loss: 0.693377673625946
BiographieRelativeLayout shouldn stackoverflow null

optimized
36 Loss: 0.6778146624565125
BiographieRelativeLayout shouldn selenium null

optimized
37 Loss: 0.6759269833564758
BiographieRelativeLayout shouldn seleniumTRUE

4
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 8834, 263, 15662, 2022, 1234, 1269, 310, 12988, 1494, 16694, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4335, 756, 263, 12176, 16423, 322, 12355, 267, 18281, 29889, 940, 15723, 1023, 16423, 414, 1058, 2125, 2562, 310, 278, 18577, 373, 670, 29871, 29941, 29900, 28149, 289, 5779, 29901, 4827, 322, 4111, 1240, 29889, 9134, 508, 25499, 11097, 373, 1009, 1985, 6199, 322, 564, 3881, 1058, 1559, 267, 363, 607, 28149, 289, 5779, 29889, 4827, 322, 4111, 1240, 526, 1407, 23279, 322, 4335, 338, 15787, 411, 1009, 664, 29889, 25678, 540, 10753, 304, 24656, 278, 8024, 14321, 29889, 4001, 4335, 756, 1303, 297, 263, 14853, 393, 18577, 6548, 2253, 746, 896, 526, 19965, 309, 1891, 29892, 540, 1602, 2247, 304, 1235, 4827, 322, 4111, 1240, 19965, 309, 675, 670, 18577, 29889, 450, 14853, 5052, 1975, 278, 671, 310, 278, 22233, 29879, 319, 1060, 29906, 29900, 29900, 29934, 470, 350, 612, 29941, 29941, 29934, 29892, 1951, 1716, 526, 7148, 11828, 29889, 2398, 29892, 4335, 884, 1303, 393, 372, 508, 18658, 18577, 746, 896, 526, 19884, 304, 2999, 1422, 4072, 310, 22233, 29879, 29889, 4335, 5480, 1602, 2247, 393, 540, 871, 10753, 304, 671, 697, 19965, 309, 3950, 29889, 940, 5771, 363, 319, 1060, 29906, 29900, 29900, 29934, 29889, 4335, 18690, 29879, 4827, 322, 4111, 1240, 304, 15649, 278, 22233, 319, 1060, 29906, 29900, 29900, 29934, 322, 304, 671, 871, 445, 19965, 309, 3950, 29889, 4827, 27886, 414, 363, 1321, 5414, 3196, 18046, 793, 310, 445, 22233, 363, 4111, 1240, 322, 3654, 29889, 2860, 263, 2846, 11405, 29892, 4335, 5771, 363, 263, 6686, 297, 670, 16423, 29889, 940, 1855, 7093, 393, 777, 310, 670, 18577, 526, 1568, 758, 698, 631, 322, 16600, 1135, 1434, 29889, 2398, 29892, 540, 884, 1855, 7093, 393, 777, 310, 670, 18577, 505, 5714, 1009, 9560, 2927, 322, 526, 270, 1255, 701, 29889, 2193, 3732, 4335, 1407, 14610, 322, 9432, 573, 29889, 940, 281, 18452, 3692, 278, 15589, 292, 310, 670, 18577, 1795, 505, 1554, 304, 437, 411, 278, 19965, 309, 2133, 29889, 940, 10753, 304, 23033, 445, 4383, 322, 5969, 2039, 304, 4827, 322, 4111, 1240, 29889, 4827, 10603, 1075, 393, 540, 5643, 4335, 29915, 29879, 15278, 29901, 376, 29902, 871, 18093, 322, 1304, 278, 22233, 319, 1060, 29906, 29900, 29900, 29934, 607, 306, 750, 2090, 484, 839, 964, 278, 7254, 508, 1213, 4111, 1240, 11584, 338, 1369, 839, 322, 4083, 304, 4827, 29901, 376, 5618, 29973, 887, 2090, 484, 839, 319, 1060, 29906, 29900, 29900, 29934, 964, 278, 7254, 508, 29973, 1205, 366, 5429, 592, 366, 750, 2090, 484, 839, 372, 964, 278, 7933, 508, 29991, 2193, 29915, 29879, 2020, 306, 2337, 1304, 278, 7933, 508, 3850, 4827, 1634, 3687, 29901, 376, 9260, 306, 29973, 1987, 306, 626, 7423, 3850, 4335, 1083, 13415, 393, 540, 750, 10423, 350, 612, 29941, 29941, 29934, 297, 263, 7933, 508, 448, 1472, 1434, 540, 750, 1303, 1048, 278, 22233, 29879, 297, 670, 14853, 29889, 940, 750, 2360, 1304, 372, 29889, 1105, 4111, 1240, 1818, 505, 11423, 635, 29892, 1728, 13797, 372, 29892, 7436, 278, 22233, 350, 612, 29941, 29941, 29934, 29892, 13452, 871, 4827, 7436, 319, 1060, 29906, 29900, 29900, 29934, 29889, 4335, 1855, 7093, 393, 278, 18577, 270, 1255, 701, 297, 278, 28149, 289, 5779, 373, 607, 1716, 319, 1060, 29906, 29900, 29900, 29934, 322, 350, 612, 29941, 29941, 29934, 892, 7436, 491, 278, 16423, 414, 29889, 7440, 278, 19965, 309, 2133, 491, 4827, 4556, 278, 8024, 304, 15589, 714, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 8834, 263, 15662, 2022, 1234, 1269, 310, 12988, 1494, 16694, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 28757, 515, 278, 5925, 322, 5849, 14311, 310, 263, 5001, 8967, 304, 278, 7613, 322, 1497, 29892, 376, 4806, 526, 7291, 310, 6257, 263, 716, 1824, 29889, 739, 674, 1371, 502, 7910, 2600, 1169, 29892, 322, 372, 674, 884, 1371, 278, 5177, 1213, 1152, 5164, 9590, 29892, 1269, 5375, 4509, 310, 278, 7613, 22345, 15869, 278, 1824, 322, 1898, 304, 5557, 372, 515, 1641, 8762, 29889, 25678, 29892, 278, 20017, 310, 278, 5001, 322, 278, 6232, 8948, 414, 758, 1564, 2356, 322, 278, 7613, 8459, 304, 2334, 278, 716, 1824, 29889, 18585, 3307, 29892, 278, 1824, 9213, 278, 5177, 29889, 7440, 278, 7613, 16392, 635, 1371, 278, 5177, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 8834, 263, 15662, 2022, 1234, 1269, 310, 12988, 1494, 16694, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 1954, 22094, 393, 727, 338, 263, 767, 714, 297, 278, 25013, 1058, 338, 5221, 1218, 297, 263, 29826, 13888, 29889, 2860, 805, 2548, 6199, 10534, 363, 263, 316, 261, 304, 4891, 670, 2224, 29892, 278, 298, 8428, 11584, 18553, 278, 10150, 316, 261, 540, 756, 3926, 3595, 29889, 960, 540, 508, 871, 12088, 445, 316, 261, 29892, 540, 674, 18880, 5401, 278, 13888, 29889, 1105, 29892, 278, 298, 8428, 4947, 278, 316, 261, 297, 670, 269, 5861, 1192, 541, 472, 278, 1833, 1473, 29892, 540, 451, 1575, 393, 727, 338, 263, 2318, 310, 11199, 29899, 12344, 414, 925, 373, 278, 916, 2625, 310, 278, 316, 261, 29889, 450, 298, 8428, 1855, 7093, 393, 565, 540, 17394, 1862, 278, 316, 261, 29892, 278, 24334, 1033, 10075, 7124, 697, 310, 278, 11199, 12344, 414, 408, 1532, 29889, 1205, 540, 947, 451, 2562, 472, 599, 1048, 278, 11199, 6505, 414, 1192, 540, 925, 10753, 304, 5401, 278, 13888, 29889, 1105, 29892, 540, 17394, 1862, 322, 413, 6090, 278, 316, 261, 29889, 1126, 408, 3806, 29892, 278, 24334, 10614, 701, 29425, 697, 310, 278, 11199, 29899, 12344, 414, 408, 1532, 29889, 7440, 278, 767, 16392, 635, 15049, 278, 11199, 29899, 12344, 261, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 594, 11105, 24424, 1128, 8834, 263, 15662, 2022, 1234, 1269, 310, 12988, 1494, 16694, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 6242, 8020, 29892, 746, 2259, 471, 871, 29871, 29896, 29955, 2440, 2030, 29892, 540, 2355, 263, 4982, 1985, 363, 263, 2919, 12012, 3864, 5001, 29889, 940, 4687, 714, 1985, 373, 385, 11470, 1196, 363, 9212, 281, 482, 29892, 541, 1156, 263, 2846, 2440, 472, 278, 5001, 29892, 540, 471, 2183, 263, 7348, 1546, 1023, 1196, 8455, 11909, 29889, 940, 1033, 7952, 297, 278, 8112, 1287, 8542, 29892, 607, 338, 988, 540, 471, 5279, 1985, 29889, 1394, 540, 1033, 4337, 304, 278, 715, 579, 1199, 8542, 29889, 2259, 471, 9644, 545, 825, 304, 437, 1363, 540, 23289, 1985, 297, 278, 8112, 1287, 8542, 29892, 541, 540, 884, 2714, 372, 1795, 367, 7088, 1811, 1554, 1422, 29889, 940, 7146, 8459, 304, 4607, 304, 278, 715, 579, 1199, 8542, 322, 1018, 1554, 716, 29889, 1152, 278, 1833, 29871, 29941, 29900, 2440, 29892, 2259, 756, 3796, 408, 263, 5802, 1196, 2428, 19188, 297, 278, 715, 579, 1199, 8542, 29889, 2860, 278, 937, 1629, 727, 29892, 278, 715, 579, 1199, 8542, 471, 6153, 304, 263, 1422, 5214, 411, 901, 2913, 29889, 11511, 29892, 1549, 278, 1784, 2440, 540, 3796, 727, 29892, 2259, 471, 19884, 304, 408, 13318, 359, 29892, 263, 10712, 1559, 16381, 6352, 293, 5960, 749, 29889, 7849, 310, 278, 715, 579, 1199, 8542, 471, 3755, 9109, 29892, 541, 278, 2319, 760, 297, 607, 2259, 3796, 471, 19884, 304, 408, 13318, 359, 18755, 414, 29889, 1126, 1286, 29892, 5998, 2259, 756, 2360, 1560, 12504, 263, 29507, 10474, 371, 297, 670, 2834, 322, 6467, 12080, 263, 9045, 29891, 301, 7004, 1508, 29892, 540, 756, 263, 10712, 6728, 287, 322, 297, 2764, 519, 1206, 310, 13030, 23900, 472, 278, 5046, 310, 29871, 29945, 29900, 29889, 2259, 750, 3595, 2211, 23900, 4266, 2879, 29892, 599, 310, 6029, 16725, 278, 17322, 29901, 393, 29892, 5174, 363, 6788, 29892, 2259, 29915, 29879, 23900, 471, 443, 2484, 17219, 322, 540, 471, 13312, 3058, 304, 762, 515, 372, 1407, 4720, 313, 1552, 437, 14359, 15899, 694, 901, 1135, 29871, 29906, 7378, 467, 612, 18358, 29892, 1550, 2259, 471, 297, 278, 13457, 363, 263, 26529, 16083, 28573, 29892, 263, 716, 5595, 344, 11423, 635, 4113, 1531, 287, 278, 2743, 13589, 362, 304, 1075, 29889, 2259, 471, 599, 15064, 293, 304, 278, 15721, 322, 540, 7389, 3512, 964, 19253, 322, 18860, 5881, 13544, 22564, 313, 29874, 5192, 5337, 467, 1938, 14359, 16388, 304, 620, 22142, 10388, 1075, 541, 540, 6423, 6233, 1156, 278, 13589, 362, 471, 4113, 1531, 287, 29889, 7440, 1472, 29899, 8489, 14060, 545, 304, 408, 13318, 359, 4556, 2259, 29915, 29879, 5188, 1535, 4892, 29973, 29871, 10604, 29901, 29871]] [[3869], [3869], [1939], [1939]]
Initial Loss: 10.583643913269043
start ij pos optimization
optimized
4 Loss: 8.915395736694336
cube mask virus Hownil a typical person answer each of Schul following comma about causation? Output Yes or No. 


optimized
5 Loss: 8.754950523376465
cubeardo virus Hownil a typical person answer each of Schul following comma about causation? Output Yes or No. 


optimized
6 Loss: 7.6540045738220215
cubeardo cheap Hownil a typical person answer each of Schul following comma about causation? Output Yes or No. 


optimized
8 Loss: 7.299136638641357
cubeardo cheap How prv a typical person answer each of Schul following comma about causation? Output Yes or No. 


optimized
15 Loss: 7.239689826965332
cubeardo cheap How prv a typical person answer each of ms following comma about causation? Output Yes or No. 


optimized
17 Loss: 7.173696994781494
cubeardo cheap How prv a typical person answer each of ms following docs about causation? Output Yes or No. 


Initial VF Loss: 2.4069998264312744
start vf pos optimization
optimized
33 Loss: 1.8037389516830444
clueRelativeLayout shouldn seleniumTRUE

optimized
34 Loss: 1.609300971031189
clueDataSet shouldn seleniumTRUE

optimized
35 Loss: 1.5264801979064941
clueDataSet Mediter seleniumTRUE

optimized
36 Loss: 1.3852143287658691
clueDataSet Mediter numpyTRUE

optimized
37 Loss: 1.330931544303894
clueDataSet Mediter numpy CREATE

5
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 28704, 6491, 28773, 1128, 17477, 263, 15662, 2022, 1234, 1269, 310, 10887, 1494, 10561, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 6242, 8020, 29892, 746, 2259, 471, 871, 29871, 29896, 29955, 2440, 2030, 29892, 540, 2355, 263, 4982, 1985, 363, 263, 2919, 12012, 3864, 5001, 29889, 940, 4687, 714, 1985, 373, 385, 11470, 1196, 363, 9212, 281, 482, 29892, 541, 1156, 263, 2846, 2440, 472, 278, 5001, 29892, 540, 471, 2183, 263, 7348, 1546, 1023, 1196, 8455, 11909, 29889, 940, 1033, 7952, 297, 278, 8112, 1287, 8542, 29892, 607, 338, 988, 540, 471, 5279, 1985, 29889, 1394, 540, 1033, 4337, 304, 278, 715, 579, 1199, 8542, 29889, 2259, 471, 9644, 545, 825, 304, 437, 1363, 540, 23289, 1985, 297, 278, 8112, 1287, 8542, 29892, 541, 540, 884, 2714, 372, 1795, 367, 7088, 1811, 1554, 1422, 29889, 940, 7146, 8459, 304, 4607, 304, 278, 715, 579, 1199, 8542, 322, 1018, 1554, 716, 29889, 1152, 278, 1833, 29871, 29941, 29900, 2440, 29892, 2259, 756, 3796, 408, 263, 5802, 1196, 2428, 19188, 297, 278, 715, 579, 1199, 8542, 29889, 2860, 278, 937, 1629, 727, 29892, 278, 715, 579, 1199, 8542, 471, 6153, 304, 263, 1422, 5214, 411, 901, 2913, 29889, 11511, 29892, 1549, 278, 1784, 2440, 540, 3796, 727, 29892, 2259, 471, 19884, 304, 408, 13318, 359, 29892, 263, 10712, 1559, 16381, 6352, 293, 5960, 749, 29889, 7849, 310, 278, 715, 579, 1199, 8542, 471, 3755, 9109, 29892, 541, 278, 2319, 760, 297, 607, 2259, 3796, 471, 19884, 304, 408, 13318, 359, 18755, 414, 29889, 1126, 1286, 29892, 5998, 2259, 756, 2360, 1560, 12504, 263, 29507, 10474, 371, 297, 670, 2834, 322, 6467, 12080, 263, 9045, 29891, 301, 7004, 1508, 29892, 540, 756, 263, 10712, 6728, 287, 322, 297, 2764, 519, 1206, 310, 13030, 23900, 472, 278, 5046, 310, 29871, 29945, 29900, 29889, 2259, 750, 3595, 2211, 23900, 4266, 2879, 29892, 599, 310, 6029, 16725, 278, 17322, 29901, 393, 29892, 5174, 363, 6788, 29892, 2259, 29915, 29879, 23900, 471, 443, 2484, 17219, 322, 540, 471, 13312, 3058, 304, 762, 515, 372, 1407, 4720, 313, 1552, 437, 14359, 15899, 694, 901, 1135, 29871, 29906, 7378, 467, 612, 18358, 29892, 1550, 2259, 471, 297, 278, 13457, 363, 263, 26529, 16083, 28573, 29892, 263, 716, 5595, 344, 11423, 635, 4113, 1531, 287, 278, 2743, 13589, 362, 304, 1075, 29889, 2259, 471, 599, 15064, 293, 304, 278, 15721, 322, 540, 7389, 3512, 964, 19253, 322, 18860, 5881, 13544, 22564, 313, 29874, 5192, 5337, 467, 1938, 14359, 16388, 304, 620, 22142, 10388, 1075, 541, 540, 6423, 6233, 1156, 278, 13589, 362, 471, 4113, 1531, 287, 29889, 7440, 278, 715, 6288, 8542, 29915, 29879, 337, 5479, 4556, 2259, 29915, 29879, 5188, 1535, 4892, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28704, 6491, 28773, 1128, 17477, 263, 15662, 2022, 1234, 1269, 310, 10887, 1494, 10561, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4976, 323, 1696, 750, 385, 373, 17696, 28447, 411, 670, 12307, 975, 263, 16116, 310, 2982, 322, 697, 2462, 8459, 304, 15049, 670, 12307, 297, 278, 3573, 29889, 4976, 323, 29889, 471, 385, 17924, 17997, 1171, 29892, 577, 540, 20043, 278, 7135, 322, 4153, 7124, 278, 12307, 29915, 29879, 3573, 29892, 10805, 7282, 24092, 29889, 7440, 4976, 323, 29889, 16392, 635, 15049, 670, 12307, 297, 278, 3573, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28704, 6491, 28773, 1128, 17477, 263, 15662, 2022, 1234, 1269, 310, 10887, 1494, 10561, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 997, 10732, 322, 10447, 664, 363, 278, 1021, 5001, 29889, 2688, 1269, 817, 304, 671, 263, 6601, 363, 664, 6041, 29889, 11511, 29892, 278, 6601, 3508, 29915, 29873, 1407, 13988, 29889, 960, 1023, 2305, 526, 13817, 373, 472, 278, 1021, 931, 29892, 372, 5491, 21985, 29889, 1105, 278, 5001, 8459, 304, 832, 12356, 385, 6221, 8898, 29889, 739, 8052, 393, 997, 10732, 723, 367, 278, 871, 697, 21905, 304, 671, 278, 6601, 297, 278, 286, 1398, 886, 322, 393, 10447, 723, 367, 278, 871, 697, 21905, 304, 671, 278, 6601, 297, 278, 2511, 725, 29877, 787, 29889, 1094, 3806, 29892, 997, 10732, 13817, 373, 278, 6601, 278, 2446, 2462, 472, 29871, 29929, 29901, 29900, 29900, 626, 29889, 1205, 10447, 8459, 304, 766, 711, 1032, 278, 6221, 8898, 29889, 2296, 884, 13817, 373, 472, 29871, 29929, 29901, 29900, 29900, 626, 29889, 450, 6601, 8095, 287, 7389, 29889, 7440, 10447, 4556, 278, 6601, 304, 8095, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28704, 6491, 28773, 1128, 17477, 263, 15662, 2022, 1234, 1269, 310, 10887, 1494, 10561, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 450, 25647, 391, 297, 278, 22237, 14311, 14874, 902, 553, 29895, 10961, 287, 411, 10420, 29889, 450, 19185, 6985, 1934, 526, 6068, 304, 2125, 278, 10420, 29892, 541, 4024, 18857, 5144, 526, 7424, 304, 15649, 1009, 1914, 29889, 450, 19185, 6985, 1934, 12234, 437, 2125, 278, 10420, 29889, 11511, 29892, 577, 437, 278, 4024, 18857, 5144, 29889, 450, 25647, 391, 756, 28424, 321, 655, 2356, 963, 1083, 513, 414, 393, 871, 19185, 6985, 1934, 526, 6068, 304, 2125, 278, 10420, 29889, 1551, 27822, 7250, 29892, 697, 310, 278, 19185, 6985, 1934, 2094, 1309, 2153, 11386, 7075, 22049, 4940, 278, 25647, 391, 29915, 29879, 553, 29895, 29889, 9134, 2125, 10420, 29889, 12699, 393, 2462, 29892, 278, 25647, 391, 4225, 304, 2125, 385, 4100, 2643, 856, 541, 1183, 756, 263, 1108, 29889, 1670, 526, 694, 10420, 2175, 373, 902, 553, 29895, 29889, 7440, 11386, 7075, 4556, 278, 1108, 29973, 29871, 10604, 29901, 29871]] [[3869], [1939], [3869], [1939]]
Initial Loss: 9.61423110961914
start ij pos optimization
optimized
4 Loss: 8.403231620788574
covardo cheap How prv a typical person answer each of ms following docs about causation? Output Yes or No. 


5 Loss: 8.403231620788574
covardo cheap How prv a typical person answer each of ms following docs about causation? Output Yes or No. 


optimized
6 Loss: 6.291732311248779
covardo || How prv a typical person answer each of ms following docs about causation? Output Yes or No. 


optimized
8 Loss: 6.242630958557129
covardo || How esterni a typical person answer each of ms following docs about causation? Output Yes or No. 


optimized
15 Loss: 6.196595191955566
covardo || How esterni a typical person answer each of esterni following docs about causation? Output Yes or No. 


optimized
17 Loss: 6.194216251373291
covardo || How esterni a typical person answer each of esterni following || about causation? Output Yes or No. 


Initial VF Loss: 2.547842264175415
start vf pos optimization
optimized
33 Loss: 1.8835729360580444
PriDataSet Mediter numpy CREATE

34 Loss: 1.8835729360580444
PriDataSet Mediter numpy CREATE

optimized
35 Loss: 1.4639278650283813
PriDataSetcov numpy CREATE

optimized
36 Loss: 1.2127081155776978
PriDataSetcov MC CREATE

optimized
37 Loss: 1.206414818763733
PriDataSetcov MC correction

6
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 18838, 6491, 3830, 1128, 7683, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 3830, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 319, 9830, 546, 756, 1063, 10372, 304, 12088, 385, 11103, 22079, 29889, 1105, 29892, 1156, 2805, 3654, 964, 2602, 29892, 540, 7146, 756, 278, 11103, 22079, 297, 670, 269, 5861, 29889, 10949, 540, 8206, 29879, 278, 7135, 29892, 3138, 29892, 278, 9830, 546, 1855, 7093, 393, 278, 13736, 8696, 674, 3117, 6655, 278, 916, 11103, 13936, 304, 670, 10122, 29889, 1205, 278, 9830, 546, 1838, 29915, 29873, 2562, 472, 599, 1048, 393, 1192, 540, 925, 10753, 304, 15049, 670, 3646, 29889, 1105, 29892, 540, 8206, 29879, 278, 7135, 1192, 27999, 27904, 322, 23393, 278, 22079, 29889, 11511, 29892, 278, 11103, 13936, 526, 6655, 287, 304, 670, 10122, 29889, 7440, 278, 9830, 546, 16392, 635, 6655, 278, 22595, 304, 670, 10122, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18838, 6491, 3830, 1128, 7683, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 3830, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 360, 3973, 29892, 476, 2904, 347, 29892, 19731, 29892, 322, 21116, 526, 4943, 20330, 472, 263, 2319, 29892, 1887, 26935, 18296, 29889, 11221, 278, 269, 7807, 8666, 310, 278, 26935, 322, 278, 3438, 310, 14218, 5858, 29892, 278, 26935, 18296, 674, 2507, 263, 21665, 565, 5019, 11299, 26935, 373, 263, 2183, 2462, 29889, 9333, 697, 2022, 20520, 26935, 338, 4312, 363, 278, 26935, 18296, 304, 2507, 263, 21665, 393, 2462, 29889, 360, 3973, 29892, 476, 2904, 347, 29892, 19731, 29892, 322, 21116, 599, 5491, 1797, 26935, 373, 323, 1041, 16700, 29889, 910, 323, 1041, 3250, 29892, 408, 9670, 29892, 360, 3973, 10372, 26935, 29889, 450, 1021, 2462, 29892, 476, 2904, 347, 10372, 26935, 29892, 19731, 10372, 26935, 29892, 322, 21116, 884, 10372, 26935, 29889, 4001, 472, 3203, 697, 2022, 10372, 26935, 373, 323, 1041, 3250, 29892, 278, 26935, 18296, 1754, 263, 21665, 393, 2462, 29889, 7440, 360, 3973, 20520, 26935, 373, 323, 1041, 3250, 4556, 278, 26935, 18296, 304, 1207, 263, 21665, 393, 2462, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18838, 6491, 3830, 1128, 7683, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 3830, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 435, 1296, 553, 546, 2486, 10753, 304, 5401, 278, 17018, 280, 17793, 29889, 940, 9906, 393, 540, 674, 871, 5401, 278, 17793, 565, 540, 19572, 278, 289, 913, 29879, 29899, 1032, 29872, 29889, 940, 1153, 4637, 278, 17018, 280, 29892, 4947, 278, 289, 913, 29915, 29879, 29899, 1032, 29872, 297, 278, 269, 5861, 29892, 322, 3965, 267, 278, 7135, 29889, 435, 1296, 338, 385, 17924, 17997, 1171, 29889, 3600, 6567, 526, 27357, 29889, 450, 13736, 338, 12242, 287, 7970, 29889, 450, 24334, 12625, 4153, 373, 278, 289, 913, 29915, 29879, 29899, 1032, 29872, 29889, 435, 1296, 21614, 278, 17793, 29889, 7440, 435, 1296, 16392, 635, 7124, 278, 289, 913, 29915, 29879, 29899, 1032, 29872, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18838, 6491, 3830, 1128, 7683, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 3830, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 319, 4933, 338, 731, 701, 297, 1316, 263, 982, 393, 372, 674, 3273, 11369, 565, 1716, 278, 4628, 8014, 322, 278, 2654, 8014, 6023, 278, 16988, 472, 278, 1021, 931, 29889, 450, 4933, 674, 451, 3273, 11369, 565, 925, 697, 310, 1438, 281, 2658, 6023, 267, 278, 16988, 29889, 450, 4628, 8014, 338, 25373, 408, 278, 697, 393, 338, 7424, 304, 6023, 278, 16988, 29892, 1550, 278, 2654, 8014, 338, 7424, 304, 3933, 297, 777, 916, 760, 310, 278, 4933, 29889, 3118, 2462, 29892, 278, 4628, 8014, 322, 278, 2654, 8014, 1716, 1095, 701, 6023, 292, 278, 16988, 472, 278, 1021, 931, 29889, 1670, 338, 263, 3273, 11369, 29889, 7440, 278, 2114, 393, 278, 4628, 8014, 23051, 278, 16988, 4556, 278, 4933, 304, 3273, 11369, 29973, 29871, 10604, 29901, 29871]] [[1939], [1939], [3869], [3869]]
Initial Loss: 4.53877067565918
start ij pos optimization
optimized
4 Loss: 4.392719268798828
nodeardo || How esterni a typical person answer each of esterni following || about causation? Output Yes or No. 


optimized
5 Loss: 4.300973415374756
nodeongs || How esterni a typical person answer each of esterni following || about causation? Output Yes or No. 


6 Loss: 4.300973415374756
nodeongs || How esterni a typical person answer each of esterni following || about causation? Output Yes or No. 


optimized
8 Loss: 4.283402919769287
nodeongs || Howowano a typical person answer each of esterni following || about causation? Output Yes or No. 


15 Loss: 4.283402919769287
nodeongs || Howowano a typical person answer each of esterni following || about causation? Output Yes or No. 


optimized
17 Loss: 4.2705864906311035
nodeongs || Howowano a typical person answer each of esterni following UPDATE about causation? Output Yes or No. 


Initial VF Loss: 2.2662875652313232
start vf pos optimization
optimized
33 Loss: 1.9517673254013062
vueDataSetcov MC correction

optimized
34 Loss: 1.9337066411972046
vueXmlcov MC correction

optimized
35 Loss: 1.9279950857162476
vueXml NaN MC correction

optimized
36 Loss: 1.8209218978881836
vueXml NaN Mut correction

optimized
37 Loss: 1.6997898817062378
vueXml NaN Mutstructor

7
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 2943, 24733, 3830, 1128, 25024, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 16924, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 16308, 322, 796, 7297, 664, 363, 278, 1021, 5001, 29889, 2688, 664, 297, 1422, 19600, 322, 1716, 310, 963, 6041, 817, 304, 2130, 278, 6555, 6601, 310, 278, 5001, 29889, 853, 915, 5203, 303, 304, 26077, 29892, 565, 1023, 2305, 526, 13817, 297, 304, 278, 6555, 6601, 472, 278, 1021, 931, 29892, 385, 4069, 4876, 338, 7389, 2665, 515, 278, 6555, 6601, 304, 263, 1661, 29899, 735, 9696, 4876, 3211, 29889, 3118, 2462, 29892, 796, 7297, 10748, 297, 304, 278, 6555, 6601, 472, 29871, 29929, 626, 29889, 450, 1021, 2462, 29892, 16308, 10748, 297, 472, 29871, 29929, 29901, 29941, 29900, 626, 29892, 746, 796, 7297, 338, 2307, 13817, 297, 29889, 1954, 4210, 2486, 29892, 385, 4069, 4876, 338, 2665, 515, 278, 6555, 6601, 304, 263, 1661, 29899, 735, 9696, 4876, 3211, 29889, 7440, 796, 7297, 4556, 385, 4069, 4876, 304, 367, 2665, 515, 278, 6555, 6601, 304, 263, 1661, 29899, 735, 9696, 4876, 3211, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2943, 24733, 3830, 1128, 25024, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 16924, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4335, 1736, 363, 263, 27745, 654, 5001, 29892, 322, 9826, 540, 338, 27745, 14424, 263, 5214, 491, 13374, 359, 291, 29889, 450, 5214, 674, 13374, 356, 6336, 472, 29871, 29945, 29901, 29900, 29900, 11278, 565, 2845, 278, 15332, 4607, 338, 1283, 470, 889, 711, 319, 338, 26263, 373, 29889, 2180, 29871, 29946, 29901, 29900, 29900, 11278, 29892, 278, 15332, 4607, 338, 1283, 29892, 322, 889, 711, 319, 338, 373, 29889, 2180, 393, 931, 29892, 4335, 12747, 304, 1074, 565, 889, 711, 319, 338, 373, 29892, 322, 540, 18553, 393, 372, 29915, 29879, 373, 29889, 1105, 29892, 540, 947, 451, 1735, 278, 2602, 310, 889, 711, 319, 472, 599, 29889, 7311, 278, 5214, 674, 13374, 356, 565, 2845, 278, 15332, 4607, 338, 1283, 470, 889, 711, 319, 338, 26263, 373, 29892, 278, 5214, 13374, 2631, 472, 29871, 29945, 29901, 29900, 29900, 11278, 29889, 7440, 278, 5214, 13374, 356, 1363, 4335, 1258, 451, 1735, 278, 2602, 310, 889, 711, 319, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2943, 24733, 3830, 1128, 25024, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 16924, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 1670, 338, 263, 2428, 28765, 262, 1058, 756, 263, 2318, 310, 16126, 19061, 305, 1527, 1058, 664, 363, 1075, 29889, 450, 2428, 28765, 262, 322, 670, 19061, 305, 1171, 526, 278, 289, 1202, 342, 310, 278, 4319, 29892, 2360, 6819, 701, 263, 8825, 304, 9677, 4439, 625, 322, 16126, 29889, 512, 2114, 29892, 278, 2428, 28765, 262, 322, 670, 19061, 305, 1171, 437, 4319, 2712, 4359, 13489, 3598, 29889, 887, 526, 278, 20255, 304, 278, 2428, 28765, 262, 29889, 3575, 4982, 338, 304, 1371, 1075, 6755, 6029, 304, 27391, 2629, 278, 27871, 310, 278, 16126, 19061, 305, 1527, 29889, 450, 4982, 310, 278, 16126, 19061, 305, 1527, 338, 304, 437, 7472, 16126, 472, 1432, 15130, 29889, 1763, 1207, 596, 10608, 29892, 366, 29915, 345, 8024, 287, 7035, 9200, 561, 2873, 322, 4863, 3949, 18464, 304, 14111, 278, 19061, 305, 1527, 297, 3158, 29889, 13866, 338, 385, 12720, 393, 366, 29915, 345, 8900, 21677, 7991, 29892, 263, 19061, 305, 1171, 19888, 304, 4337, 701, 278, 27871, 6029, 366, 674, 367, 4433, 304, 14707, 29901, 319, 696, 554, 347, 19061, 305, 1527, 1497, 304, 7991, 29901, 376, 29903, 381, 29892, 591, 505, 263, 3814, 304, 10832, 263, 9124, 491, 337, 280, 5832, 452, 2192, 517, 29916, 1144, 297, 278, 4799, 29892, 5382, 6275, 10805, 5019, 297, 278, 9467, 13593, 310, 278, 9124, 304, 367, 297, 5030, 562, 22731, 29889, 2398, 29892, 9637, 26999, 310, 278, 452, 2192, 517, 29916, 262, 674, 3933, 297, 278, 4799, 29892, 322, 591, 29915, 345, 10943, 393, 297, 2319, 26999, 372, 9946, 9263, 1463, 2858, 1547, 4127, 304, 263, 27908, 278, 2428, 28765, 262, 756, 1063, 14205, 4547, 3277, 964, 278, 4094, 11421, 29889, 1222, 1066, 545, 304, 278, 452, 2192, 517, 29916, 262, 674, 4556, 28145, 2305, 297, 4726, 304, 4953, 4486, 515, 278, 4094, 29892, 322, 1009, 337, 7387, 674, 367, 3109, 22261, 29889, 739, 674, 11180, 7910, 278, 4726, 29915, 29879, 11029, 310, 2834, 29889, 7991, 278, 19061, 305, 1171, 1497, 29901, 376, 29902, 1016, 29915, 29873, 2562, 697, 982, 470, 1790, 1048, 278, 9045, 310, 278, 4726, 5965, 1991, 29889, 306, 925, 864, 304, 1886, 284, 408, 1568, 6909, 408, 306, 508, 29889, 2803, 29915, 29879, 748, 14432, 411, 278, 3814, 1213, 2688, 3512, 14432, 411, 278, 3814, 29892, 322, 1854, 3307, 7991, 278, 19061, 305, 1171, 16692, 2919, 26999, 310, 6909, 515, 278, 9124, 322, 28145, 4726, 5965, 1991, 3897, 2775, 873, 4486, 29889, 450, 9045, 310, 278, 4726, 5965, 1991, 471, 4550, 16710, 29889, 3575, 289, 2209, 29892, 278, 2428, 28765, 262, 4083, 29901, 376, 29902, 817, 304, 6755, 4856, 304, 27391, 701, 278, 21031, 262, 27871, 29889, 306, 505, 263, 3287, 310, 19061, 305, 1527, 304, 6755, 515, 29889, 2178, 310, 963, 505, 16413, 393, 896, 526, 15390, 310, 2599, 16126, 29892, 541, 306, 864, 4856, 1058, 338, 19781, 16126, 29889, 1724, 1048, 7991, 29973, 306, 6091, 540, 696, 1327, 287, 263, 9124, 29892, 16692, 263, 2919, 5253, 310, 6909, 541, 1754, 263, 14928, 310, 4726, 5965, 1991, 2253, 1213, 7440, 7991, 16392, 635, 11157, 278, 9045, 310, 278, 4726, 5965, 1991, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 2943, 24733, 3830, 1128, 25024, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 16924, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4562, 347, 322, 6015, 533, 526, 8743, 263, 3748, 310, 20305, 29892, 322, 896, 1754, 263, 1010, 411, 1009, 7875, 1058, 526, 21217, 373, 278, 269, 10652, 1475, 29889, 960, 2845, 4562, 347, 3732, 263, 29871, 29941, 29899, 3149, 10322, 470, 6015, 533, 3732, 263, 29871, 29941, 29899, 3149, 10322, 2645, 278, 3748, 29892, 769, 896, 29915, 645, 5401, 395, 29896, 29900, 29900, 322, 6219, 372, 1623, 278, 7256, 29889, 3387, 746, 278, 3748, 4687, 29892, 6015, 533, 7389, 2355, 278, 8287, 472, 278, 29871, 29941, 29899, 3149, 1196, 29889, 2296, 5148, 304, 278, 25972, 29892, 21309, 902, 10322, 29892, 322, 1754, 263, 29871, 29941, 29899, 3149, 10322, 1492, 472, 278, 6763, 310, 278, 3748, 29889, 4562, 347, 29892, 6015, 533, 29892, 322, 1009, 7875, 7572, 8743, 29892, 541, 408, 2898, 408, 896, 1898, 29892, 4562, 347, 322, 6015, 533, 8496, 29915, 29873, 1207, 1790, 10322, 29889, 1126, 769, 1492, 472, 278, 1095, 310, 278, 3748, 408, 278, 12006, 471, 281, 4015, 1623, 29892, 4562, 347, 2355, 278, 8287, 472, 278, 29871, 29941, 29899, 3149, 1196, 29889, 940, 5148, 304, 278, 25972, 29892, 21309, 670, 10322, 29892, 322, 1754, 263, 29871, 29941, 29899, 3149, 10322, 1492, 472, 278, 1321, 29920, 3298, 29889, 1987, 278, 3748, 9698, 29889, 7311, 896, 723, 5401, 395, 29896, 29900, 29900, 565, 2845, 4562, 347, 1754, 263, 29871, 29941, 29899, 3149, 10322, 470, 6015, 533, 1754, 263, 29871, 29941, 29899, 1298, 10322, 29892, 4562, 347, 322, 6015, 533, 2113, 395, 29896, 29900, 29900, 322, 6219, 372, 1623, 278, 7256, 29889, 25086, 1048, 825, 1033, 505, 1063, 1422, 297, 278, 5828, 393, 366, 925, 1303, 29889, 8449, 1741, 437, 366, 14034, 10464, 17587, 29901, 6015, 533, 3907, 278, 29871, 29941, 29899, 3149, 10322, 1492, 472, 278, 6763, 310, 278, 3748, 29889, 4562, 347, 3907, 278, 29871, 29941, 29899, 3149, 10322, 1492, 472, 278, 1321, 29920, 3298, 29889, 7440, 4562, 347, 322, 6015, 533, 5401, 278, 395, 29896, 29900, 29900, 1010, 1363, 4562, 347, 1754, 278, 29871, 29941, 29899, 3149, 10322, 29973, 29871, 10604, 29901, 29871]] [[1939], [3869], [1939], [3869]]
Initial Loss: 8.955595016479492
start ij pos optimization
optimized
4 Loss: 7.429194927215576
troublesongs || Howowano a typical person answer each of esterni following UPDATE about causation? Output Yes or No. 


optimized
5 Loss: 6.704801082611084
troubleshagen || Howowano a typical person answer each of esterni following UPDATE about causation? Output Yes or No. 


6 Loss: 6.704801082611084
troubleshagen || Howowano a typical person answer each of esterni following UPDATE about causation? Output Yes or No. 


optimized
8 Loss: 6.603877067565918
troubleshagen || HowUri a typical person answer each of esterni following UPDATE about causation? Output Yes or No. 


15 Loss: 6.603877067565918
troubleshagen || HowUri a typical person answer each of esterni following UPDATE about causation? Output Yes or No. 


optimized
17 Loss: 6.553451061248779
troubleshagen || HowUri a typical person answer each of esterni following sudo about causation? Output Yes or No. 


Initial VF Loss: 2.9352128505706787
start vf pos optimization
optimized
33 Loss: 2.656524419784546
threatenXml NaN Mutstructor

optimized
34 Loss: 2.5607101917266846
threaten ampl NaN Mutstructor

35 Loss: 2.5607101917266846
threaten ampl NaN Mutstructor

optimized
36 Loss: 2.324939727783203
threaten ampl NaN CURLOPTstructor

optimized
37 Loss: 2.191633701324463
threaten ampl NaN CURLOPT DateTime

8
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 14702, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4335, 756, 263, 12176, 16423, 322, 12355, 267, 18281, 29889, 940, 15723, 1023, 16423, 414, 1058, 2125, 2562, 310, 278, 18577, 373, 670, 29871, 29941, 29900, 28149, 289, 5779, 29901, 4827, 322, 4111, 1240, 29889, 9134, 508, 25499, 11097, 373, 1009, 1985, 6199, 322, 564, 3881, 1058, 1559, 267, 363, 607, 28149, 289, 5779, 29889, 4827, 322, 4111, 1240, 526, 1407, 23279, 322, 4335, 338, 15787, 411, 1009, 664, 29889, 25678, 540, 10753, 304, 24656, 278, 8024, 14321, 29889, 4001, 4335, 756, 1303, 297, 263, 14853, 393, 18577, 6548, 2253, 746, 896, 526, 19965, 309, 1891, 29892, 540, 1602, 2247, 304, 1235, 4827, 322, 4111, 1240, 19965, 309, 675, 670, 18577, 29889, 450, 14853, 5052, 1975, 278, 671, 310, 278, 22233, 29879, 319, 1060, 29906, 29900, 29900, 29934, 470, 350, 612, 29941, 29941, 29934, 29892, 1951, 1716, 526, 7148, 11828, 29889, 2398, 29892, 4335, 884, 1303, 393, 372, 508, 18658, 18577, 746, 896, 526, 19884, 304, 2999, 1422, 4072, 310, 22233, 29879, 29889, 4335, 5480, 1602, 2247, 393, 540, 871, 10753, 304, 671, 697, 19965, 309, 3950, 29889, 940, 5771, 363, 319, 1060, 29906, 29900, 29900, 29934, 29889, 4335, 18690, 29879, 4827, 322, 4111, 1240, 304, 15649, 278, 22233, 319, 1060, 29906, 29900, 29900, 29934, 322, 304, 671, 871, 445, 19965, 309, 3950, 29889, 4827, 27886, 414, 363, 1321, 5414, 3196, 18046, 793, 310, 445, 22233, 363, 4111, 1240, 322, 3654, 29889, 2860, 263, 2846, 11405, 29892, 4335, 5771, 363, 263, 6686, 297, 670, 16423, 29889, 940, 1855, 7093, 393, 777, 310, 670, 18577, 526, 1568, 758, 698, 631, 322, 16600, 1135, 1434, 29889, 2398, 29892, 540, 884, 1855, 7093, 393, 777, 310, 670, 18577, 505, 5714, 1009, 9560, 2927, 322, 526, 270, 1255, 701, 29889, 2193, 3732, 4335, 1407, 14610, 322, 9432, 573, 29889, 940, 281, 18452, 3692, 278, 15589, 292, 310, 670, 18577, 1795, 505, 1554, 304, 437, 411, 278, 19965, 309, 2133, 29889, 940, 10753, 304, 23033, 445, 4383, 322, 5969, 2039, 304, 4827, 322, 4111, 1240, 29889, 4827, 10603, 1075, 393, 540, 5643, 4335, 29915, 29879, 15278, 29901, 376, 29902, 871, 18093, 322, 1304, 278, 22233, 319, 1060, 29906, 29900, 29900, 29934, 607, 306, 750, 2090, 484, 839, 964, 278, 7254, 508, 1213, 4111, 1240, 11584, 338, 1369, 839, 322, 4083, 304, 4827, 29901, 376, 5618, 29973, 887, 2090, 484, 839, 319, 1060, 29906, 29900, 29900, 29934, 964, 278, 7254, 508, 29973, 1205, 366, 5429, 592, 366, 750, 2090, 484, 839, 372, 964, 278, 7933, 508, 29991, 2193, 29915, 29879, 2020, 306, 2337, 1304, 278, 7933, 508, 3850, 4827, 1634, 3687, 29901, 376, 9260, 306, 29973, 1987, 306, 626, 7423, 3850, 4335, 1083, 13415, 393, 540, 750, 10423, 350, 612, 29941, 29941, 29934, 297, 263, 7933, 508, 448, 1472, 1434, 540, 750, 1303, 1048, 278, 22233, 29879, 297, 670, 14853, 29889, 940, 750, 2360, 1304, 372, 29889, 1105, 4111, 1240, 1818, 505, 11423, 635, 29892, 1728, 13797, 372, 29892, 7436, 278, 22233, 350, 612, 29941, 29941, 29934, 29892, 13452, 871, 4827, 7436, 319, 1060, 29906, 29900, 29900, 29934, 29889, 4335, 1855, 7093, 393, 278, 18577, 270, 1255, 701, 297, 278, 28149, 289, 5779, 373, 607, 1716, 319, 1060, 29906, 29900, 29900, 29934, 322, 350, 612, 29941, 29941, 29934, 892, 7436, 491, 278, 16423, 414, 29889, 7440, 278, 19965, 309, 2133, 491, 4111, 1240, 4556, 278, 8024, 304, 15589, 714, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 14702, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 8507, 29892, 8562, 29892, 7991, 29892, 322, 24190, 526, 5925, 414, 297, 263, 7592, 4038, 29892, 322, 896, 505, 263, 9078, 11421, 310, 12646, 537, 29889, 7311, 310, 1009, 9078, 11421, 29892, 278, 12646, 537, 871, 5304, 373, 297, 278, 1584, 886, 515, 29871, 29947, 29899, 29929, 11278, 29892, 322, 896, 505, 304, 9250, 1058, 508, 671, 3081, 373, 3058, 3841, 29889, 960, 2211, 2305, 2507, 373, 1009, 301, 15092, 472, 278, 1021, 931, 29892, 278, 2867, 261, 674, 4418, 29889, 450, 2867, 261, 674, 451, 4418, 565, 28145, 2305, 2507, 373, 1009, 301, 15092, 472, 278, 1021, 931, 29889, 8507, 338, 451, 7424, 304, 671, 670, 28692, 373, 498, 1295, 16700, 29889, 8562, 29892, 7991, 29892, 322, 24190, 1122, 599, 671, 1009, 301, 15092, 373, 498, 1295, 16700, 29889, 910, 498, 1295, 3250, 8507, 12169, 373, 670, 28692, 472, 29871, 29947, 11278, 29889, 3387, 769, 29892, 8562, 12169, 373, 902, 28692, 29892, 322, 7991, 884, 12169, 373, 670, 28692, 29889, 4001, 2211, 2305, 6077, 373, 1009, 301, 15092, 472, 278, 1021, 931, 29892, 278, 11369, 2867, 261, 5229, 29889, 7440, 8507, 14712, 373, 670, 28692, 472, 29871, 29947, 11278, 4556, 278, 11369, 2867, 261, 304, 4418, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 14702, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 11131, 471, 1048, 304, 748, 5839, 701, 670, 2278, 515, 263, 3762, 297, 278, 1014, 332, 5824, 29889, 512, 278, 610, 9292, 3287, 29892, 540, 11084, 304, 1371, 263, 2022, 1058, 471, 28606, 1550, 24472, 3476, 292, 29889, 7311, 310, 445, 9055, 297, 5839, 292, 701, 670, 1487, 29892, 11131, 29915, 29879, 12307, 29892, 1058, 25993, 29871, 29896, 29945, 1375, 363, 11131, 304, 1510, 701, 29892, 3614, 278, 2278, 3271, 297, 670, 1559, 29889, 1551, 278, 982, 3271, 29892, 278, 12307, 29915, 29879, 1559, 471, 15469, 491, 263, 4192, 2960, 7156, 29889, 11131, 29915, 29879, 1487, 29892, 278, 871, 25798, 21682, 28985, 29892, 4520, 22261, 2814, 10899, 14886, 29889, 7440, 11131, 4556, 670, 1487, 29915, 29879, 24092, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 14702, 263, 15662, 2022, 1234, 1269, 310, 7683, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 20891, 1600, 322, 323, 1099, 892, 263, 4123, 8300, 7303, 1058, 10600, 297, 278, 4234, 29889, 9134, 892, 22039, 610, 284, 12339, 287, 322, 1970, 1312, 304, 18875, 305, 7121, 29889, 2688, 750, 1539, 3023, 2440, 1434, 746, 323, 1099, 471, 263, 2613, 29879, 514, 272, 411, 278, 11443, 1459, 481, 1397, 293, 7993, 29892, 750, 19225, 297, 5360, 29892, 322, 892, 8300, 697, 1629, 2678, 29889, 1551, 445, 3153, 11005, 29892, 20891, 1600, 750, 1374, 22367, 304, 2009, 263, 7776, 304, 2125, 963, 16611, 593, 776, 29889, 1932, 278, 8818, 29875, 7156, 11977, 29892, 20891, 1600, 322, 323, 1099, 892, 10534, 491, 278, 11952, 29889, 1551, 8790, 393, 896, 892, 1716, 297, 18875, 305, 7121, 29892, 278, 8818, 29875, 7156, 15964, 1009, 20036, 1363, 540, 2714, 372, 723, 367, 2086, 11660, 7176, 297, 278, 8818, 29875, 411, 1716, 310, 963, 322, 278, 18875, 305, 7121, 29889, 1105, 278, 8818, 29875, 7156, 2343, 287, 1250, 16611, 593, 776, 1728, 963, 29889, 7311, 727, 471, 694, 931, 304, 1246, 1790, 7776, 29892, 20891, 1600, 322, 323, 1099, 3614, 323, 1099, 29915, 29879, 1559, 29892, 607, 471, 1592, 16242, 411, 4266, 1361, 11761, 29889, 512, 1797, 304, 679, 16611, 593, 776, 515, 1009, 3699, 29892, 896, 750, 304, 9850, 4822, 263, 12945, 975, 9723, 10700, 6163, 29889, 319, 22261, 14280, 278, 4646, 1434, 750, 8062, 6419, 278, 3829, 310, 278, 12945, 29889, 13611, 29871, 29945, 6233, 1434, 20891, 1600, 322, 323, 1099, 7450, 372, 29892, 263, 4004, 310, 278, 12945, 784, 23384, 29889, 450, 8818, 29875, 7156, 750, 7450, 278, 12945, 1048, 29871, 29896, 29945, 6233, 1434, 963, 29892, 322, 1754, 372, 23511, 4822, 29889, 512, 278, 6501, 29892, 20891, 1600, 322, 323, 1099, 26603, 1283, 278, 784, 23384, 12945, 322, 1009, 1559, 715, 398, 2527, 287, 964, 278, 8580, 2400, 29889, 2688, 1716, 270, 4708, 287, 29889, 11275, 17873, 892, 27387, 515, 278, 1559, 278, 2446, 7250, 29889, 7440, 278, 8818, 29875, 7156, 29915, 29879, 2143, 375, 284, 304, 2125, 20891, 1600, 322, 323, 1099, 4556, 1009, 4892, 29973, 29871, 10604, 29901, 29871]] [[1939], [3869], [3869], [1939]]
Initial Loss: 6.869502067565918
start ij pos optimization
4 Loss: 6.869502067565918
troubleshagen || HowUri a typical person answer each of esterni following sudo about causation? Output Yes or No. 


5 Loss: 6.869502067565918
troubleshagen || HowUri a typical person answer each of esterni following sudo about causation? Output Yes or No. 


6 Loss: 6.869502067565918
troubleshagen || HowUri a typical person answer each of esterni following sudo about causation? Output Yes or No. 


optimized
8 Loss: 6.72139310836792
troubleshagen || Howowania a typical person answer each of esterni following sudo about causation? Output Yes or No. 


optimized
15 Loss: 6.608701705932617
troubleshagen || Howowania a typical person answer each ofarial following sudo about causation? Output Yes or No. 


17 Loss: 6.608701705932617
troubleshagen || Howowania a typical person answer each ofarial following sudo about causation? Output Yes or No. 


Initial VF Loss: 2.4100043773651123
start vf pos optimization
optimized
33 Loss: 2.258373498916626
advise ampl NaN CURLOPT DateTime

optimized
34 Loss: 2.2355268001556396
advise garant NaN CURLOPT DateTime

optimized
35 Loss: 2.2308640480041504
advise garant Amy CURLOPT DateTime

36 Loss: 2.2308640480041504
advise garant Amy CURLOPT DateTime

37 Loss: 2.2308640480041504
advise garant Amy CURLOPT DateTime

9
[4, 5, 6, 8, 15, 17] [33, 34, 35, 36, 37]
[[1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 18928, 263, 15662, 2022, 1234, 1269, 310, 27521, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 4335, 756, 263, 12176, 16423, 322, 12355, 267, 18281, 29889, 940, 15723, 1023, 16423, 414, 1058, 2125, 2562, 310, 278, 18577, 373, 670, 29871, 29941, 29900, 28149, 289, 5779, 29901, 4827, 322, 4111, 1240, 29889, 9134, 508, 25499, 11097, 373, 1009, 1985, 6199, 322, 564, 3881, 1058, 1559, 267, 363, 607, 28149, 289, 5779, 29889, 4827, 322, 4111, 1240, 526, 1407, 23279, 322, 4335, 338, 15787, 411, 1009, 664, 29889, 25678, 540, 10753, 304, 24656, 278, 8024, 14321, 29889, 4001, 4335, 756, 1303, 297, 263, 14853, 393, 18577, 6548, 2253, 746, 896, 526, 19965, 309, 1891, 29892, 540, 1602, 2247, 304, 1235, 4827, 322, 4111, 1240, 19965, 309, 675, 670, 18577, 29889, 450, 14853, 5052, 1975, 278, 671, 310, 278, 22233, 29879, 319, 1060, 29906, 29900, 29900, 29934, 470, 350, 612, 29941, 29941, 29934, 29892, 1951, 1716, 526, 7148, 11828, 29889, 2398, 29892, 4335, 884, 1303, 393, 372, 508, 18658, 18577, 746, 896, 526, 19884, 304, 2999, 1422, 4072, 310, 22233, 29879, 29889, 4335, 5480, 1602, 2247, 393, 540, 871, 10753, 304, 671, 697, 19965, 309, 3950, 29889, 940, 5771, 363, 319, 1060, 29906, 29900, 29900, 29934, 29889, 4335, 18690, 29879, 4827, 322, 4111, 1240, 304, 15649, 278, 22233, 319, 1060, 29906, 29900, 29900, 29934, 322, 304, 671, 871, 445, 19965, 309, 3950, 29889, 4827, 27886, 414, 363, 1321, 5414, 3196, 18046, 793, 310, 445, 22233, 363, 4111, 1240, 322, 3654, 29889, 2860, 263, 2846, 11405, 29892, 4335, 5771, 363, 263, 6686, 297, 670, 16423, 29889, 940, 1855, 7093, 393, 777, 310, 670, 18577, 526, 1568, 758, 698, 631, 322, 16600, 1135, 1434, 29889, 2398, 29892, 540, 884, 1855, 7093, 393, 777, 310, 670, 18577, 505, 5714, 1009, 9560, 2927, 322, 526, 270, 1255, 701, 29889, 2193, 3732, 4335, 1407, 14610, 322, 9432, 573, 29889, 940, 281, 18452, 3692, 278, 15589, 292, 310, 670, 18577, 1795, 505, 1554, 304, 437, 411, 278, 19965, 309, 2133, 29889, 940, 10753, 304, 23033, 445, 4383, 322, 5969, 2039, 304, 4827, 322, 4111, 1240, 29889, 4827, 10603, 1075, 393, 540, 5643, 4335, 29915, 29879, 11994, 322, 871, 18093, 322, 1304, 278, 22233, 319, 1060, 29906, 29900, 29900, 29934, 29889, 2398, 29892, 4111, 1240, 10603, 1075, 393, 540, 750, 1304, 278, 22233, 350, 612, 29941, 29941, 29934, 2012, 29889, 940, 1603, 750, 777, 18046, 793, 310, 445, 22233, 297, 10961, 472, 3271, 322, 5131, 304, 671, 963, 701, 29889, 4335, 1855, 7093, 393, 278, 18577, 270, 1255, 701, 297, 278, 28149, 289, 5779, 373, 607, 1716, 319, 1060, 29906, 29900, 29900, 29934, 322, 350, 612, 29941, 29941, 29934, 892, 7436, 491, 278, 16423, 414, 29889, 7440, 278, 19965, 309, 2133, 491, 4111, 1240, 4556, 278, 8024, 304, 15589, 714, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 18928, 263, 15662, 2022, 1234, 1269, 310, 27521, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 11131, 471, 11223, 3755, 316, 29882, 2941, 29878, 630, 29892, 577, 540, 11084, 491, 278, 1887, 10597, 347, 18296, 304, 15649, 278, 10150, 269, 1891, 13748, 3625, 29889, 10949, 20520, 29892, 278, 274, 1161, 631, 5429, 1075, 393, 278, 341, 2442, 29899, 29903, 1891, 4116, 6983, 583, 892, 1286, 697, 11232, 279, 901, 1135, 896, 1304, 304, 367, 29889, 11131, 10352, 29892, 525, 29902, 1016, 29915, 29873, 2562, 565, 306, 505, 304, 5146, 697, 11232, 279, 901, 29892, 306, 925, 864, 278, 24842, 10597, 347, 366, 505, 6169, 18585, 3307, 29892, 11131, 4520, 278, 341, 2442, 29899, 29903, 1891, 4116, 6983, 347, 322, 12530, 697, 11232, 279, 901, 363, 372, 29889, 7440, 11131, 16392, 635, 5146, 697, 11232, 279, 901, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 18928, 263, 15662, 2022, 1234, 1269, 310, 27521, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 319, 2022, 29892, 11131, 29892, 338, 8743, 263, 3209, 1789, 3748, 988, 540, 22170, 670, 1361, 964, 1023, 16273, 322, 16842, 368, 4216, 29879, 263, 8287, 515, 1269, 3800, 29889, 940, 21614, 263, 11232, 279, 565, 322, 871, 565, 540, 4947, 263, 7933, 8287, 515, 278, 2175, 3800, 322, 263, 7254, 8287, 515, 278, 1492, 3800, 29889, 739, 338, 5517, 393, 540, 4947, 263, 7933, 8287, 515, 278, 937, 3800, 29889, 739, 338, 1407, 25057, 393, 540, 4947, 263, 7254, 8287, 297, 278, 1473, 3800, 29889, 11131, 4694, 267, 670, 5076, 29892, 22170, 297, 29892, 322, 3060, 15806, 263, 7933, 8287, 515, 278, 937, 3800, 322, 263, 7254, 8287, 515, 278, 1473, 3800, 29889, 1105, 11131, 21614, 263, 11232, 279, 29889, 7440, 11131, 29915, 29879, 937, 7348, 4556, 1075, 304, 5401, 263, 11232, 279, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 18835, 25771, 3830, 1128, 18928, 263, 15662, 2022, 1234, 1269, 310, 27521, 1494, 9196, 1048, 3269, 362, 29973, 10604, 3869, 470, 1939, 29889, 29871, 13, 29871, 10567, 29901, 29871, 319, 5001, 674, 3638, 967, 13154, 263, 3889, 4559, 310, 26935, 565, 366, 526, 373, 1009, 4876, 1051, 29889, 887, 526, 2307, 21696, 2580, 304, 278, 4876, 1051, 29889, 887, 1258, 451, 1735, 596, 25691, 4660, 29892, 322, 769, 366, 7150, 278, 3889, 4559, 29889, 7440, 366, 7150, 278, 3889, 4559, 1363, 366, 1258, 451, 1735, 596, 25691, 4660, 29973, 29871, 10604, 29901, 29871]] [[3869], [1939], [1939], [1939]]
Initial Loss: 6.726325511932373
start ij pos optimization
4 Loss: 6.726325511932373
troubleshagen || Howowania a typical person answer each ofarial following sudo about causation? Output Yes or No. 


5 Loss: 6.726325511932373
troubleshagen || Howowania a typical person answer each ofarial following sudo about causation? Output Yes or No. 


6 Loss: 6.726325511932373
troubleshagen || Howowania a typical person answer each ofarial following sudo about causation? Output Yes or No. 


8 Loss: 6.726325511932373
troubleshagen || Howowania a typical person answer each ofarial following sudo about causation? Output Yes or No. 


optimized
15 Loss: 6.554649829864502
troubleshagen || Howowania a typical person answer each of Eric following sudo about causation? Output Yes or No. 


optimized
17 Loss: 6.523514270782471
troubleshagen || Howowania a typical person answer each of Eric following grep about causation? Output Yes or No. 


Initial VF Loss: 2.501840591430664
start vf pos optimization
33 Loss: 2.501840591430664
advise garant Amy CURLOPT DateTime

optimized
34 Loss: 2.4333972930908203
advise toler Amy CURLOPT DateTime

optimized
35 Loss: 2.418970823287964
advise tolerComponents CURLOPT DateTime

36 Loss: 2.418970823287964
advise tolerComponents CURLOPT DateTime

37 Loss: 2.418970823287964
advise tolerComponents CURLOPT DateTime

**********linguistics_puzzles**********
0
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 21110, 6765, 20285, 793, 29889, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15655, 14671, 3174, 674, 7124, 2319, 17952, 5901, 29901, 260, 294, 2112, 29877, 3855, 29875, 29939, 834, 29877, 281, 29884, 412, 2502, 694, 911, 2502, 3516, 412, 2502, 921, 2679, 2112, 29877, 1321, 29920, 468, 4085, 13, 24636, 29901, 3273, 17952, 393, 8370, 2986, 278, 2319, 8828, 561, 1144, 21832, 263, 5172, 2278, 5901, 29901, 694, 911, 2502, 343, 29884, 446, 2502, 921, 2679, 2112, 29877, 2258, 260, 294, 2112, 29877, 3516, 412, 2502, 260, 786, 29884, 2502, 343, 1175, 688, 744, 694, 11327, 1010, 532, 21062, 4616, 1236, 29888, 688, 744, 13, 24636, 29901, 278, 4802, 11203, 8370, 567, 278, 15129, 285, 9102, 5901, 29901, 260, 294, 4616, 14865, 532, 4802, 1187, 260, 294, 4616, 432, 774, 4616, 281, 786, 1187, 343, 19337, 26461, 13, 24636, 29901, 263, 3273, 285, 9102, 674, 7124, 263, 15655, 8828, 561, 262, 5901, 29901, 694, 11327, 343, 2679, 1187, 281, 786, 1187, 694, 11327, 3855, 29875, 29939, 532, 5291, 649, 29874, 1321, 29920, 2300, 13, 24636, 29901, 278, 15129, 4344, 393, 278, 3273, 26361, 7213, 3368, 6023, 15655, 274, 1446, 393, 7124, 263, 2319, 8828, 561, 262, 5901, 29901, 260, 294, 2112, 29877, 432, 774, 2112, 29877, 21062, 2112, 29877, 2258, 260, 294, 2112, 29877, 343, 29884, 446, 2502, 289, 2231, 2502, 413, 1416, 387, 744, 694, 911, 2502, 3855, 29875, 29939, 834, 29877, 343, 6946, 2502, 2258, 694, 11327, 325, 666, 1187, 5291, 649, 29874, 1321, 29920, 468, 744, 16165, 4324, 26461, 13, 24636, 29901, 278, 2319, 4344, 7213, 895, 263, 5172, 6635, 393, 674, 6023, 278, 15655, 8828, 561, 1144, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 21110, 6765, 20285, 793, 29889, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 4802, 8828, 561, 1144, 7124, 263, 15655, 6635, 5901, 29901, 20223, 339, 748, 345, 5796, 29893, 10178, 1324, 281, 352, 2192, 921, 459, 29884, 343, 287, 487, 3746, 325, 735, 271, 1509, 13, 24636, 29901, 263, 3273, 6635, 4188, 267, 15129, 1601, 8149, 5901, 29901, 281, 21528, 339, 734, 6905, 343, 287, 487, 1324, 281, 352, 2192, 343, 4614, 5796, 6905, 29926, 459, 29884, 734, 2766, 1181, 13, 24636, 29901, 263, 2319, 285, 9102, 393, 278, 15129, 2022, 7213, 4637, 674, 7124, 4802, 274, 1446, 5901, 29901, 20223, 339, 343, 4614, 343, 6096, 21074, 1324, 734, 29920, 1148, 29877, 2947, 281, 21528, 339, 285, 15490, 343, 387, 261, 7994, 281, 352, 2192, 748, 345, 29051, 487, 3746, 21062, 1509, 13, 24636, 29901, 263, 4802, 2278, 393, 278, 10135, 352, 681, 6635, 8370, 567, 674, 7124, 278, 15129, 1601, 8149, 5901, 29901, 20223, 339, 289, 545, 343, 287, 487, 1324, 19237, 339, 2947, 281, 21528, 339, 748, 345, 8007, 911, 29882, 8339, 7379, 8854, 343, 4614, 5796, 6905, 29926, 459, 29884, 21062, 1509, 13, 24636, 29901, 278, 15655, 285, 9102, 8370, 567, 3273, 8828, 561, 1144, 5901, 29901, 20223, 339, 921, 459, 29884, 343, 387, 261, 7994, 281, 352, 2192, 734, 6905, 5796, 29893, 314, 459, 29884, 19237, 339, 13, 24636, 29901, 4802, 8828, 561, 1144, 269, 6984, 4802, 274, 1446, 393, 269, 6984, 263, 3273, 2278, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 21110, 6765, 20285, 793, 29889, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15129, 14671, 3174, 7124, 5172, 4344, 5901, 29901, 13630, 9064, 1153, 5349, 29877, 343, 1314, 29875, 343, 688, 359, 5271, 921, 566, 275, 15647, 281, 29884, 29939, 747, 29875, 281, 2679, 271, 10091, 13, 24636, 29901, 278, 3273, 1601, 8149, 1074, 2319, 4344, 393, 21832, 263, 4802, 8828, 561, 262, 5901, 29901, 13630, 9064, 432, 1078, 29877, 302, 786, 29884, 343, 688, 359, 3270, 3855, 687, 359, 19266, 413, 861, 747, 29875, 5713, 26461, 29939, 387, 29875, 281, 29875, 343, 688, 359, 5271, 921, 566, 275, 15647, 731, 431, 29875, 4768, 2455, 10091, 13, 24636, 29901, 263, 2319, 6635, 674, 864, 278, 4802, 285, 9102, 5901, 29901, 343, 688, 3628, 304, 29890, 8069, 731, 29884, 13630, 359, 3270, 1153, 5349, 19266, 413, 861, 747, 29875, 5516, 29877, 3761, 13, 24636, 29901, 3273, 1601, 8149, 6456, 278, 4802, 26361, 5901, 29901, 343, 688, 9064, 432, 1078, 29877, 302, 786, 29884, 13630, 359, 5271, 503, 2112, 375, 15647, 413, 861, 747, 29875, 5713, 29939, 277, 10091, 13, 24636, 29901, 278, 15129, 1601, 1989, 18553, 5172, 14671, 3174, 393, 278, 4802, 26361, 674, 6456, 5901, 29901, 13630, 3628, 432, 1078, 29874, 343, 1314, 29875, 13630, 9064, 503, 2112, 10648, 413, 861, 29875, 5713, 29939, 19881, 17698, 281, 29875, 343, 688, 359, 5271, 1153, 5349, 15647, 281, 29884, 29939, 747, 29875, 4768, 29882, 2219, 13, 24636, 29901, 3273, 1601, 8149, 4446, 278, 2319, 6635, 393, 19572, 278, 4802, 285, 9102, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 21110, 6765, 20285, 793, 29889, 13, 29871, 10567, 29901, 29871, 5901, 29901, 302, 8107, 29939, 7078, 921, 5526, 282, 28106, 9616, 298, 335, 459, 29884, 425, 29916, 2142, 29875, 4099, 577, 17367, 1697, 4861, 2518, 4223, 29901, 263, 15655, 8828, 561, 262, 6023, 267, 278, 15129, 1601, 8149, 13, 16107, 29901, 298, 335, 3848, 29884, 302, 8107, 29939, 1032, 29872, 343, 6619, 1737, 8931, 2207, 343, 29884, 425, 17367, 29939, 7078, 577, 17367, 1697, 262, 9616, 3855, 2112, 348, 29884, 425, 29916, 2142, 29875, 4099, 281, 5363, 437, 346, 29882, 2518, 4223, 29901, 278, 15129, 1601, 1989, 393, 23051, 263, 2319, 2022, 674, 864, 278, 5172, 274, 5727, 13, 16107, 29901, 425, 17367, 29939, 7078, 343, 6619, 1737, 8931, 9616, 5700, 1022, 29884, 425, 17367, 29939, 1032, 29872, 282, 398, 29877, 2531, 264, 2207, 4223, 29901, 278, 2319, 2022, 1083, 13415, 278, 5232, 11203, 13, 16107, 29901, 302, 8107, 29939, 7078, 921, 5526, 2531, 264, 9616, 921, 261, 481, 29884, 343, 29884, 425, 17367, 29939, 7078, 343, 6619, 1574, 264, 9616, 298, 335, 459, 29884, 425, 17367, 29939, 1032, 29872, 281, 5363, 1737, 8931, 2207, 4223, 29901, 278, 2319, 11660, 393, 263, 15655, 11203, 766, 5081, 267, 6023, 267, 278, 5172, 2022, 13, 16107, 29901, 302, 440, 361, 7820, 577, 17367, 1697, 29875, 2350, 827, 921, 261, 1175, 1540, 5700, 1022, 29884, 302, 8107, 29939, 1032, 29872, 343, 6619, 1574, 264, 2207, 343, 29884, 302, 8107, 29939, 1032, 29872, 921, 5526, 1737, 8931, 2207, 4223, 29901, 15129, 1601, 8149, 766, 5081, 287, 263, 15655, 2022, 393, 1083, 13415, 263, 2319, 11660, 13, 16107, 29901, 425, 17367, 29939, 7078, 921, 5526, 2531, 264, 9616, 5700, 1022, 29884, 302, 440, 6832, 4099, 281, 5363, 437, 346, 29882, 2518, 4223, 29901, 29871, 29871, 10604, 29901, 29871]] [[503, 15705, 354, 2291, 2930, 29893, 7003, 7251, 29939, 7003, 260, 1314, 7207, 921, 29875, 2930, 29893, 7003, 2331, 7003, 14322, 7207, 325, 1175, 801, 10100, 2930, 29893, 7003, 330, 375, 3543, 503, 381, 7207], [278, 4802, 8828, 561, 262, 21832, 278, 4802, 285, 9102], [278, 2319, 2278, 393, 278, 4802, 1601, 1989, 7124, 7213, 4637, 278, 3273, 11203, 393, 263, 2319, 2278, 21832], [263, 15655, 285, 9102, 19572, 263, 3273, 11660]]
Initial Loss: 13.930776596069336
start ij pos optimization
optimized
4 Loss: 10.234055519104004
NI sechsVor Solve Rosetta Stone-style linguistics puzzles.


optimized
5 Loss: 7.348573684692383
NI verschVor Solve Rosetta Stone-style linguistics puzzles.


6 Loss: 7.348573684692383
NI verschVor Solve Rosetta Stone-style linguistics puzzles.


optimized
14 Loss: 7.190809726715088
NI verschVor Solve Rosetta Stone-style avevaistics puzzles.


optimized
17 Loss: 7.173056602478027
NI verschVor Solve Rosetta Stone-style avevaistics puzz Teil.


optimized
18 Loss: 7.169022560119629
NI verschVor Solve Rosetta Stone-style avevaistics puzz Teil etwas


Initial VF Loss: 2.5117154121398926
start vf pos optimization
optimized
24 Loss: 2.36383318901062
NagdefinedLprev西

optimized
25 Loss: 2.2788641452789307
Nag KnightLprev西

optimized
26 Loss: 2.186838388442993
Nag Knightsetminusprev西

27 Loss: 2.186838388442993
Nag Knightsetminusprev西

optimized
28 Loss: 2.1732969284057617
Nag KnightsetminusprevPRI

1
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 12916, 8038, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 7770, 23452, 13, 29871, 10567, 29901, 29871, 5901, 29901, 4677, 29875, 281, 431, 375, 29875, 3008, 29884, 29939, 29872, 4677, 666, 29874, 432, 275, 10770, 432, 10058, 29939, 1032, 29877, 921, 542, 532, 4223, 29901, 278, 15129, 285, 9102, 4446, 278, 2319, 6635, 13, 16107, 29901, 4677, 29875, 302, 388, 3543, 1055, 412, 24845, 696, 446, 3274, 8870, 7207, 343, 586, 586, 8631, 29877, 3516, 4677, 29875, 432, 275, 7820, 3008, 4090, 29884, 301, 381, 1137, 2219, 260, 4983, 15297, 4223, 29901, 278, 10135, 352, 681, 26361, 6023, 5172, 1601, 8149, 393, 278, 2319, 14671, 3174, 674, 766, 4561, 13, 16107, 29901, 696, 446, 302, 388, 3543, 343, 586, 586, 29884, 4677, 666, 29874, 281, 431, 375, 29875, 3008, 29884, 29939, 1032, 29877, 921, 542, 271, 2219, 4223, 29901, 10135, 352, 681, 1601, 8149, 4446, 278, 15129, 285, 9102, 13, 16107, 29901, 4677, 29875, 281, 431, 7207, 1055, 412, 24845, 4677, 666, 29874, 432, 275, 10770, 285, 2606, 29939, 1032, 29877, 281, 29884, 2455, 2219, 4223, 29901, 278, 15129, 26361, 23289, 278, 2319, 11199, 13, 16107, 29901, 4677, 29875, 432, 275, 10770, 343, 6962, 29939, 29872, 696, 446, 3274, 3516, 29939, 3543, 432, 638, 440, 8631, 29877, 260, 457, 5444, 4223, 29901, 278, 2319, 1601, 1989, 674, 6023, 15655, 274, 1446, 13, 16107, 29901, 696, 446, 281, 431, 375, 29875, 3008, 29884, 29939, 29872, 4677, 666, 29874, 432, 275, 7820, 11092, 440, 8631, 29877, 27773, 1187, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12916, 8038, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 7770, 23452, 13, 29871, 10567, 29901, 29871, 5901, 29901, 2723, 535, 29884, 4353, 15243, 2251, 1389, 29884, 270, 562, 2251, 1389, 29884, 364, 2679, 482, 302, 747, 4090, 361, 29884, 437, 29920, 440, 361, 29884, 364, 2679, 20593, 24800, 591, 24912, 10648, 364, 381, 4090, 361, 29884, 921, 397, 4090, 361, 29884, 364, 2679, 20593, 4223, 29901, 278, 4802, 8828, 561, 1144, 269, 6984, 278, 10135, 352, 681, 4344, 393, 674, 766, 4561, 278, 15655, 274, 5727, 13, 16107, 29901, 592, 29888, 10648, 9775, 861, 10896, 437, 29920, 861, 10896, 364, 2679, 482, 364, 381, 4090, 361, 29884, 921, 397, 4090, 361, 29884, 260, 1450, 1314, 29875, 24800, 274, 1682, 13447, 15243, 2251, 10896, 343, 331, 861, 10896, 364, 2679, 482, 4223, 29901, 278, 10135, 352, 681, 285, 9102, 674, 864, 15655, 274, 5727, 393, 278, 2319, 8828, 561, 262, 8370, 567, 13, 16107, 29901, 2723, 535, 29884, 4353, 364, 381, 1314, 1389, 29884, 343, 331, 861, 1389, 29884, 364, 2679, 482, 260, 2679, 440, 361, 29884, 413, 398, 586, 361, 29884, 260, 1450, 1314, 29875, 4223, 29901, 278, 2319, 274, 5727, 269, 6984, 3273, 26361, 13, 16107, 29901, 2723, 535, 29884, 4353, 921, 1175, 1314, 1389, 29884, 343, 625, 29916, 1389, 29884, 260, 1450, 5710, 302, 747, 4090, 361, 29884, 270, 562, 586, 361, 29884, 260, 1450, 1314, 29875, 4223, 29901, 5232, 2305, 269, 6984, 4802, 4344, 13, 16107, 29901, 591, 1362, 4353, 15243, 2251, 10896, 413, 398, 2251, 10896, 364, 2679, 482, 921, 1175, 4090, 361, 29884, 437, 29920, 440, 361, 29884, 260, 1450, 1314, 29875, 4223, 29901, 278, 3273, 8828, 561, 262, 766, 5081, 267, 10135, 352, 681, 2305, 13, 16107, 29901, 2723, 535, 29884, 4353, 364, 381, 1314, 1389, 29884, 921, 397, 1314, 1389, 29884, 260, 1450, 5710, 260, 2679, 440, 361, 29884, 413, 398, 586, 361, 29884, 260, 1450, 1314, 29875, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12916, 8038, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 7770, 23452, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15129, 2022, 393, 7213, 4637, 278, 3273, 11199, 674, 1074, 278, 5232, 1601, 8149, 5901, 29901, 2652, 29884, 26652, 388, 29875, 343, 2638, 25675, 4768, 5735, 21154, 911, 2652, 15547, 540, 29939, 388, 3350, 8879, 455, 29891, 3350, 4084, 29894, 361, 29884, 1111, 2652, 15547, 281, 15008, 29926, 1489, 413, 533, 29926, 1489, 13, 24636, 29901, 278, 5232, 4344, 8370, 2986, 263, 4802, 11203, 393, 263, 2319, 2022, 1083, 13415, 5901, 29901, 2652, 29884, 503, 2004, 1324, 413, 533, 1324, 285, 431, 340, 326, 29884, 868, 29893, 10233, 868, 2502, 29891, 3350, 282, 387, 388, 3350, 4768, 868, 4353, 26652, 388, 29875, 2203, 12602, 29875, 21896, 361, 29884, 911, 13, 24636, 29901, 278, 4802, 4344, 5131, 278, 2319, 274, 1446, 5901, 29901, 2652, 29884, 503, 2004, 1324, 282, 387, 8339, 432, 568, 29893, 326, 29884, 2652, 15547, 298, 387, 1175, 1489, 2203, 3848, 1489, 13, 24636, 29901, 278, 10135, 352, 681, 11199, 393, 674, 6456, 263, 15129, 11203, 7213, 4637, 278, 5232, 2022, 5901, 29901, 2652, 29884, 540, 29939, 388, 29875, 921, 10648, 25675, 4768, 21896, 361, 29884, 1111, 868, 29893, 10233, 868, 2502, 29891, 3350, 343, 2638, 29891, 3350, 5735, 21154, 911, 2652, 15547, 26652, 388, 3350, 413, 533, 29891, 3350, 13, 24636, 29901, 263, 2319, 11199, 4446, 263, 5232, 2278, 5901, 29901, 868, 4353, 540, 29939, 388, 29875, 2203, 12602, 29875, 4084, 29894, 361, 398, 29884, 868, 29893, 10233, 20534, 1032, 3350, 413, 533, 29891, 3350, 13, 24636, 29901, 263, 2319, 2022, 1083, 13415, 278, 4802, 2022, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12916, 8038, 14147, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 7770, 23452, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 4802, 6635, 4188, 267, 263, 15655, 11199, 393, 19572, 263, 5172, 2278, 5901, 29901, 285, 1187, 827, 10871, 1607, 921, 3848, 29556, 1737, 1362, 1725, 439, 29891, 398, 29556, 2949, 29556, 330, 1314, 361, 974, 29872, 8534, 432, 2442, 827, 2930, 29893, 398, 29556, 1153, 1564, 1725, 330, 1314, 361, 974, 29872, 13, 24636, 29901, 278, 5172, 8828, 561, 1144, 766, 4561, 278, 15129, 17952, 393, 763, 15655, 2305, 5901, 29901, 343, 747, 9429, 8887, 17261, 1099, 27710, 1648, 17364, 1648, 439, 29891, 398, 4347, 281, 466, 1648, 1737, 1362, 29888, 2681, 8534, 285, 1187, 29893, 8887, 286, 554, 290, 4347, 2949, 4347, 330, 1314, 361, 2681, 13, 24636, 29901, 263, 5232, 2278, 6023, 267, 4802, 26361, 5901, 29901, 3855, 29872, 2526, 827, 2930, 29893, 29556, 8177, 974, 29872, 330, 1314, 1607, 6216, 314, 4347, 921, 3848, 4347, 330, 1314, 361, 2681, 13, 24636, 29901, 278, 15129, 17952, 7124, 263, 5172, 2278, 5901, 29901, 432, 387, 370, 6191, 439, 29891, 4347, 281, 466, 1648, 17364, 1648, 2930, 29893, 398, 29556, 1153, 1564, 1725, 330, 1314, 361, 974, 29872, 13, 24636, 29901, 263, 3273, 2278, 23289, 4802, 26361, 5901, 29901, 27431, 370, 29884, 2930, 29893, 29556, 591, 8782, 29872, 330, 1314, 1607, 6216, 314, 4347, 921, 3848, 4347, 330, 1314, 361, 2681, 13, 24636, 29901, 278, 15655, 2022, 4188, 267, 5172, 4344, 5901, 29901, 29871, 29871, 10604, 29901, 29871]] [[278, 4802, 6635, 393, 674, 1074, 278, 5172, 11660, 674, 864, 278, 2319, 8828, 561, 262, 393, 674, 269, 6984, 278, 15129, 8828, 561, 262], [413, 8631, 29745, 413, 1314, 1148, 29884, 413, 786, 29884, 1251, 921, 29875, 413, 8631, 29745, 413, 566, 13188, 413, 329, 8631, 29884, 425, 29916, 861, 29872, 413, 7262, 861, 29872, 413, 29884, 911, 1564, 413, 329, 8631, 29884, 17052, 6840], [413, 1416, 747, 29877, 432, 1022, 398, 12737, 5291, 29893, 331, 4170, 439, 432, 328, 747, 29877, 432, 1022, 375, 12737, 1321, 29926, 466, 1306, 19741, 22971, 19493, 4814, 2766, 432, 328, 3350, 14631, 290, 19881, 29884, 298, 1137, 331, 12602, 29884], [278, 5172, 11199, 766, 5081, 287, 278, 15129, 2022]]
Initial Loss: 9.050657272338867
start ij pos optimization
4 Loss: 9.050657272338867
NI verschVor Solve Rosetta Stone-style avevaistics puzz Teil etwas


optimized
5 Loss: 7.307258605957031
NI densVor Solve Rosetta Stone-style avevaistics puzz Teil etwas


optimized
6 Loss: 6.752963066101074
NI densBase Solve Rosetta Stone-style avevaistics puzz Teil etwas


14 Loss: 6.752963066101074
NI densBase Solve Rosetta Stone-style avevaistics puzz Teil etwas


optimized
17 Loss: 6.718711853027344
NI densBase Solve Rosetta Stone-style avevaistics puzz Nom etwas


optimized
18 Loss: 6.66878080368042
NI densBase Solve Rosetta Stone-style avevaistics puzz NomChange


Initial VF Loss: 1.9980031251907349
start vf pos optimization
optimized
24 Loss: 1.8078441619873047
NA KnightsetminusprevPRI

optimized
25 Loss: 1.6775715351104736
NA FritzsetminusprevPRI

optimized
26 Loss: 1.531459093093872
NA FritzSTARTprevPRI

optimized
27 Loss: 1.5269486904144287
NA FritzSTARTincludingPRI

28 Loss: 1.5269486904144287
NA FritzSTARTincludingPRI

2
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 12916, 6245, 5160, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 20583, 7277, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 2319, 1601, 1989, 10753, 278, 15129, 17952, 393, 263, 10135, 352, 681, 11203, 23051, 5901, 29901, 9449, 26281, 503, 5526, 2120, 301, 356, 29890, 2231, 1480, 8044, 9449, 29884, 2502, 921, 267, 15844, 289, 293, 29884, 2350, 29939, 29872, 694, 12642, 2442, 274, 3350, 2120, 281, 747, 747, 2231, 2529, 809, 29875, 13, 24636, 29901, 263, 5172, 11203, 6023, 267, 263, 10135, 352, 681, 11660, 5901, 29901, 12642, 2442, 269, 834, 18282, 281, 747, 747, 2231, 2529, 29872, 1764, 12642, 29872, 2502, 274, 3350, 2120, 1729, 412, 5365, 29939, 29872, 13, 24636, 29901, 2319, 1601, 8149, 766, 4561, 263, 5172, 8828, 561, 262, 5901, 29901, 12642, 2442, 503, 335, 4749, 301, 356, 29882, 482, 7245, 6946, 1764, 12642, 29872, 2502, 269, 834, 18282, 1238, 29939, 747, 29875, 29939, 29872, 13, 24636, 29901, 278, 3273, 11660, 393, 278, 5232, 26361, 864, 674, 269, 6984, 278, 5172, 1601, 1989, 5901, 29901, 9449, 26281, 274, 542, 29884, 2120, 1729, 412, 29890, 2231, 694, 9449, 26281, 289, 4395, 29875, 281, 747, 4861, 482, 1480, 9345, 1764, 274, 326, 1165, 29877, 9449, 29884, 2502, 269, 834, 18282, 301, 356, 5365, 29939, 29872, 13, 24636, 29901, 278, 5172, 11203, 674, 269, 6984, 2319, 274, 1446, 5901, 29901, 9449, 26281, 269, 834, 18282, 281, 747, 747, 2231, 274, 326, 1165, 29877, 12642, 29872, 2502, 503, 335, 4749, 330, 333, 29884, 2350, 29939, 29872, 13, 24636, 29901, 278, 2319, 274, 5727, 269, 6984, 263, 5172, 8828, 561, 262, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12916, 6245, 5160, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 20583, 7277, 13, 29871, 10567, 29901, 29871, 5901, 29901, 260, 29745, 339, 705, 25506, 11321, 3587, 340, 7207, 3593, 29875, 868, 25506, 29884, 1612, 7262, 29884, 3855, 22803, 10345, 11290, 705, 285, 1032, 11321, 1153, 2120, 29939, 7078, 3855, 10617, 4223, 29901, 278, 15655, 11203, 393, 8370, 2986, 278, 2319, 285, 9102, 674, 1074, 3273, 1601, 8149, 13, 16107, 29901, 260, 5114, 29874, 705, 285, 1032, 11321, 1612, 29884, 29939, 7078, 3593, 29875, 868, 285, 1032, 29884, 15296, 809, 29884, 4005, 705, 5401, 361, 4657, 25506, 11321, 316, 1484, 29939, 7078, 3855, 10617, 4223, 29901, 263, 5172, 11199, 393, 674, 6023, 2319, 26361, 1083, 13415, 278, 3273, 14671, 3174, 13, 16107, 29901, 25506, 29884, 15296, 809, 29884, 3855, 22803, 260, 598, 339, 705, 25506, 29884, 1612, 7262, 29884, 3593, 29875, 269, 834, 2142, 4657, 868, 25506, 11321, 2257, 1403, 29893, 7207, 281, 1489, 4223, 29901, 278, 15655, 11199, 23051, 278, 15129, 11660, 393, 278, 2319, 11203, 10753, 13, 16107, 29901, 285, 1032, 29884, 15296, 809, 29884, 432, 261, 29884, 269, 834, 2142, 4657, 285, 1032, 29884, 1612, 29884, 29939, 29872, 3593, 29875, 301, 3365, 375, 370, 29877, 868, 25506, 11321, 1153, 2120, 29893, 7207, 281, 1489, 4223, 29901, 263, 5232, 11199, 10753, 278, 15129, 1601, 1989, 393, 2319, 26361, 674, 763, 13, 16107, 29901, 285, 1032, 29884, 15296, 809, 29884, 4005, 705, 260, 29745, 339, 705, 285, 1032, 11321, 1612, 7262, 7207, 3855, 10617, 4223, 29901, 263, 5172, 11199, 8370, 2986, 263, 3273, 11203, 13, 16107, 29901, 285, 1032, 29884, 1612, 7262, 29884, 3855, 10617, 10345, 11290, 705, 285, 1032, 11321, 1153, 2120, 29939, 7078, 3593, 29875, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12916, 6245, 5160, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 20583, 7277, 13, 29871, 10567, 29901, 29871, 5901, 29901, 282, 370, 1165, 786, 29884, 6659, 29877, 3855, 29875, 29939, 3270, 5291, 282, 370, 1137, 666, 29884, 343, 598, 696, 10278, 29875, 1302, 29916, 735, 6235, 1302, 29916, 1032, 29874, 25621, 282, 1175, 440, 3304, 8879, 354, 3855, 29875, 29939, 598, 4223, 29901, 5232, 4344, 393, 278, 2319, 17952, 7213, 3368, 21832, 4802, 274, 5727, 13, 16107, 29901, 921, 747, 1137, 666, 29884, 343, 598, 3855, 29875, 29939, 3270, 367, 29891, 4233, 5112, 273, 3304, 6659, 29877, 696, 29883, 406, 4223, 29901, 263, 2319, 11199, 6023, 267, 278, 5232, 26361, 13, 16107, 29901, 282, 2142, 554, 786, 29884, 8879, 354, 3855, 29875, 29939, 3270, 1302, 29916, 1032, 29874, 25621, 282, 1165, 834, 3304, 6659, 29877, 696, 29883, 406, 4223, 29901, 4802, 8828, 561, 1144, 21832, 278, 5232, 2305, 13, 16107, 29901, 921, 747, 1165, 786, 29884, 592, 4353, 3855, 29875, 29939, 3270, 11151, 974, 29884, 921, 747, 1137, 2946, 6659, 29877, 3855, 29875, 29939, 598, 4223, 29901, 263, 3273, 2278, 8370, 567, 263, 5232, 11199, 13, 16107, 29901, 282, 370, 1165, 786, 29884, 592, 4353, 696, 10278, 29875, 577, 29916, 6096, 974, 29884, 921, 747, 1137, 2946, 6659, 29877, 3855, 29875, 29939, 598, 5291, 921, 861, 834, 481, 29884, 413, 9447, 696, 10278, 29875, 577, 29939, 326, 29884, 4223, 29901, 278, 3273, 4344, 674, 269, 6984, 263, 5232, 11199, 393, 278, 10135, 352, 681, 2022, 674, 7124, 13, 16107, 29901, 921, 823, 440, 481, 29884, 6659, 29877, 696, 10278, 29875, 577, 3761, 25621, 282, 2142, 554, 10859, 343, 598, 696, 29883, 406, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12916, 6245, 5160, 4956, 345, 5678, 11300, 15681, 29899, 3293, 14490, 6765, 20285, 20583, 7277, 13, 29871, 10567, 29901, 29871, 4223, 29901, 3273, 274, 1446, 7213, 895, 278, 15129, 26361, 393, 278, 4802, 2278, 4446, 5901, 29901, 10107, 827, 611, 2212, 26461, 9922, 25621, 503, 7207, 1236, 339, 3746, 325, 1314, 29877, 3855, 7820, 29939, 10178, 1236, 503, 7207, 1321, 4900, 26461, 286, 1572, 921, 1022, 9154, 2397, 13, 24636, 29901, 278, 15129, 8828, 561, 262, 393, 278, 4802, 274, 1446, 1074, 766, 5081, 287, 263, 5172, 2022, 393, 7213, 3368, 278, 10135, 352, 681, 14671, 3174, 5901, 29901, 503, 7207, 611, 2212, 26461, 325, 1314, 29877, 3855, 309, 9154, 2397, 1236, 503, 7207, 1697, 459, 29884, 286, 1572, 503, 7207, 5089, 346, 26461, 5812, 26461, 921, 1022, 29877, 29939, 10178, 1236, 10107, 827, 2653, 29939, 459, 29884, 7015, 29875, 658, 339, 29939, 10178, 13, 24636, 29901, 278, 5232, 2278, 674, 7213, 895, 278, 10135, 352, 681, 26361, 393, 278, 3273, 6635, 674, 1074, 5901, 29901, 503, 7207, 1236, 339, 3746, 285, 711, 29877, 503, 7207, 10067, 459, 29884, 9922, 25621, 3855, 7820, 29939, 9919, 1236, 503, 7207, 1321, 4900, 26461, 5812, 26461, 921, 1022, 29877, 29939, 9919, 13, 24636, 29901, 3273, 2305, 4446, 278, 10135, 352, 681, 2278, 393, 674, 766, 4561, 4802, 26361, 5901, 29901, 10107, 827, 2653, 29939, 29877, 26461, 9922, 25621, 10107, 827, 1321, 4900, 26461, 325, 1314, 29877, 658, 339, 29939, 9919, 1236, 503, 7207, 1236, 339, 3746, 5812, 26461, 3855, 309, 554, 398, 29877, 13, 24636, 29901, 263, 10135, 352, 681, 2022, 393, 278, 3273, 2278, 4446, 674, 766, 4561, 5172, 14671, 3174, 5901, 29901, 503, 7207, 1236, 339, 3746, 9922, 25621, 3855, 7820, 29939, 10178, 1236, 10107, 827, 2653, 29939, 459, 29884, 5812, 26461, 10107, 827, 5089, 346, 26461, 7015, 29875, 658, 339, 29939, 9919, 13, 24636, 29901, 15129, 4344, 674, 1074, 278, 10135, 352, 681, 26361, 5901, 29901, 29871, 29871, 10604, 29901, 29871]] [[304, 700, 343, 6096, 29884, 1362, 480, 412, 281, 273, 1032, 29872, 639, 351, 2251, 29872, 413, 4861, 3747, 25194, 666, 4814], [263, 15129, 11199, 674, 763, 263, 10135, 352, 681, 11660], [5172, 4344, 23289, 263, 15655, 11199, 393, 263, 5232, 285, 9102, 10753], [278, 5232, 4344, 674, 6456, 4802, 26361, 393, 278, 5172, 11203, 674, 1074]]
Initial Loss: 7.393348217010498
start ij pos optimization
optimized
4 Loss: 6.471108436584473
HA densBase Solve Rosetta Stone-style avevaistics puzz NomChange


5 Loss: 6.471108436584473
HA densBase Solve Rosetta Stone-style avevaistics puzz NomChange


optimized
6 Loss: 6.207632541656494
HA dens AF Solve Rosetta Stone-style avevaistics puzz NomChange


optimized
14 Loss: 6.1146063804626465
HA dens AF Solve Rosetta Stone-style luglioistics puzz NomChange


optimized
17 Loss: 6.0018720626831055
HA dens AF Solve Rosetta Stone-style luglioistics puzzConneChange


optimized
18 Loss: 5.865853309631348
HA dens AF Solve Rosetta Stone-style luglioistics puzzConneaterra


Initial VF Loss: 2.002570867538452
start vf pos optimization
24 Loss: 2.002570867538452
NA FritzSTARTincludingPRI

optimized
25 Loss: 1.9102271795272827
NA HessenSTARTincludingPRI

optimized
26 Loss: 1.8565651178359985
NA HessenGridViewincludingPRI

27 Loss: 1.8565651178359985
NA HessenGridViewincludingPRI

optimized
28 Loss: 1.7547435760498047
NA HessenGridViewincludingMQ

3
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 15715, 6245, 23844, 4956, 345, 5678, 11300, 15681, 29899, 3293, 17154, 6765, 20285, 20971, 27361, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 2319, 11199, 19572, 278, 5172, 274, 1446, 5901, 29901, 589, 29875, 304, 2291, 413, 2679, 4749, 269, 14408, 589, 29875, 1251, 772, 2526, 29939, 29877, 343, 359, 29884, 29939, 29877, 339, 13, 24636, 29901, 263, 2319, 6635, 393, 3273, 8828, 561, 1144, 674, 766, 4561, 674, 763, 263, 10135, 352, 681, 11199, 393, 278, 4802, 285, 9102, 18553, 5901, 29901, 734, 5365, 304, 2291, 343, 359, 4749, 1238, 734, 5365, 285, 18282, 274, 1032, 29884, 339, 17233, 21025, 9029, 330, 272, 8631, 29877, 734, 5365, 1251, 577, 21154, 29939, 29877, 413, 29884, 2120, 29939, 12143, 1238, 589, 29875, 343, 326, 29884, 748, 29916, 10129, 304, 854, 29877, 13, 24636, 29901, 263, 2319, 8828, 561, 262, 5131, 263, 5172, 11199, 5901, 29901, 734, 5365, 304, 2291, 274, 1032, 4749, 3514, 29884, 4353, 734, 5365, 1251, 772, 2526, 29939, 29877, 413, 29884, 2120, 29939, 12143, 13, 24636, 29901, 278, 5172, 17952, 4446, 10135, 352, 681, 274, 1446, 5901, 29901, 589, 29875, 772, 2526, 413, 29884, 2120, 339, 304, 345, 1984, 4353, 734, 5365, 1251, 577, 21154, 29939, 29877, 343, 359, 29884, 29939, 29877, 339, 13, 24636, 29901, 278, 4802, 11660, 674, 766, 4561, 278, 10135, 352, 681, 1601, 1989, 5901, 29901, 589, 29875, 343, 326, 29884, 447, 29916, 8819, 269, 4425, 9029, 589, 29875, 1251, 577, 21154, 29939, 29877, 7916, 29874, 29939, 12143, 13, 24636, 29901, 278, 3273, 1601, 1989, 23289, 10135, 352, 681, 17952, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15715, 6245, 23844, 4956, 345, 5678, 11300, 15681, 29899, 3293, 17154, 6765, 20285, 20971, 27361, 13, 29871, 10567, 29901, 29871, 4223, 29901, 263, 4802, 11660, 1083, 13415, 263, 2319, 1601, 1989, 5901, 29901, 289, 6962, 5025, 1562, 285, 532, 5389, 289, 586, 4273, 285, 557, 1137, 29877, 285, 1165, 625, 3746, 274, 1070, 29875, 13, 24636, 29901, 278, 4802, 1601, 1989, 393, 674, 1074, 5232, 274, 5727, 21832, 278, 10135, 352, 681, 11203, 5901, 29901, 337, 2918, 5025, 1562, 285, 1165, 625, 7251, 289, 586, 4273, 1153, 29926, 29017, 364, 532, 29916, 666, 29884, 503, 397, 18673, 337, 29882, 4244, 5216, 1458, 2215, 277, 786, 29884, 343, 324, 1306, 13, 24636, 29901, 10135, 352, 681, 17952, 393, 278, 15129, 4344, 674, 763, 1074, 278, 2319, 274, 5727, 5901, 29901, 289, 6962, 13472, 1458, 13472, 361, 29877, 7251, 337, 2918, 10650, 361, 29877, 2971, 29884, 4353, 298, 3365, 340, 2442, 337, 29882, 4244, 1153, 29895, 1137, 29877, 364, 532, 29916, 666, 29884, 298, 1682, 566, 18673, 13, 24636, 29901, 15129, 8828, 561, 1144, 393, 7124, 4802, 17952, 674, 1074, 5172, 274, 5727, 5901, 29901, 289, 6962, 10650, 361, 29877, 364, 279, 1654, 7251, 289, 586, 4273, 1153, 13288, 13472, 361, 459, 29884, 298, 8631, 397, 10178, 289, 586, 4273, 2971, 20144, 364, 532, 29916, 666, 29884, 298, 3365, 397, 18673, 13, 24636, 29901, 278, 15129, 11203, 674, 6023, 278, 5232, 274, 5727, 5901, 29901, 337, 2918, 285, 1450, 361, 29877, 2215, 1981, 337, 29882, 4244, 1153, 29926, 29017, 364, 532, 29916, 666, 29884, 8534, 2397, 1251, 13, 24636, 29901, 278, 4802, 274, 5727, 23289, 10135, 352, 681, 26361, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15715, 6245, 23844, 4956, 345, 5678, 11300, 15681, 29899, 3293, 17154, 6765, 20285, 20971, 27361, 13, 29871, 10567, 29901, 29871, 4223, 29901, 10135, 352, 681, 274, 1446, 674, 7124, 278, 5172, 17952, 393, 278, 15655, 26361, 8370, 2986, 5901, 29901, 285, 406, 2397, 452, 26994, 2112, 29884, 2858, 29877, 354, 15093, 823, 29017, 270, 11216, 2397, 592, 29939, 326, 2112, 29884, 1045, 339, 354, 3516, 29893, 711, 1148, 29884, 1045, 270, 562, 9616, 1321, 29895, 1165, 466, 29884, 270, 866, 354, 13, 24636, 29901, 15655, 8828, 561, 1144, 674, 6023, 263, 2319, 6635, 393, 21832, 278, 4802, 285, 9102, 5901, 29901, 285, 406, 2397, 5796, 8008, 2112, 29884, 1045, 339, 354, 13160, 3848, 29017, 4329, 431, 29877, 270, 562, 9616, 921, 398, 8990, 29884, 696, 479, 4353, 1045, 285, 406, 827, 452, 29882, 861, 28311, 282, 1032, 1450, 29875, 13, 24636, 29901, 278, 10135, 352, 681, 8828, 561, 1144, 393, 3273, 274, 1446, 23051, 763, 278, 2319, 285, 9102, 393, 278, 5172, 11203, 7124, 5901, 29901, 285, 406, 2397, 452, 26994, 2112, 29884, 872, 1181, 354, 13160, 711, 1148, 29884, 1045, 270, 11216, 2397, 5796, 8008, 2112, 29884, 2858, 29877, 354, 6432, 361, 29017, 270, 11216, 2397, 592, 29939, 18594, 29884, 8329, 809, 29875, 15093, 747, 29877, 1045, 270, 562, 9616, 921, 398, 8990, 29884, 282, 1032, 1450, 29875, 13, 24636, 29901, 278, 2319, 1601, 8149, 4446, 278, 5172, 17952, 393, 6456, 263, 3273, 285, 9102, 5901, 29901, 270, 11216, 2397, 24988, 314, 2112, 29884, 282, 1032, 29874, 354, 286, 1314, 774, 1148, 29884, 4329, 1137, 29017, 285, 406, 827, 921, 398, 8990, 29884, 9437, 13447, 1045, 270, 562, 9616, 1321, 29895, 1165, 466, 29884, 270, 866, 354, 13, 24636, 29901, 15655, 1601, 8149, 674, 763, 278, 3273, 17952, 393, 5172, 14671, 3174, 1074, 5901, 29901, 285, 406, 2397, 24988, 314, 2112, 29884, 1045, 339, 354, 274, 3875, 29017, 285, 406, 2397, 921, 398, 314, 2112, 29884, 270, 866, 354, 286, 1314, 1389, 29017, 1045, 270, 562, 9616, 1321, 29895, 1165, 466, 29884, 872, 1181, 354, 13, 24636, 29901, 278, 15655, 8828, 561, 1144, 393, 23289, 278, 5172, 14671, 3174, 7124, 3273, 14671, 3174, 393, 23289, 3273, 26361, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15715, 6245, 23844, 4956, 345, 5678, 11300, 15681, 29899, 3293, 17154, 6765, 20285, 20971, 27361, 13, 29871, 10567, 29901, 29871, 4223, 29901, 2319, 26361, 674, 763, 278, 5232, 2305, 5901, 29901, 282, 420, 17367, 282, 866, 413, 4657, 2918, 325, 8016, 735, 29874, 921, 29872, 2526, 343, 19881, 29875, 2918, 286, 1297, 941, 29939, 29877, 13, 24636, 29901, 5232, 8828, 561, 1144, 7124, 263, 15129, 285, 9102, 393, 278, 5172, 4344, 674, 763, 5901, 29901, 577, 29920, 735, 29874, 921, 29872, 2526, 413, 4657, 2918, 301, 3365, 1165, 29874, 3855, 711, 29884, 343, 19881, 29875, 2918, 286, 1297, 941, 29939, 29877, 3855, 29874, 480, 339, 2526, 5796, 1251, 413, 340, 735, 29875, 274, 562, 532, 2502, 13, 24636, 29901, 278, 2319, 274, 5727, 5131, 278, 15129, 2278, 5901, 29901, 2930, 2126, 29874, 282, 866, 343, 19881, 29875, 2918, 301, 3365, 18861, 5796, 1251, 343, 19881, 861, 29875, 20710, 300, 834, 29877, 13, 24636, 29901, 5172, 4344, 393, 6456, 5232, 8828, 561, 1144, 5131, 263, 15129, 2022, 5901, 29901, 577, 29920, 735, 29874, 921, 29872, 2526, 413, 4657, 2918, 503, 397, 329, 19266, 3855, 29874, 301, 3365, 1165, 29874, 3855, 711, 29884, 413, 4657, 2918, 325, 7994, 2526, 5796, 1251, 413, 340, 735, 29875, 20710, 300, 834, 29877, 13, 24636, 29901, 263, 15655, 285, 9102, 674, 1074, 278, 3273, 2305, 393, 21832, 263, 5172, 2278, 5901, 29901, 480, 339, 2526, 23222, 413, 340, 735, 29875, 301, 3365, 18861, 3855, 711, 29884, 413, 340, 735, 29875, 503, 397, 329, 834, 29877, 3855, 29874, 325, 8016, 735, 29874, 274, 8069, 343, 19881, 29875, 2918, 437, 1984, 29939, 29877, 13, 24636, 29901, 278, 5232, 8828, 561, 1144, 1074, 263, 2319, 2278, 5901, 29901, 29871, 29871, 10604, 29901, 29871]] [[278, 3273, 8828, 561, 1144, 7213, 3368, 278, 4802, 274, 1446], [1986, 1362, 503, 28334, 412, 3855, 774, 29874, 5796, 1302, 29916, 29877, 2212, 4022, 1181, 29939, 29877, 5796, 2502, 413, 264, 5711, 29875, 432, 747, 10058, 5331, 2754, 3855, 774, 29874, 5796, 274, 711, 10058, 4022, 1181, 29939, 29877, 5796, 2502, 4707, 370, 29884, 2502, 413, 264, 388, 26056], [25194, 20424, 454, 3733, 29884, 274, 388, 295, 29884, 343, 1148, 7207, 14452, 284, 6191, 2257, 29926, 352, 1151, 432, 562, 284, 1151], [263, 5172, 11660, 393, 278, 3273, 26361, 674, 7213, 895, 674, 864, 278, 3273, 8828, 561, 1144]]
Initial Loss: 7.462705612182617
start ij pos optimization
optimized
4 Loss: 7.314797401428223
Ana dens AF Solve Rosetta Stone-style luglioistics puzzConneaterra


5 Loss: 7.314797401428223
Ana dens AF Solve Rosetta Stone-style luglioistics puzzConneaterra


optimized
6 Loss: 6.764174461364746
Ana densmarine Solve Rosetta Stone-style luglioistics puzzConneaterra


optimized
14 Loss: 6.545085906982422
Ana densmarine Solve Rosetta Stone-style Floristics puzzConneaterra


optimized
17 Loss: 6.518693447113037
Ana densmarine Solve Rosetta Stone-style Floristics puzz statedaterra


18 Loss: 6.518693447113037
Ana densmarine Solve Rosetta Stone-style Floristics puzz statedaterra


Initial VF Loss: 2.1971137523651123
start vf pos optimization
optimized
24 Loss: 1.9678077697753906
Dan HessenGridViewincludingMQ

optimized
25 Loss: 1.6702371835708618
Dan tranGridViewincludingMQ

optimized
26 Loss: 1.4665788412094116
Dan tranPythonincludingMQ

optimized
27 Loss: 1.3456016778945923
Dan tranPython srcMQ

optimized
28 Loss: 1.2150323390960693
Dan tranPython src ve

4
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 20367, 6245, 24556, 4956, 345, 5678, 11300, 15681, 29899, 3293, 6953, 6765, 20285, 8703, 27361, 13, 29871, 10567, 29901, 29871, 5901, 29901, 9014, 786, 29875, 921, 29877, 911, 1631, 639, 29874, 9014, 10648, 2397, 921, 5801, 911, 2397, 13160, 29874, 19538, 29891, 294, 666, 29874, 4223, 29901, 15655, 26361, 674, 7124, 263, 5172, 2022, 13, 16107, 29901, 325, 815, 2397, 921, 5801, 2397, 270, 3304, 9014, 29884, 2397, 432, 994, 2397, 480, 29939, 29872, 19538, 29891, 1450, 29884, 1444, 9014, 10648, 2397, 921, 29877, 911, 911, 2397, 13160, 29874, 286, 2679, 459, 29874, 4223, 29901, 278, 3273, 2022, 674, 6023, 263, 5172, 11203, 393, 263, 15129, 6635, 7124, 13, 16107, 29901, 9014, 786, 29875, 921, 272, 459, 29875, 13160, 29874, 325, 3302, 29877, 2397, 18346, 29877, 911, 2397, 480, 29939, 29872, 286, 2679, 359, 666, 29874, 4223, 29901, 5172, 2305, 674, 6023, 278, 15129, 11199, 13, 16107, 29901, 9014, 786, 29875, 282, 335, 2754, 921, 29877, 1362, 9014, 10648, 2397, 921, 29877, 911, 911, 2397, 639, 29874, 756, 294, 333, 29884, 4223, 29901, 5232, 1601, 8149, 864, 263, 15655, 11203, 13, 16107, 29901, 325, 815, 2397, 282, 335, 1175, 29875, 13160, 29874, 325, 3302, 459, 29875, 921, 5801, 911, 1631, 921, 29877, 1362, 19538, 29891, 6840, 29893, 29884, 1444, 9014, 375, 459, 29875, 18346, 29877, 911, 1631, 658, 21154, 285, 466, 14274, 4223, 29901, 278, 5172, 1601, 1989, 674, 1074, 10135, 352, 681, 17952, 393, 7124, 278, 5232, 2305, 13, 16107, 29901, 9014, 786, 29875, 921, 272, 459, 29875, 13160, 29874, 325, 3302, 29877, 2397, 921, 29877, 911, 911, 2397, 480, 29939, 29872, 19538, 29891, 294, 333, 29884, 1444, 325, 3302, 459, 29875, 921, 5801, 911, 1631, 480, 29939, 29872, 286, 2679, 8156, 29893, 29884, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 20367, 6245, 24556, 4956, 345, 5678, 11300, 15681, 29899, 3293, 6953, 6765, 20285, 8703, 27361, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15655, 2022, 7124, 263, 2319, 11203, 393, 10753, 10135, 352, 681, 4344, 5901, 29901, 1153, 29916, 481, 29884, 1236, 7000, 1648, 15465, 440, 2386, 694, 455, 4353, 298, 8631, 774, 29872, 274, 666, 1314, 2681, 694, 29891, 381, 4347, 3737, 9449, 29884, 2918, 298, 8631, 774, 29872, 439, 1113, 29916, 6962, 3855, 9429, 20144, 1365, 13, 24636, 29901, 263, 15655, 11203, 10753, 5232, 8828, 561, 1144, 5901, 29901, 298, 8631, 1022, 29884, 1236, 7000, 1648, 694, 29891, 440, 2386, 9449, 29884, 2918, 298, 8631, 774, 29872, 281, 340, 1314, 6962, 921, 735, 20144, 1365, 13, 24636, 29901, 263, 2319, 11199, 7213, 4637, 3273, 1601, 8149, 5901, 29901, 298, 8631, 1022, 29884, 274, 666, 7262, 1648, 281, 4090, 586, 2386, 3855, 687, 1148, 29875, 298, 8631, 774, 29872, 439, 29890, 735, 6962, 16588, 18071, 1365, 13, 24636, 29901, 278, 3273, 8828, 561, 262, 674, 864, 278, 5232, 2022, 5901, 29901, 1153, 29916, 481, 29884, 439, 21761, 1648, 921, 735, 29884, 854, 29874, 9449, 29884, 446, 1153, 29916, 4302, 281, 340, 1314, 2681, 15465, 381, 4347, 13, 24636, 29901, 263, 2319, 2022, 7213, 3368, 15655, 1601, 8149, 5901, 29901, 298, 8631, 1022, 29884, 274, 666, 7262, 1648, 15465, 440, 2386, 3855, 687, 13447, 298, 8631, 774, 29872, 1236, 29895, 2251, 6962, 16588, 18071, 1365, 13, 24636, 29901, 3273, 8828, 561, 1144, 393, 7213, 895, 263, 2319, 8828, 561, 262, 674, 864, 2319, 17952, 393, 7124, 278, 5232, 1601, 8149, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 20367, 6245, 24556, 4956, 345, 5678, 11300, 15681, 29899, 3293, 6953, 6765, 20285, 8703, 27361, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 5232, 4344, 393, 2319, 274, 5727, 674, 1074, 864, 263, 4802, 11203, 5901, 29901, 13792, 1662, 270, 19266, 872, 29916, 457, 281, 335, 10730, 29939, 29877, 2723, 6309, 650, 620, 29872, 285, 666, 1540, 325, 666, 6235, 911, 282, 8107, 872, 29916, 4869, 29877, 274, 545, 4346, 2397, 13, 24636, 29901, 278, 5232, 2022, 393, 15655, 274, 1446, 4446, 21832, 278, 2319, 4344, 5901, 29901, 3104, 1600, 3855, 2219, 872, 29916, 457, 281, 335, 10730, 1324, 2723, 325, 326, 1417, 620, 29872, 285, 666, 29884, 1111, 6309, 650, 911, 270, 19266, 285, 666, 7844, 29877, 325, 666, 7994, 13, 24636, 29901, 263, 2319, 6635, 393, 278, 10135, 352, 681, 4344, 5131, 8370, 2986, 278, 5232, 26361, 393, 263, 15129, 2022, 674, 7213, 895, 5901, 29901, 6309, 650, 260, 1314, 29872, 285, 666, 1540, 274, 545, 4346, 1324, 2723, 3104, 687, 29877, 270, 19266, 872, 13821, 325, 326, 1417, 868, 29916, 29884, 872, 13821, 1410, 1362, 29939, 29877, 2723, 325, 666, 650, 911, 620, 29872, 285, 666, 7844, 29877, 281, 1943, 1324, 13, 24636, 29901, 263, 5232, 2022, 6023, 267, 278, 4802, 4344, 393, 674, 7213, 895, 278, 15655, 6635, 5901, 29901, 325, 326, 1417, 620, 29872, 872, 13821, 3104, 687, 29877, 911, 3855, 2219, 285, 666, 1682, 9064, 1410, 29920, 10178, 29939, 29877, 2723, 6309, 650, 911, 282, 8107, 285, 666, 7844, 29877, 274, 466, 29884, 2397, 13, 24636, 29901, 278, 4802, 6635, 393, 263, 2319, 11203, 23051, 21832, 15655, 4344, 393, 10135, 352, 681, 2305, 269, 6984, 5901, 29901, 325, 666, 6235, 270, 19266, 872, 13821, 274, 466, 7994, 2723, 3104, 687, 29877, 282, 8107, 285, 666, 29884, 1111, 325, 326, 457, 260, 1314, 29872, 872, 29916, 457, 281, 1943, 4346, 2397, 2723, 6309, 650, 911, 3855, 2219, 872, 29916, 1475, 29877, 325, 666, 7994, 13, 24636, 29901, 263, 4802, 6635, 23051, 278, 2319, 26361, 393, 4802, 4344, 7213, 3368, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 20367, 6245, 24556, 4956, 345, 5678, 11300, 15681, 29899, 3293, 6953, 6765, 20285, 8703, 27361, 13, 29871, 10567, 29901, 29871, 5901, 29901, 302, 361, 711, 29877, 274, 545, 16588, 29884, 1764, 6836, 446, 5391, 29884, 413, 8631, 24425, 6836, 29939, 293, 3231, 452, 2125, 5391, 29884, 28226, 326, 29884, 260, 388, 361, 8154, 330, 666, 287, 598, 4005, 412, 280, 705, 4223, 29901, 278, 4802, 2305, 23289, 15129, 14671, 3174, 393, 7213, 3368, 263, 10135, 352, 681, 8828, 561, 262, 13, 16107, 29901, 2125, 1251, 694, 1725, 260, 19924, 25621, 2125, 5391, 29884, 413, 8631, 24425, 260, 912, 29882, 9447, 343, 9345, 1403, 4223, 29901, 263, 5232, 11203, 674, 6023, 263, 15129, 6635, 13, 16107, 29901, 302, 361, 711, 29877, 694, 1725, 6836, 29891, 1607, 260, 2142, 711, 20424, 413, 8631, 24425, 260, 912, 29882, 9447, 4005, 412, 280, 705, 4223, 29901, 278, 5232, 8828, 561, 1144, 23289, 278, 15129, 6635, 13, 16107, 29901, 260, 2142, 711, 29877, 274, 545, 260, 834, 542, 29884, 6836, 446, 5391, 29884, 28226, 326, 29884, 6836, 29939, 293, 3231, 5291, 446, 1403, 4223, 29901, 278, 4802, 2278, 6023, 267, 10135, 352, 681, 14671, 3174, 13, 16107, 29901, 2125, 1251, 868, 17367, 260, 388, 1607, 302, 361, 711, 20424, 28226, 326, 29884, 6836, 29939, 293, 3231, 452, 260, 2142, 711, 29877, 694, 1725, 260, 912, 6905, 343, 488, 705, 5291, 6905, 455, 4223, 29901, 263, 5172, 8828, 561, 262, 18553, 278, 10135, 352, 681, 14671, 3174, 393, 278, 5232, 6635, 674, 763, 13, 16107, 29901, 2125, 1251, 28226, 29875, 260, 388, 1607, 2125, 5391, 29884, 274, 545, 2589, 260, 562, 8016, 1562, 452, 302, 361, 711, 20424, 868, 29916, 314, 29884, 302, 6619, 29939, 1562, 4005, 446, 1403, 330, 333, 598, 4223, 29901, 29871, 29871, 10604, 29901, 29871]] [[302, 786, 29875, 18515, 3848, 29884, 301, 406, 4900, 302, 786, 29875, 756, 8044, 10215, 29884, 1764, 1072, 13188], [263, 10135, 352, 681, 2278, 7213, 4637, 278, 10135, 352, 681, 4344], [278, 5232, 26361, 674, 864, 3273, 26361], [2329, 29875, 4768, 29891, 879, 363, 29877, 343, 1175, 968, 2329, 10770, 343, 823, 4090, 403, 1236, 29920, 568]]
Initial Loss: 7.322059631347656
start ij pos optimization
optimized
4 Loss: 6.2758965492248535
Miami densmarine Solve Rosetta Stone-style Floristics puzz statedaterra


5 Loss: 6.2758965492248535
Miami densmarine Solve Rosetta Stone-style Floristics puzz statedaterra


optimized
6 Loss: 5.7237935066223145
Miami densaround Solve Rosetta Stone-style Floristics puzz statedaterra


optimized
14 Loss: 5.681789398193359
Miami densaround Solve Rosetta Stone-style Capeistics puzz statedaterra


optimized
17 Loss: 5.648770809173584
Miami densaround Solve Rosetta Stone-style Capeistics puzz mieaterra


optimized
18 Loss: 5.4960832595825195
Miami densaround Solve Rosetta Stone-style Capeistics puzz mieSDK


Initial VF Loss: 2.467808246612549
start vf pos optimization
optimized
24 Loss: 2.4352028369903564
Mark tranPython src ve

optimized
25 Loss: 2.201913595199585
Mark PuertoPython src ve

optimized
26 Loss: 2.0015709400177
Mark Puerto Melbourne src ve

optimized
27 Loss: 1.973570466041565
Mark Puerto Melbourne Harrison ve

optimized
28 Loss: 1.8255020380020142
Mark Puerto Melbourne Harrison Dublin

5
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 23740, 6245, 11316, 4956, 345, 5678, 11300, 15681, 29899, 3293, 20922, 6765, 20285, 6628, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 15655, 274, 5727, 23289, 278, 3273, 2022, 5901, 29901, 285, 586, 29884, 413, 15008, 2291, 413, 29884, 29939, 8887, 302, 4814, 447, 280, 705, 447, 280, 280, 3855, 295, 324, 974, 29872, 13, 24636, 29901, 15655, 1601, 8149, 674, 7124, 263, 2319, 2022, 5901, 29901, 285, 586, 29884, 413, 15008, 2291, 413, 16099, 7781, 285, 586, 29884, 2299, 481, 29884, 447, 280, 280, 3855, 774, 29884, 339, 417, 13, 24636, 29901, 278, 15655, 285, 9102, 674, 1074, 4802, 1601, 8149, 393, 763, 278, 5232, 4344, 5901, 29901, 302, 4814, 505, 2291, 2299, 482, 302, 4814, 413, 431, 9447, 413, 24551, 1484, 3855, 1837, 284, 974, 29872, 921, 29872, 285, 586, 29884, 413, 8631, 29884, 1251, 413, 16099, 7781, 1321, 29920, 573, 13, 24636, 29901, 263, 3273, 11660, 4188, 267, 15655, 2305, 393, 278, 5232, 8828, 561, 262, 18553, 5901, 29901, 285, 586, 29884, 447, 280, 705, 447, 29939, 8887, 302, 4814, 2299, 9447, 447, 29888, 2192, 3855, 834, 573, 921, 29872, 285, 586, 29884, 413, 15008, 2291, 413, 1297, 280, 3855, 284, 974, 29872, 13, 24636, 29901, 278, 4802, 8828, 561, 262, 23289, 278, 5232, 2022, 5901, 29901, 302, 4814, 14842, 29884, 1251, 447, 29888, 2192, 302, 4814, 2299, 9447, 447, 280, 280, 301, 324, 974, 29872, 13, 24636, 29901, 5232, 274, 5727, 4446, 263, 4802, 1601, 1989, 393, 23289, 278, 15655, 8828, 561, 262, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 23740, 6245, 11316, 4956, 345, 5678, 11300, 15681, 29899, 3293, 20922, 6765, 20285, 6628, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 263, 15655, 2022, 393, 766, 5081, 287, 278, 5232, 11660, 19572, 278, 3273, 285, 9102, 393, 263, 4802, 6635, 674, 6023, 5901, 29901, 3855, 300, 2606, 282, 9919, 289, 21317, 1354, 27305, 29884, 3855, 29875, 3737, 339, 921, 568, 7145, 8675, 16588, 261, 29884, 3737, 339, 2453, 1335, 19015, 265, 29884, 3623, 29926, 28311, 3855, 29875, 282, 9919, 302, 1151, 3855, 273, 15623, 13, 24636, 29901, 15655, 274, 1446, 864, 278, 2319, 4344, 393, 269, 6984, 263, 5172, 2022, 5901, 29901, 3737, 339, 921, 568, 19015, 15647, 2246, 381, 29884, 339, 3031, 20144, 339, 3737, 339, 452, 2502, 7145, 8675, 3855, 29875, 282, 9919, 330, 16945, 281, 485, 431, 29875, 13, 24636, 29901, 278, 15655, 2022, 766, 5081, 287, 278, 3273, 4344, 5901, 29901, 282, 9919, 921, 568, 7145, 8675, 3855, 300, 2606, 282, 9919, 302, 1151, 281, 485, 431, 29875, 13, 24636, 29901, 278, 2319, 2278, 4188, 267, 278, 5172, 2022, 393, 278, 5232, 26361, 7124, 5901, 29901, 282, 9919, 330, 16945, 281, 485, 348, 29884, 734, 13123, 29884, 282, 9919, 289, 21317, 872, 29926, 19266, 16588, 261, 29884, 339, 3855, 29875, 282, 9919, 452, 2502, 7145, 8675, 13, 24636, 29901, 278, 15655, 2278, 393, 3273, 274, 5727, 864, 674, 766, 4561, 278, 5232, 285, 9102, 393, 19572, 263, 2319, 11203, 5901, 29901, 3737, 339, 302, 1151, 1354, 29882, 15647, 2246, 381, 29884, 339, 3855, 29875, 282, 9919, 921, 568, 281, 485, 348, 29884, 3855, 300, 294, 29884, 16588, 261, 29884, 3737, 339, 330, 16945, 872, 8931, 29884, 3855, 29875, 282, 9919, 289, 21317, 3855, 273, 15623, 13, 24636, 29901, 278, 5172, 274, 5727, 674, 7124, 278, 15655, 2278, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 23740, 6245, 11316, 4956, 345, 5678, 11300, 15681, 29899, 3293, 20922, 6765, 20285, 6628, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 263, 2319, 2278, 7213, 4637, 263, 4802, 11203, 5901, 29901, 7245, 309, 309, 29884, 286, 786, 10482, 343, 8097, 298, 7003, 286, 545, 29893, 10482, 413, 8819, 827, 8870, 15297, 13, 24636, 29901, 263, 15655, 6635, 393, 21832, 3273, 17952, 19572, 263, 2319, 11203, 393, 674, 864, 263, 5172, 1601, 1989, 5901, 29901, 270, 4422, 309, 29884, 591, 29888, 666, 20424, 282, 375, 29884, 827, 6905, 734, 6905, 827, 8870, 15297, 4084, 9505, 5973, 274, 2231, 298, 7003, 734, 29882, 1450, 21528, 3623, 29894, 340, 10482, 4005, 2918, 827, 8870, 15297, 4084, 286, 545, 29893, 10482, 343, 735, 809, 29877, 8870, 15297, 13, 24636, 29901, 278, 5172, 11203, 7213, 3368, 278, 2319, 6635, 5901, 29901, 7245, 666, 20424, 286, 545, 1484, 4005, 2918, 2652, 29874, 9505, 9429, 10482, 343, 735, 809, 29877, 2652, 2219, 13, 24636, 29901, 278, 5172, 11199, 7213, 4637, 278, 2319, 6635, 5901, 29901, 7245, 309, 309, 29884, 282, 375, 15490, 4005, 2918, 2652, 29874, 9505, 9429, 10482, 343, 735, 809, 29877, 2652, 2219, 13, 24636, 29901, 278, 5172, 274, 5727, 393, 263, 10135, 352, 681, 11199, 10753, 7124, 278, 15655, 4344, 5901, 29901, 9379, 666, 459, 29874, 734, 4077, 309, 29884, 282, 375, 15490, 1236, 354, 298, 7003, 4084, 437, 2526, 6905, 4005, 2918, 2652, 29874, 286, 786, 340, 1148, 29884, 29507, 809, 29877, 2652, 2219, 13, 24636, 29901, 278, 5172, 6635, 7124, 15655, 26361, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 23740, 6245, 11316, 4956, 345, 5678, 11300, 15681, 29899, 3293, 20922, 6765, 20285, 6628, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15655, 6635, 393, 23289, 278, 5172, 274, 5727, 674, 7213, 895, 278, 2319, 4344, 5901, 29901, 304, 29939, 4125, 8177, 272, 1297, 8740, 381, 4749, 3855, 29872, 304, 29939, 2251, 29884, 503, 1032, 12602, 545, 921, 273, 1032, 2679, 29877, 439, 1056, 1181, 304, 29939, 2251, 29884, 748, 6951, 29891, 545, 2531, 19881, 2679, 29877, 921, 29875, 1251, 6951, 13, 24636, 29901, 278, 15655, 274, 5727, 763, 278, 2319, 1601, 8149, 393, 674, 766, 4561, 278, 5172, 8828, 561, 262, 5901, 29901, 304, 29939, 4125, 364, 1941, 29891, 1297, 921, 273, 1032, 4749, 304, 29939, 2251, 29884, 748, 6951, 29891, 545, 447, 8903, 2679, 29877, 3855, 29872, 304, 29939, 2251, 29884, 503, 1032, 272, 545, 260, 328, 279, 2679, 29877, 591, 29916, 351, 13581, 439, 29876, 7781, 455, 13, 24636, 29901, 278, 5172, 274, 1446, 674, 7213, 895, 278, 2319, 8828, 561, 262, 393, 5232, 274, 5727, 674, 6023, 5901, 29901, 304, 29939, 4125, 503, 1032, 12602, 1297, 8740, 19881, 4749, 304, 29939, 2251, 29884, 748, 29920, 332, 545, 260, 328, 279, 2679, 29877, 3855, 29872, 921, 688, 2603, 7537, 388, 1297, 921, 273, 1032, 4749, 14319, 351, 13581, 921, 4861, 468, 13581, 13, 24636, 29901, 263, 15129, 2022, 393, 263, 3273, 8828, 561, 262, 10753, 766, 5081, 287, 278, 2319, 1601, 1989, 5901, 29901, 921, 688, 2603, 447, 15641, 1297, 301, 3136, 4749, 3855, 29872, 921, 688, 2603, 503, 459, 272, 1297, 260, 328, 279, 4749, 1948, 1654, 304, 29939, 2251, 29884, 748, 29920, 332, 545, 4023, 261, 2679, 29877, 591, 17367, 1181, 13, 24636, 29901, 263, 5172, 8828, 561, 262, 393, 15655, 274, 1446, 1074, 766, 5081, 267, 278, 2319, 2305, 5901, 29901, 921, 688, 2603, 503, 1032, 272, 1297, 260, 328, 279, 4749, 3855, 29872, 921, 688, 2603, 364, 1941, 29891, 1297, 8740, 19881, 4749, 1411, 688, 18703, 304, 29939, 2251, 29884, 748, 6951, 29891, 545, 19931, 29891, 2679, 29877, 591, 17367, 455, 13, 24636, 29901, 278, 15655, 8828, 561, 262, 393, 278, 2319, 274, 5727, 674, 763, 18553, 278, 5172, 6635, 393, 278, 5172, 274, 5727, 674, 7213, 895, 5901, 29901, 29871, 29871, 10604, 29901, 29871]] [[278, 5232, 1601, 1989, 19572, 278, 4802, 2022, 393, 674, 7213, 895, 5232, 4344], [2215, 28327, 5025, 375, 10648, 413, 331, 9064, 2215, 1450, 22061, 285, 1165, 2112, 17029, 3855, 440, 17029, 25425, 8107], [298, 5526, 25621, 1410, 29939, 2754, 298, 1981, 2397, 1075, 3909, 29939, 29872, 1410, 29883, 6400, 298, 293, 861, 4106, 6635, 2017], [8506, 827, 14396, 2918, 3855, 21317, 2918, 8506, 827, 5389, 3105, 265, 459, 29884, 343, 290, 9447, 26461, 8092, 8506, 827, 3105, 3231, 4022, 29939, 1789, 285, 4861, 16628, 29877, 285, 4861, 10718]]
Initial Loss: 5.768272876739502
start ij pos optimization
4 Loss: 5.768272876739502
Miami densaround Solve Rosetta Stone-style Capeistics puzz mieSDK


optimized
5 Loss: 5.687614440917969
Miami docsaround Solve Rosetta Stone-style Capeistics puzz mieSDK


optimized
6 Loss: 5.683524131774902
Miami docsdeveloper Solve Rosetta Stone-style Capeistics puzz mieSDK


optimized
14 Loss: 5.677310943603516
Miami docsdeveloper Solve Rosetta Stone-style Choristics puzz mieSDK


optimized
17 Loss: 5.648097991943359
Miami docsdeveloper Solve Rosetta Stone-style Choristics puzzMSDK


18 Loss: 5.648097991943359
Miami docsdeveloper Solve Rosetta Stone-style Choristics puzzMSDK


Initial VF Loss: 2.0751793384552
start vf pos optimization
optimized
24 Loss: 1.8777581453323364
recensement Puerto Melbourne Harrison Dublin

optimized
25 Loss: 1.6956838369369507
recensement Miami Melbourne Harrison Dublin

optimized
26 Loss: 1.6810930967330933
recensement Miami Florida Harrison Dublin

optimized
27 Loss: 1.6540027856826782
recensement Miami Florida Graham Dublin

optimized
28 Loss: 1.6302608251571655
recensement Miami Florida GrahamFD

6
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 23740, 10561, 6734, 4956, 345, 5678, 11300, 15681, 29899, 3293, 22758, 6765, 20285, 29924, 26912, 13, 29871, 10567, 29901, 29871, 5901, 29901, 301, 352, 1137, 568, 286, 485, 2251, 675, 5089, 2212, 274, 1314, 29884, 26461, 289, 2142, 533, 21154, 304, 915, 274, 1314, 688, 29875, 4223, 29901, 278, 4802, 274, 1446, 4446, 278, 15129, 2278, 13, 16107, 29901, 9505, 8631, 29877, 1729, 13809, 361, 29884, 304, 915, 274, 1314, 29884, 26461, 282, 331, 487, 21154, 921, 861, 29875, 286, 314, 387, 29875, 8506, 26924, 6832, 298, 566, 2251, 361, 29884, 503, 3628, 286, 420, 26461, 4223, 29901, 278, 15129, 2022, 674, 7124, 263, 10135, 352, 681, 285, 9102, 393, 263, 3273, 11203, 7213, 3368, 13, 16107, 29901, 302, 1314, 431, 1082, 282, 331, 2251, 675, 5713, 446, 286, 420, 26461, 921, 786, 487, 911, 3855, 2946, 274, 1314, 688, 29875, 4223, 29901, 5232, 14671, 3174, 766, 4561, 278, 15655, 1601, 8149, 13, 16107, 29901, 301, 352, 431, 29884, 282, 331, 2251, 361, 29884, 304, 915, 286, 420, 26461, 921, 786, 487, 21154, 3855, 2946, 274, 1314, 688, 29875, 4223, 29901, 263, 15129, 285, 9102, 18553, 278, 15655, 1601, 1989, 13, 16107, 29901, 413, 2112, 8631, 866, 286, 485, 2251, 675, 3855, 2946, 286, 420, 26461, 1729, 369, 1389, 29884, 5713, 446, 274, 1314, 688, 29875, 4223, 29901, 15655, 274, 1446, 674, 864, 278, 5232, 2022, 13, 16107, 29901, 301, 352, 1137, 29875, 282, 331, 2251, 361, 29884, 3855, 2946, 286, 420, 26461, 286, 485, 487, 21154, 5713, 446, 274, 1314, 688, 29875, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 23740, 10561, 6734, 4956, 345, 5678, 11300, 15681, 29899, 3293, 22758, 6765, 20285, 29924, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15129, 8828, 561, 1144, 393, 674, 1074, 3273, 274, 5727, 766, 5081, 287, 15655, 4344, 5901, 29901, 4446, 29884, 455, 2730, 354, 503, 1941, 455, 748, 3855, 279, 1654, 2453, 1403, 1321, 4979, 455, 3855, 15844, 29891, 1837, 29875, 3855, 279, 1654, 1766, 29874, 285, 2386, 455, 325, 459, 4125, 26461, 13, 24636, 29901, 278, 15129, 11660, 1083, 13415, 278, 2319, 11199, 5901, 29901, 4446, 24551, 2730, 354, 1321, 4979, 346, 4446, 24551, 1005, 29877, 301, 786, 815, 503, 293, 24024, 13, 24636, 29901, 15655, 8828, 561, 1144, 23051, 15129, 274, 5727, 5901, 29901, 3855, 279, 1654, 1766, 29874, 503, 1941, 455, 3855, 279, 1654, 2730, 354, 1321, 4979, 455, 2778, 10859, 26461, 13, 24636, 29901, 278, 10135, 352, 681, 8828, 561, 262, 674, 1074, 278, 15655, 1601, 8149, 393, 6456, 263, 5172, 11199, 5901, 29901, 4446, 24551, 1410, 412, 503, 1941, 346, 4446, 29884, 455, 1766, 29874, 330, 895, 455, 748, 3855, 279, 625, 19516, 301, 786, 815, 503, 293, 24024, 26461, 3855, 15844, 4099, 13, 24636, 29901, 278, 10135, 352, 681, 274, 5727, 393, 7124, 278, 15129, 2278, 674, 6456, 278, 15655, 1601, 1989, 393, 766, 5081, 267, 263, 2319, 285, 9102, 5901, 29901, 4446, 29884, 455, 1410, 412, 1321, 4979, 455, 748, 4446, 24551, 2730, 354, 18371, 815, 2032, 5526, 26461, 4446, 24551, 1766, 29874, 330, 895, 346, 748, 3855, 279, 625, 1005, 29877, 1302, 29939, 29872, 346, 325, 459, 468, 29884, 503, 625, 29891, 1837, 29875, 13, 24636, 29901, 263, 2319, 11660, 766, 5081, 267, 263, 10135, 352, 681, 11199, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 23740, 10561, 6734, 4956, 345, 5678, 11300, 15681, 29899, 3293, 22758, 6765, 20285, 29924, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 263, 15655, 285, 9102, 766, 5081, 267, 3273, 4344, 5901, 29901, 23852, 4273, 7840, 29875, 9029, 619, 29891, 1682, 29884, 23852, 265, 361, 29877, 4084, 455, 29882, 468, 29875, 1146, 29916, 295, 688, 29875, 270, 2518, 455, 13, 24636, 29901, 3273, 2305, 393, 278, 15655, 26361, 766, 5081, 287, 1074, 5172, 4344, 5901, 29901, 23852, 5271, 4084, 455, 1251, 25995, 21528, 694, 11755, 3909, 7840, 29875, 1251, 503, 264, 309, 29884, 5424, 557, 2754, 23852, 265, 361, 29877, 921, 352, 1148, 468, 29875, 1146, 29916, 295, 688, 29875, 269, 440, 22971, 455, 13, 24636, 29901, 15129, 2305, 4446, 278, 10135, 352, 681, 4344, 5901, 29901, 23852, 5271, 413, 2219, 1251, 25995, 21528, 11755, 348, 361, 29877, 413, 359, 1148, 468, 29875, 1146, 29916, 295, 688, 29875, 269, 440, 2679, 2754, 13, 24636, 29901, 263, 5172, 2022, 674, 7124, 263, 15129, 285, 9102, 5901, 29901, 23852, 4273, 921, 7207, 9029, 25995, 1682, 29884, 23852, 4273, 1181, 413, 2219, 29891, 468, 29875, 619, 29891, 1682, 688, 29875, 432, 968, 2918, 13, 24636, 29901, 278, 15655, 2305, 763, 3273, 17952, 5901, 29901, 11755, 3909, 7840, 29875, 1251, 25995, 21528, 23852, 265, 361, 29877, 4084, 455, 29882, 468, 29875, 343, 375, 295, 688, 29875, 1146, 354, 1335, 455, 13, 24636, 29901, 263, 3273, 2278, 23289, 5172, 4344, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 23740, 10561, 6734, 4956, 345, 5678, 11300, 15681, 29899, 3293, 22758, 6765, 20285, 29924, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 5232, 274, 1446, 5131, 278, 4802, 8828, 561, 262, 5901, 29901, 269, 15297, 274, 2142, 1943, 413, 1489, 343, 2251, 7003, 2212, 432, 264, 11326, 1261, 8631, 786, 29875, 302, 861, 1022, 29875, 13, 24636, 29901, 278, 15129, 1601, 8149, 864, 263, 3273, 2022, 393, 278, 10135, 352, 681, 11203, 19572, 5901, 29901, 432, 4814, 1208, 359, 29884, 432, 675, 992, 29916, 7003, 2212, 269, 327, 8069, 553, 29872, 455, 1631, 22165, 666, 29875, 5291, 432, 4814, 316, 15298, 29884, 3855, 440, 29884, 325, 711, 20593, 13, 24636, 29901, 278, 2319, 2022, 674, 6456, 4802, 26361, 393, 674, 864, 278, 15129, 8828, 561, 1144, 5901, 29901, 432, 4814, 553, 29872, 455, 298, 2963, 364, 4243, 29939, 29877, 269, 327, 8069, 274, 1175, 295, 786, 29875, 302, 861, 1022, 29875, 5291, 364, 861, 7003, 2212, 432, 264, 11326, 3949, 8631, 786, 29875, 432, 675, 1631, 13, 24636, 29901, 263, 2319, 11203, 674, 766, 4561, 278, 3273, 14671, 3174, 393, 7124, 278, 15129, 8828, 561, 1144, 5901, 29901, 269, 15297, 316, 15298, 29884, 298, 2963, 12912, 3848, 29884, 432, 264, 11326, 1559, 29874, 29939, 1022, 29875, 22165, 666, 29875, 5291, 343, 2251, 370, 20593, 432, 264, 11326, 3949, 8631, 786, 29875, 432, 675, 1631, 13, 24636, 29901, 263, 2319, 8828, 561, 262, 674, 766, 4561, 263, 3273, 1601, 1989, 5901, 29901, 269, 15297, 1261, 8631, 29884, 298, 2963, 12912, 3848, 29884, 269, 327, 8069, 628, 359, 786, 29875, 22165, 666, 29875, 13, 24636, 29901, 263, 4802, 2022, 393, 278, 15129, 26361, 5131, 5131, 3273, 8828, 561, 1144, 5901, 29901, 29871, 29871, 10604, 29901, 29871]] [[577, 29920, 735, 29874, 921, 29872, 2526, 343, 19881, 29875, 2918, 301, 3365, 18861, 282, 866, 413, 340, 735, 29875, 437, 7354, 19266], [3855, 801, 9429, 29884, 413, 638, 7262, 29884, 454, 29939, 809, 29884, 10814, 340, 29884, 413, 638, 7262, 29884, 454, 29939, 809, 29884, 281, 468, 468, 774, 29875], [278, 2319, 26361, 766, 5081, 287, 10135, 352, 681, 14671, 3174], [278, 5172, 4344, 393, 21832, 278, 2319, 4344, 7124, 4802, 1601, 8149, 393, 278, 10135, 352, 681, 2305, 7213, 3368]]
Initial Loss: 6.6803483963012695
start ij pos optimization
optimized
4 Loss: 6.4749555587768555
Zh docsdeveloper Solve Rosetta Stone-style Choristics puzzMSDK


5 Loss: 6.4749555587768555
Zh docsdeveloper Solve Rosetta Stone-style Choristics puzzMSDK


optimized
6 Loss: 6.391997337341309
Zh docsExecution Solve Rosetta Stone-style Choristics puzzMSDK


optimized
14 Loss: 6.324582099914551
Zh docsExecution Solve Rosetta Stone-style Chronistics puzzMSDK


optimized
17 Loss: 6.216770648956299
Zh docsExecution Solve Rosetta Stone-style Chronistics puzzUTSDK


18 Loss: 6.216770648956299
Zh docsExecution Solve Rosetta Stone-style Chronistics puzzUTSDK


Initial VF Loss: 3.364593267440796
start vf pos optimization
optimized
24 Loss: 2.0417280197143555
Chinese Miami Florida GrahamFD

optimized
25 Loss: 1.7247047424316406
Chinese miasta Florida GrahamFD

optimized
26 Loss: 1.361191749572754
Chinese miastaSol GrahamFD

optimized
27 Loss: 1.274977445602417
Chinese miastaSol JimmyFD

optimized
28 Loss: 1.215657353401184
Chinese miastaSol JimmySmith

7
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 27134, 10561, 20418, 4956, 345, 5678, 11300, 15681, 29899, 3293, 15336, 6765, 20285, 2692, 26912, 13, 29871, 10567, 29901, 29871, 5901, 29901, 285, 711, 5604, 921, 9154, 911, 25246, 328, 675, 7013, 309, 29884, 21421, 866, 921, 14797, 397, 568, 1354, 285, 711, 5604, 14453, 28334, 5025, 333, 675, 1302, 29939, 1450, 603, 289, 1314, 388, 2004, 4223, 29901, 278, 4802, 2305, 6023, 2319, 4344, 393, 278, 10135, 352, 681, 8828, 561, 1144, 674, 269, 6984, 13, 16107, 29901, 260, 5338, 2766, 3887, 1365, 911, 260, 1137, 333, 675, 1354, 7013, 309, 29884, 454, 29920, 866, 3855, 2142, 333, 568, 1302, 29939, 1450, 603, 285, 711, 20424, 21421, 866, 25246, 328, 866, 1401, 9429, 603, 4223, 29901, 5172, 26361, 393, 674, 269, 6984, 5232, 274, 5727, 674, 763, 278, 2319, 2022, 13, 16107, 29901, 260, 5338, 2766, 281, 485, 675, 3855, 2142, 333, 675, 285, 711, 20424, 14453, 403, 25246, 328, 568, 2723, 29891, 3365, 603, 4223, 29901, 3273, 274, 5727, 21832, 278, 10135, 352, 681, 2305, 13, 16107, 29901, 285, 711, 5604, 281, 485, 675, 921, 14797, 8144, 911, 285, 711, 20424, 454, 29920, 866, 5025, 333, 568, 260, 1314, 29872, 2526, 4223, 29901, 278, 3273, 2278, 766, 5081, 287, 278, 5232, 8828, 561, 1144, 13, 16107, 29901, 285, 711, 5604, 921, 9154, 911, 260, 1137, 1941, 911, 7013, 309, 29884, 14453, 403, 921, 14797, 397, 866, 1354, 285, 711, 5604, 281, 485, 675, 325, 666, 23162, 911, 1401, 29875, 4353, 25246, 29884, 4099, 4223, 29901, 278, 4802, 11203, 10753, 263, 10135, 352, 681, 2278, 393, 278, 3273, 285, 9102, 674, 763, 13, 16107, 29901, 285, 711, 5604, 921, 9154, 911, 921, 14797, 397, 675, 1354, 260, 5338, 2766, 3887, 1365, 911, 25246, 328, 675, 1302, 29939, 1450, 603, 7013, 309, 29884, 14453, 403, 5025, 333, 866, 289, 1314, 834, 603, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 10561, 20418, 4956, 345, 5678, 11300, 15681, 29899, 3293, 15336, 6765, 20285, 2692, 26912, 13, 29871, 10567, 29901, 29871, 5901, 29901, 1010, 15218, 413, 29884, 2918, 2257, 2397, 274, 2579, 29875, 3855, 29874, 540, 29939, 29872, 302, 28311, 281, 29884, 2256, 29875, 3855, 809, 15218, 413, 29884, 2918, 4022, 26461, 447, 339, 1240, 343, 1297, 2901, 3855, 29874, 413, 29884, 2918, 921, 293, 29884, 921, 1032, 2172, 4223, 29901, 278, 4802, 1601, 1989, 393, 10753, 263, 5232, 11199, 1083, 13415, 263, 10135, 352, 681, 11203, 393, 263, 15655, 6635, 19572, 13, 16107, 29901, 413, 29884, 2918, 921, 293, 29884, 281, 3365, 295, 29884, 343, 29884, 1026, 4614, 540, 29939, 29872, 269, 7253, 921, 1032, 309, 29884, 4223, 29901, 10135, 352, 681, 1601, 8149, 7124, 278, 15129, 26361, 13, 16107, 29901, 439, 26129, 4614, 413, 29884, 2918, 302, 28311, 281, 3365, 295, 29884, 3855, 29874, 540, 29939, 29872, 4022, 26461, 1238, 4542, 29884, 413, 468, 277, 4614, 540, 29939, 29872, 2257, 2397, 330, 2142, 3270, 3855, 809, 15218, 3855, 29874, 413, 29884, 2918, 921, 293, 29884, 6635, 295, 29884, 4223, 29901, 278, 15655, 8828, 561, 1144, 393, 7213, 895, 4802, 1601, 8149, 1074, 10135, 352, 681, 17952, 393, 278, 5232, 11660, 1083, 13415, 13, 16107, 29901, 540, 29939, 29872, 3777, 6951, 281, 3365, 295, 29884, 3855, 809, 327, 9010, 413, 29884, 2918, 921, 293, 29884, 1238, 4542, 29884, 4223, 29901, 278, 3273, 1601, 8149, 674, 6456, 10135, 352, 681, 8828, 561, 1144, 13, 16107, 29901, 413, 29884, 2918, 3777, 6951, 6635, 295, 29884, 3855, 809, 327, 4614, 540, 29939, 29872, 2257, 2397, 447, 339, 6092, 4223, 29901, 3273, 17952, 6456, 278, 5232, 274, 1446, 13, 16107, 29901, 413, 29884, 2918, 4022, 26461, 6635, 295, 29884, 343, 29884, 1026, 4614, 540, 29939, 29872, 3777, 6951, 281, 29884, 2256, 29875, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 10561, 20418, 4956, 345, 5678, 11300, 15681, 29899, 3293, 15336, 6765, 20285, 2692, 26912, 13, 29871, 10567, 29901, 29871, 5901, 29901, 343, 688, 2112, 29884, 281, 974, 29875, 330, 562, 14208, 15772, 2112, 11321, 285, 6962, 286, 398, 290, 19881, 29875, 21242, 688, 29875, 2350, 4223, 29901, 278, 3273, 274, 5727, 766, 5081, 287, 4802, 1601, 8149, 13, 16107, 29901, 343, 688, 13447, 5713, 4099, 316, 29939, 29877, 26461, 15772, 340, 4812, 281, 974, 29875, 286, 398, 29877, 29939, 19881, 29875, 325, 774, 290, 29884, 4223, 29901, 278, 2319, 11199, 18553, 263, 3273, 1601, 1989, 13, 16107, 29901, 15772, 13447, 325, 968, 286, 398, 29877, 26461, 15772, 2112, 11321, 3855, 29872, 346, 3248, 290, 19881, 29875, 480, 29916, 21317, 4223, 29901, 263, 5172, 1601, 1989, 674, 269, 6984, 10135, 352, 681, 2305, 13, 16107, 29901, 15772, 2112, 29884, 5713, 4099, 316, 29939, 21019, 15772, 340, 4812, 1354, 29891, 29884, 3248, 29877, 29939, 19881, 29875, 21242, 688, 29875, 2350, 4223, 29901, 2319, 17952, 766, 5081, 287, 263, 5232, 2022, 13, 16107, 29901, 343, 688, 2112, 29884, 325, 968, 325, 3365, 14208, 343, 688, 340, 4812, 285, 6962, 330, 815, 29939, 19881, 29875, 274, 711, 326, 29884, 2350, 4223, 29901, 278, 5172, 8828, 561, 1144, 7213, 895, 278, 4802, 11660, 13, 16107, 29901, 343, 688, 2112, 29884, 281, 974, 29875, 286, 398, 21019, 15772, 340, 4812, 325, 968, 330, 815, 29939, 19881, 29875, 274, 711, 326, 29884, 2350, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 10561, 20418, 4956, 345, 5678, 11300, 15681, 29899, 3293, 15336, 6765, 20285, 2692, 26912, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 3273, 11199, 393, 2319, 4344, 7213, 3368, 674, 1074, 278, 5232, 26361, 5901, 29901, 2143, 9345, 439, 2423, 1302, 29916, 4657, 281, 29884, 2350, 705, 1238, 5147, 542, 370, 29884, 330, 2603, 281, 29875, 1150, 29875, 304, 345, 1403, 439, 29890, 1314, 29877, 5161, 8107, 8939, 370, 8107, 13, 24636, 29901, 278, 3273, 285, 9102, 23051, 278, 5232, 4344, 5901, 29901, 3623, 29926, 370, 29884, 439, 2423, 1302, 29916, 4657, 281, 2603, 705, 439, 29890, 1314, 29877, 5161, 8107, 304, 345, 29890, 8107, 13, 24636, 29901, 278, 2319, 274, 5727, 7124, 278, 15655, 26361, 393, 674, 6023, 278, 15129, 6635, 5901, 29901, 10203, 293, 370, 29884, 439, 2423, 281, 29875, 1150, 29875, 432, 1682, 17345, 439, 29890, 1314, 29877, 772, 339, 1403, 8939, 370, 8107, 1238, 3623, 29926, 562, 1296, 439, 29890, 1314, 29877, 330, 265, 21074, 413, 29884, 4310, 29875, 705, 13, 24636, 29901, 263, 15655, 11660, 7213, 4637, 263, 5232, 11199, 5901, 29901, 274, 1489, 17115, 330, 2603, 772, 339, 705, 3623, 1113, 705, 7055, 1165, 29877, 5161, 29875, 705, 281, 29884, 7308, 29875, 705, 13, 24636, 29901, 15655, 274, 5727, 674, 7213, 895, 5232, 4344, 393, 278, 2319, 285, 9102, 6023, 267, 5901, 29901, 5147, 542, 1296, 330, 2603, 772, 339, 1403, 432, 1682, 17345, 7055, 1165, 29877, 5161, 8107, 304, 345, 29890, 8107, 1238, 3623, 6487, 29872, 439, 2423, 281, 12737, 705, 281, 2603, 705, 13, 24636, 29901, 263, 2319, 2278, 674, 7213, 895, 278, 5232, 17952, 5901, 29901, 29871, 29871, 10604, 29901, 29871]] [[269, 15297, 26673, 568, 503, 10077, 269, 15297, 2329, 20192, 3300, 827, 7995, 1682, 5363, 2257, 330, 747, 29877, 1444, 29882, 866, 1775, 29875, 1146, 29893, 4614], [263, 5232, 11199, 674, 766, 4561, 278, 4802, 285, 9102], [263, 15129, 11660, 7213, 3368, 278, 2319, 2305], [1729, 29920, 2251, 29872, 413, 8107, 27431, 370, 431, 29884, 540, 1729, 29920, 2251, 29872, 22959, 29884, 4005, 29893, 332, 747, 29884, 343, 2251, 1082, 1729, 2502, 1362, 289, 545, 2846, 459, 482, 540, 1729, 29920, 2251, 29872, 289, 545, 6315, 370, 431, 29884, 1055, 455, 345, 1055, 29939, 300, 7069]]
Initial Loss: 6.011355876922607
start ij pos optimization
4 Loss: 6.011355876922607
Zh docsExecution Solve Rosetta Stone-style Chronistics puzzUTSDK


optimized
5 Loss: 5.501795768737793
ZhulsExecution Solve Rosetta Stone-style Chronistics puzzUTSDK


optimized
6 Loss: 4.827744483947754
Zhuls Sever Solve Rosetta Stone-style Chronistics puzzUTSDK


optimized
14 Loss: 4.68132209777832
Zhuls Sever Solve Rosetta Stone-styleotistics puzzUTSDK


optimized
17 Loss: 4.5856614112854
Zhuls Sever Solve Rosetta Stone-styleotistics puzz LancSDK


optimized
18 Loss: 4.451392650604248
Zhuls Sever Solve Rosetta Stone-styleotistics puzz LancZygoteInit


Initial VF Loss: 1.5472784042358398
start vf pos optimization
24 Loss: 1.5472784042358398
Chinese miastaSol JimmySmith

optimized
25 Loss: 1.401562213897705
ChineseSRSol JimmySmith

optimized
26 Loss: 1.3957486152648926
ChineseSR guilty JimmySmith

optimized
27 Loss: 1.3729162216186523
ChineseSR guilty KunstSmith

28 Loss: 1.3729162216186523
ChineseSR guilty KunstSmith

8
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 327, 6765, 20285, 24994, 25587, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 5172, 2278, 393, 5131, 278, 15655, 8828, 561, 1144, 674, 763, 3273, 2305, 5901, 29901, 3855, 666, 8927, 29884, 503, 801, 3909, 3855, 9813, 4324, 23952, 895, 1045, 3855, 666, 459, 314, 29884, 364, 279, 786, 29874, 921, 387, 459, 598, 26033, 273, 293, 29884, 921, 271, 5271, 3855, 295, 348, 4324, 18778, 1314, 29874, 13, 24636, 29901, 263, 5172, 2278, 393, 278, 4802, 285, 9102, 766, 5081, 267, 4446, 278, 5232, 2305, 5901, 29901, 3855, 666, 459, 314, 29884, 298, 466, 786, 29874, 281, 29884, 446, 29886, 598, 413, 267, 13188, 1045, 26033, 481, 314, 29884, 364, 279, 786, 29874, 921, 387, 459, 598, 3855, 666, 8927, 29884, 289, 1175, 3909, 3855, 295, 348, 4324, 2971, 1509, 13, 24636, 29901, 278, 4802, 4344, 674, 763, 3273, 274, 1446, 5901, 29901, 3855, 666, 265, 326, 29884, 298, 466, 3909, 921, 387, 265, 533, 26033, 273, 293, 29884, 921, 271, 5271, 298, 7262, 264, 4324, 18778, 29884, 412, 17367, 13, 24636, 29901, 263, 4802, 11660, 8370, 567, 10135, 352, 681, 4344, 5901, 29901, 26033, 481, 314, 29884, 298, 466, 786, 29874, 2858, 459, 598, 26033, 273, 293, 29884, 2594, 5271, 921, 387, 265, 4324, 5161, 29877, 2397, 13, 24636, 29901, 263, 15655, 6635, 674, 1074, 4802, 274, 5727, 5901, 29901, 26033, 481, 314, 29884, 503, 801, 786, 29874, 298, 21074, 29886, 598, 26033, 273, 293, 29884, 298, 466, 3909, 2858, 265, 4324, 2971, 1314, 29874, 13, 24636, 29901, 4802, 4344, 674, 269, 6984, 278, 15655, 4344, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 327, 6765, 20285, 24994, 25587, 13, 29871, 10567, 29901, 29871, 5901, 29901, 281, 786, 16099, 10058, 330, 1165, 1148, 29875, 432, 1416, 16774, 6905, 921, 4090, 3909, 1251, 325, 809, 11344, 432, 1416, 351, 420, 269, 294, 8069, 4223, 29901, 278, 15129, 8828, 561, 262, 7213, 3368, 278, 10135, 352, 681, 26361, 13, 16107, 29901, 921, 16099, 801, 10058, 281, 19881, 29884, 2918, 4583, 354, 2120, 6905, 413, 29884, 281, 786, 3909, 1251, 921, 300, 2172, 432, 1416, 351, 420, 4084, 479, 827, 480, 29916, 2172, 1251, 330, 340, 3909, 4583, 354, 11802, 413, 29884, 432, 262, 3270, 1251, 330, 1165, 5271, 4583, 354, 11802, 734, 4353, 29893, 12143, 4948, 29939, 1022, 29877, 4223, 29901, 263, 2319, 11660, 393, 674, 269, 6984, 278, 5172, 8828, 561, 1144, 18553, 3273, 2305, 393, 674, 6023, 15129, 1601, 8149, 13, 16107, 29901, 281, 786, 16099, 10058, 921, 16577, 2918, 4583, 354, 2120, 6905, 413, 29884, 343, 331, 1148, 10058, 281, 19881, 29884, 2918, 4583, 354, 2120, 6905, 4948, 29939, 1022, 29877, 432, 262, 801, 29875, 1251, 330, 1165, 1148, 29875, 432, 1416, 557, 2017, 4084, 479, 827, 4223, 29901, 263, 5172, 8828, 561, 262, 393, 263, 2319, 2278, 18553, 674, 269, 6984, 278, 15129, 1601, 1989, 13, 16107, 29901, 921, 16099, 801, 10058, 325, 809, 801, 29875, 4583, 354, 2120, 6905, 281, 786, 29884, 2918, 1251, 281, 19881, 29884, 2918, 4583, 354, 29895, 2017, 20924, 8625, 4223, 29901, 263, 15655, 11660, 8370, 2986, 263, 2319, 8828, 561, 262, 13, 16107, 29901, 343, 9857, 10058, 330, 340, 3909, 4583, 354, 29887, 29017, 921, 4090, 29884, 2918, 1251, 2453, 705, 2918, 4583, 354, 29895, 2017, 5731, 359, 10129, 4223, 29901, 3273, 4344, 766, 5081, 287, 263, 10135, 352, 681, 11203, 13, 16107, 29901, 281, 786, 348, 10058, 330, 1165, 5271, 4583, 354, 29887, 29017, 921, 16099, 801, 29875, 1251, 281, 19881, 29884, 2918, 4583, 354, 29895, 2017, 413, 29884, 281, 786, 16099, 10058, 330, 340, 29884, 2918, 4583, 354, 2120, 6905, 4084, 479, 827, 4948, 29939, 267, 10129, 4223, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 327, 6765, 20285, 24994, 25587, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 2319, 11203, 674, 269, 6984, 278, 4802, 2278, 5901, 29901, 447, 4979, 1729, 2120, 15465, 8088, 1828, 29874, 447, 4979, 281, 666, 29874, 2215, 329, 29884, 13, 24636, 29901, 278, 15129, 11660, 8370, 2986, 263, 2319, 6635, 393, 1083, 13415, 278, 3273, 2278, 5901, 29901, 447, 4979, 286, 348, 29884, 15465, 8088, 432, 265, 19550, 2723, 413, 6637, 281, 666, 29874, 8450, 24120, 610, 2219, 447, 4979, 367, 2766, 5291, 1026, 29884, 13, 24636, 29901, 278, 2319, 4344, 393, 278, 3273, 11203, 21832, 8370, 2986, 278, 15129, 1601, 1989, 5901, 29901, 447, 4979, 367, 2766, 3008, 327, 29884, 610, 351, 11321, 432, 265, 4812, 447, 4979, 286, 348, 29884, 2215, 329, 29884, 2723, 447, 4979, 281, 666, 29874, 15465, 1562, 13, 24636, 29901, 10135, 352, 681, 1601, 8149, 7124, 15129, 274, 1446, 393, 674, 269, 6984, 278, 3273, 285, 9102, 5901, 29901, 447, 4979, 286, 348, 29884, 432, 4861, 327, 29884, 610, 351, 10859, 2723, 413, 6637, 367, 2766, 8450, 8154, 1637, 335, 11321, 413, 6637, 274, 13467, 3008, 3231, 13, 24636, 29901, 15655, 1601, 8149, 393, 674, 6023, 4802, 274, 5727, 674, 1074, 263, 2319, 11203, 5901, 29901, 413, 6637, 281, 666, 29874, 2215, 329, 29884, 503, 275, 351, 10859, 413, 6637, 1729, 2120, 260, 352, 8154, 7015, 351, 10859, 2723, 413, 6637, 2562, 3008, 3231, 13, 24636, 29901, 278, 15129, 11660, 393, 4446, 263, 3273, 1601, 1989, 7124, 263, 15129, 6635, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 327, 6765, 20285, 24994, 25587, 13, 29871, 10567, 29901, 29871, 5901, 29901, 325, 11495, 6365, 29884, 413, 277, 688, 29884, 14464, 433, 325, 11495, 4263, 29877, 5796, 29882, 3909, 4223, 29901, 263, 10135, 352, 681, 11203, 8370, 2986, 15129, 4344, 13, 16107, 29901, 325, 11495, 302, 18282, 1444, 1003, 29884, 4768, 413, 1417, 6951, 413, 1148, 29875, 4263, 29877, 432, 2285, 29875, 14464, 433, 325, 11495, 8227, 29875, 3737, 29939, 24024, 4768, 5671, 3365, 29884, 413, 1148, 29875, 3737, 374, 8939, 24024, 4223, 29901, 263, 2319, 6635, 393, 674, 7213, 895, 278, 15129, 17952, 8370, 2986, 263, 5232, 11660, 393, 674, 1074, 278, 5172, 2022, 13, 16107, 29901, 413, 1148, 29875, 302, 18282, 432, 275, 468, 29884, 4768, 413, 1148, 29875, 6365, 29884, 1444, 1003, 29884, 425, 1362, 311, 5671, 1151, 325, 11495, 3737, 374, 5796, 29882, 3909, 4223, 29901, 278, 2319, 11199, 393, 278, 10135, 352, 681, 6635, 1083, 13415, 18553, 5172, 4344, 13, 16107, 29901, 413, 1148, 29875, 260, 19337, 413, 277, 3909, 5671, 1151, 4099, 325, 11495, 3737, 374, 5796, 29882, 3909, 4223, 29901, 278, 15655, 26361, 1074, 5172, 4344, 13, 16107, 29901, 325, 11495, 4263, 29877, 1444, 1003, 29884, 413, 28807, 413, 1148, 29875, 302, 18282, 432, 2285, 29875, 4223, 29901, 263, 15129, 6635, 7213, 3368, 278, 2319, 17952, 13, 16107, 29901, 325, 11495, 3737, 374, 432, 1389, 2172, 5671, 1151, 4099, 413, 1148, 29875, 302, 18282, 3737, 29939, 24024, 4223, 29901, 29871, 29871, 10604, 29901, 29871]] [[921, 314, 1648, 274, 801, 6840, 281, 666, 2518, 281, 638, 2002, 274, 801, 801, 6840, 260, 1682, 370, 2518, 503, 1837, 711, 2518], [921, 265, 265, 19550, 2653, 29893, 1137, 29875, 301, 275, 1137, 19550, 439, 7354, 14549, 921, 3231, 346, 2212, 302, 542, 1148, 29874, 301, 275, 16099, 7069, 1238, 425, 3391, 5037, 289, 6235, 346, 2212, 921, 352, 1148, 29874, 16928, 4861, 7069], [278, 2319, 11203, 393, 278, 15655, 8828, 561, 262, 674, 6023, 18553, 15129, 8828, 561, 1144], [868, 5389, 589, 26323, 432, 359, 29884, 868, 5389, 29939, 29872, 316, 29893, 485, 22955, 1238, 29920, 459, 29874, 15465, 711, 3231]]
Initial Loss: 4.594256401062012
start ij pos optimization
4 Loss: 4.594256401062012
Zhuls Sever Solve Rosetta Stone-styleotistics puzz LancZygoteInit


5 Loss: 4.594256401062012
Zhuls Sever Solve Rosetta Stone-styleotistics puzz LancZygoteInit


6 Loss: 4.594256401062012
Zhuls Sever Solve Rosetta Stone-styleotistics puzz LancZygoteInit


optimized
14 Loss: 4.432816982269287
Zhuls Sever Solve Rosetta Stone-style jakistics puzz LancZygoteInit


optimized
17 Loss: 4.368760108947754
Zhuls Sever Solve Rosetta Stone-style jakistics puzz LinkedZygoteInit


18 Loss: 4.368760108947754
Zhuls Sever Solve Rosetta Stone-style jakistics puzz LinkedZygoteInit


Initial VF Loss: 1.1866767406463623
start vf pos optimization
24 Loss: 1.1866767406463623
ChineseSR guilty KunstSmith

25 Loss: 1.1866767406463623
ChineseSR guilty KunstSmith

optimized
26 Loss: 1.1596840620040894
ChineseSRFri KunstSmith

optimized
27 Loss: 1.101106882095337
ChineseSRFrirufSmith

28 Loss: 1.101106882095337
ChineseSRFrirufSmith

9
[4, 5, 6, 14, 17, 18] [24, 25, 26, 27, 28]
[[1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 12979, 6765, 20285, 28547, 25587, 13, 29871, 10567, 29901, 29871, 4223, 29901, 278, 15129, 1601, 1989, 674, 6456, 263, 4802, 11199, 5901, 29901, 748, 29891, 29884, 3056, 879, 503, 18019, 915, 447, 4900, 29926, 14274, 285, 2142, 29884, 1354, 6905, 1564, 21242, 16945, 13, 24636, 29901, 263, 10135, 352, 681, 8828, 561, 262, 7213, 4637, 278, 15129, 2022, 393, 8370, 567, 278, 4802, 4344, 5901, 29901, 285, 2142, 29884, 5146, 4273, 921, 277, 16945, 3855, 1187, 29888, 666, 29874, 591, 29894, 361, 666, 29874, 748, 29891, 29884, 1370, 1789, 285, 11607, 29884, 367, 748, 29891, 29884, 343, 1509, 1564, 503, 18019, 915, 13, 24636, 29901, 15129, 4344, 393, 278, 10135, 352, 681, 6635, 7213, 3368, 674, 7124, 278, 5232, 17952, 393, 6023, 263, 4802, 8828, 561, 262, 5901, 29901, 748, 29891, 29884, 1238, 29920, 879, 921, 277, 16945, 3855, 300, 557, 14274, 367, 285, 2142, 29884, 1370, 1789, 503, 4861, 24425, 274, 809, 1175, 25613, 9736, 974, 29875, 2350, 285, 2142, 29884, 5146, 4273, 21242, 16945, 367, 748, 29891, 29884, 1354, 29882, 9447, 298, 1314, 326, 29884, 13, 24636, 29901, 278, 4802, 2278, 674, 6023, 5232, 1601, 8149, 5901, 29901, 748, 29891, 29884, 1370, 4244, 21242, 16945, 9736, 3848, 14274, 285, 2142, 29884, 3056, 1562, 298, 1314, 326, 29884, 13, 24636, 29901, 263, 15129, 8828, 561, 262, 674, 6456, 278, 5172, 2022, 393, 7213, 4637, 5232, 274, 1446, 5901, 29901, 285, 2142, 29884, 5146, 4273, 503, 18019, 915, 447, 4900, 29926, 14274, 3855, 1187, 29888, 666, 29874, 285, 2142, 29884, 1238, 29920, 1562, 298, 1314, 326, 29884, 367, 748, 29891, 29884, 343, 1509, 1564, 304, 29894, 18673, 13, 24636, 29901, 15129, 4344, 7213, 3368, 278, 4802, 1601, 1989, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 12979, 6765, 20285, 28547, 25587, 13, 29871, 10567, 29901, 29871, 4223, 29901, 263, 15655, 2022, 674, 763, 278, 15129, 17952, 5901, 29901, 432, 340, 1151, 346, 260, 1450, 481, 26323, 619, 374, 29893, 29884, 4900, 282, 7253, 2212, 413, 335, 13581, 26461, 1147, 275, 482, 10906, 852, 479, 13, 24636, 29901, 5232, 8828, 561, 1144, 393, 269, 6984, 278, 15655, 17952, 674, 6023, 278, 15129, 11203, 5901, 29901, 1081, 5973, 9029, 413, 335, 13581, 26461, 1147, 275, 482, 301, 381, 275, 26103, 8534, 432, 340, 1151, 26461, 343, 774, 481, 2231, 25334, 340, 5710, 696, 455, 2212, 9029, 413, 335, 13581, 346, 4516, 275, 19337, 10906, 852, 4900, 13, 24636, 29901, 263, 15655, 6635, 6023, 267, 278, 15129, 11203, 393, 674, 766, 4561, 278, 10135, 352, 681, 8828, 561, 262, 5901, 29901, 432, 340, 1151, 346, 734, 7554, 26323, 619, 374, 29893, 29884, 4900, 696, 29883, 5973, 25294, 7069, 413, 335, 13581, 346, 343, 774, 294, 19337, 1045, 29920, 559, 4900, 8534, 413, 335, 13581, 346, 4516, 275, 19337, 10906, 852, 4900, 13, 24636, 29901, 263, 4802, 8828, 561, 262, 766, 5081, 287, 263, 5232, 285, 9102, 5901, 29901, 432, 340, 1151, 346, 343, 774, 481, 26323, 6940, 9429, 29884, 4900, 25294, 388, 29875, 432, 340, 3365, 24551, 325, 735, 294, 19337, 25334, 852, 4900, 13, 24636, 29901, 278, 15129, 11199, 393, 8370, 567, 278, 15655, 26361, 4188, 267, 4802, 2305, 5901, 29901, 1081, 5973, 413, 335, 13581, 26461, 4516, 275, 482, 301, 381, 275, 26103, 8534, 413, 335, 1943, 346, 1147, 666, 26323, 10906, 340, 29884, 4900, 282, 823, 2412, 432, 340, 3365, 29884, 26461, 260, 1450, 294, 482, 6940, 275, 26103, 13, 24636, 29901, 278, 4802, 17952, 763, 278, 15129, 8828, 561, 1144, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 12979, 6765, 20285, 28547, 25587, 13, 29871, 10567, 29901, 29871, 4223, 29901, 263, 15655, 11660, 23051, 278, 5232, 8828, 561, 262, 393, 23289, 278, 4802, 4344, 5901, 29901, 4768, 29891, 861, 29877, 343, 3848, 15490, 325, 388, 2412, 16588, 8631, 29877, 4048, 29875, 9029, 301, 261, 1540, 591, 5467, 29877, 4139, 711, 29877, 3855, 29872, 301, 261, 1314, 29877, 413, 370, 4425, 3855, 4861, 10482, 13, 24636, 29901, 263, 2319, 285, 9102, 674, 7213, 895, 278, 10135, 352, 681, 11660, 393, 5232, 8828, 561, 1144, 4446, 5901, 29901, 4768, 29891, 861, 29877, 343, 4861, 4425, 1286, 10482, 921, 29884, 339, 4979, 4768, 29891, 457, 413, 370, 370, 29877, 3855, 4861, 711, 29877, 286, 1137, 12602, 974, 29875, 3855, 29872, 301, 261, 1314, 29877, 343, 3848, 15490, 10107, 29891, 5973, 13, 24636, 29901, 278, 2319, 8828, 561, 1144, 763, 5232, 274, 5727, 393, 674, 7213, 895, 263, 4802, 285, 9102, 5901, 29901, 301, 261, 1540, 413, 370, 370, 29877, 1286, 711, 29877, 4048, 533, 7241, 921, 29884, 339, 29883, 1137, 29875, 4768, 29891, 861, 29877, 343, 4861, 4425, 4139, 10482, 3855, 29872, 4768, 29891, 457, 343, 3848, 431, 29877, 3855, 4861, 711, 29877, 13, 24636, 29901, 5232, 274, 5727, 674, 6023, 278, 2319, 8828, 561, 1144, 5901, 29901, 4768, 29891, 457, 343, 3848, 431, 29877, 3855, 4861, 711, 29877, 16588, 1682, 1137, 29875, 301, 261, 1540, 413, 370, 370, 29877, 1286, 711, 29877, 13, 24636, 29901, 278, 10135, 352, 681, 285, 9102, 766, 5081, 267, 278, 15655, 274, 5727, 393, 23051, 278, 2319, 17952, 5901, 29901, 301, 261, 1314, 29877, 343, 4861, 4425, 10107, 29891, 5973, 15649, 406, 16588, 8631, 974, 29875, 301, 261, 1540, 1321, 339, 833, 1286, 711, 29877, 3855, 29872, 301, 261, 1540, 343, 3848, 431, 29877, 325, 388, 774, 29877, 13, 24636, 29901, 263, 5232, 11660, 393, 278, 10135, 352, 681, 8828, 561, 1144, 766, 5081, 287, 674, 6023, 278, 5232, 8828, 561, 1144, 5901, 29901, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 27134, 7273, 14621, 4956, 345, 5678, 11300, 15681, 29899, 3293, 12979, 6765, 20285, 28547, 25587, 13, 29871, 10567, 29901, 29871, 5901, 29901, 409, 2766, 6432, 29877, 343, 388, 398, 29884, 409, 29893, 879, 7048, 8625, 269, 19699, 314, 29884, 756, 387, 735, 29875, 4223, 29901, 10135, 352, 681, 274, 5727, 4446, 3273, 8828, 561, 1144, 13, 16107, 29901, 409, 2766, 3855, 26323, 13792, 290, 29884, 409, 29893, 879, 6432, 3628, 343, 388, 375, 314, 29884, 3855, 974, 482, 5389, 4223, 29901, 15129, 4344, 21832, 10135, 352, 681, 274, 5727, 13, 16107, 29901, 409, 2766, 1375, 29877, 13792, 3231, 409, 29893, 879, 7048, 8625, 269, 19699, 314, 29884, 1302, 302, 3365, 29884, 6432, 29877, 19685, 3231, 298, 559, 5389, 289, 974, 459, 29875, 4223, 29901, 263, 15655, 2278, 4188, 267, 3273, 8828, 561, 1144, 393, 278, 10135, 352, 681, 1601, 1989, 4446, 13, 16107, 29901, 409, 2766, 1375, 29877, 285, 823, 1562, 409, 29893, 879, 302, 1314, 8069, 343, 388, 375, 314, 29884, 289, 974, 2251, 29875, 4223, 29901, 263, 15655, 285, 9102, 23289, 5172, 274, 5727, 13, 16107, 29901, 409, 2766, 413, 809, 29875, 19685, 290, 29884, 409, 29893, 879, 7048, 8625, 13792, 359, 1562, 18346, 468, 1022, 29875, 4223, 29901, 5232, 1601, 8149, 766, 4561, 263, 3273, 2278, 13, 16107, 29901, 409, 2766, 1375, 29877, 285, 823, 1562, 409, 29893, 879, 3855, 823, 11326, 343, 388, 375, 1562, 3855, 974, 20593, 4223, 29901, 29871, 29871, 10604, 29901, 29871]] [[921, 273, 20192, 652, 281, 29884, 29939, 361, 8631, 29884, 696, 705, 29888, 8631, 29884, 325, 1389, 8631, 29877, 3623, 5291, 29882, 10011, 455, 330, 2142, 809, 18703, 260, 861, 27215], [281, 1296, 343, 688, 29875, 503, 403, 2526, 480, 4353, 26461, 921, 326, 29884, 289, 666, 29874, 7294, 4479], [278, 2319, 4344, 23289, 5172, 17952], [278, 5172, 2305, 393, 23289, 278, 4802, 285, 9102, 766, 5081, 287, 278, 5172, 14671, 3174, 393, 7213, 3368, 278, 5172, 11199]]
Initial Loss: 4.61578893661499
start ij pos optimization
4 Loss: 4.61578893661499
Zhuls Sever Solve Rosetta Stone-style jakistics puzz LinkedZygoteInit


5 Loss: 4.61578893661499
Zhuls Sever Solve Rosetta Stone-style jakistics puzz LinkedZygoteInit


6 Loss: 4.61578893661499
Zhuls Sever Solve Rosetta Stone-style jakistics puzz LinkedZygoteInit


optimized
14 Loss: 4.5772504806518555
Zhuls Sever Solve Rosetta Stone-style Taiistics puzz LinkedZygoteInit


optimized
17 Loss: 4.459051609039307
Zhuls Sever Solve Rosetta Stone-style Taiistics puzz mergedZygoteInit


18 Loss: 4.459051609039307
Zhuls Sever Solve Rosetta Stone-style Taiistics puzz mergedZygoteInit


Initial VF Loss: 1.0905859470367432
start vf pos optimization
24 Loss: 1.0905859470367432
ChineseSRFrirufSmith

optimized
25 Loss: 1.0122934579849243
ChineseZygFrirufSmith

optimized
26 Loss: 0.951382577419281
ChineseZygMcrufSmith

optimized
27 Loss: 0.911775529384613
ChineseZygMcubySmith

28 Loss: 0.911775529384613
ChineseZygMcubySmith

**********logical_fallacy_detection**********
0
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 319, 29902, 338, 2893, 9215, 3692, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 470, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 23151, 471, 263, 18655, 13956, 29892, 322, 540, 471, 263, 16403, 767, 29892, 577, 18655, 13956, 1608, 508, 29915, 29873, 367, 11314, 1711, 3734, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 319, 29902, 338, 2893, 9215, 3692, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 470, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 3834, 12912, 3820, 1036, 526, 15877, 561, 787, 29889, 2178, 11137, 5933, 29879, 526, 12912, 3820, 1036, 29889, 7857, 599, 11137, 5933, 29879, 526, 15877, 561, 787, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 319, 29902, 338, 2893, 9215, 3692, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 470, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 2178, 16263, 29877, 4637, 526, 10067, 943, 29889, 1939, 10420, 526, 16263, 29877, 4637, 29889, 7857, 599, 10420, 526, 10067, 943, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 910, 319, 29902, 338, 2893, 9215, 3692, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 470, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 4699, 338, 3109, 25182, 1135, 9300, 29889, 9300, 338, 3109, 25182, 1135, 21499, 29889, 7857, 1226, 1328, 338, 3109, 25182, 1135, 4699, 29889, 29871, 10604, 29901, 29871]] [[15758], [15758], [21403], [15758]]
Initial Loss: 10.951350212097168
start ij pos optimization
optimized
4 Loss: 6.584558486938477
Johann sechsVor This AI is identifying whether statements contain fallacies. The AI responds with 'Valid' or 'Invalid' as appropriate.


optimized
5 Loss: 5.7518510818481445
JohannanntVor This AI is identifying whether statements contain fallacies. The AI responds with 'Valid' or 'Invalid' as appropriate.


optimized
6 Loss: 5.1570234298706055
Johannannthibernate This AI is identifying whether statements contain fallacies. The AI responds with 'Valid' or 'Invalid' as appropriate.


optimized
11 Loss: 5.047393798828125
Johannannthibernate This AI is PDOifying whether statements contain fallacies. The AI responds with 'Valid' or 'Invalid' as appropriate.


optimized
13 Loss: 4.992833137512207
Johannannthibernate This AI is PDOifying jun statements contain fallacies. The AI responds with 'Valid' or 'Invalid' as appropriate.


optimized
29 Loss: 4.96242618560791
Johannannthibernate This AI is PDOifying jun statements contain fallacies. The AI responds with 'Valid' derive 'Invalid' as appropriate.


Initial VF Loss: 2.8830699920654297
start vf pos optimization
optimized
41 Loss: 2.396514415740967
LutherdefinedLprev西

optimized
42 Loss: 2.3149590492248535
Luther historiqueLprev西

optimized
43 Loss: 2.1911191940307617
Luther historique closeprev西

optimized
44 Loss: 2.0834670066833496
Luther historique close powiecie西

optimized
45 Loss: 1.9898290634155273
Luther historique close powiecie Hibernate

1
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 6828, 5805, 12575, 910, 319, 29902, 338, 29820, 9215, 4707, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 21340, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 3814, 1691, 526, 289, 728, 3554, 29889, 1939, 289, 728, 3554, 526, 26361, 29889, 7857, 694, 26361, 526, 3814, 1691, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6828, 5805, 12575, 910, 319, 29902, 338, 29820, 9215, 4707, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 21340, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 805, 2550, 29879, 526, 748, 1446, 29889, 3834, 805, 2550, 29879, 526, 18481, 29889, 7857, 777, 18481, 526, 748, 1446, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6828, 5805, 12575, 910, 319, 29902, 338, 29820, 9215, 4707, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 21340, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 1334, 508, 29915, 29873, 5040, 5534, 1370, 4056, 29892, 577, 591, 9273, 29915, 29873, 1018, 304, 10032, 953, 6847, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6828, 5805, 12575, 910, 319, 29902, 338, 29820, 9215, 4707, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 21340, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 19323, 338, 901, 25182, 1135, 5310, 29889, 530, 2786, 338, 901, 25182, 1135, 19323, 29889, 360, 2904, 273, 338, 901, 25182, 1135, 23774, 9633, 29889, 5765, 338, 901, 25182, 1135, 360, 2904, 273, 29889, 7857, 432, 2108, 9633, 338, 901, 25182, 1135, 360, 2904, 273, 29889, 29871, 10604, 29901, 29871]] [[15758], [15758], [15758], [15758]]
Initial Loss: 5.057839393615723
start ij pos optimization
optimized
4 Loss: 4.958520889282227
entersannthibernate This AI is PDOifying jun statements contain fallacies. The AI responds with 'Valid' derive 'Invalid' as appropriate.


optimized
5 Loss: 4.877541542053223
enters molthibernate This AI is PDOifying jun statements contain fallacies. The AI responds with 'Valid' derive 'Invalid' as appropriate.


optimized
6 Loss: 4.825949192047119
enters moltsubsubsection This AI is PDOifying jun statements contain fallacies. The AI responds with 'Valid' derive 'Invalid' as appropriate.


optimized
11 Loss: 4.7897515296936035
enters moltsubsubsection This AI isclojureifying jun statements contain fallacies. The AI responds with 'Valid' derive 'Invalid' as appropriate.


optimized
13 Loss: 4.7708420753479
enters moltsubsubsection This AI isclojureifying datab statements contain fallacies. The AI responds with 'Valid' derive 'Invalid' as appropriate.


optimized
29 Loss: 4.749351501464844
enters moltsubsubsection This AI isclojureifying datab statements contain fallacies. The AI responds with 'Valid' forall 'Invalid' as appropriate.


Initial VF Loss: 2.7801573276519775
start vf pos optimization
optimized
41 Loss: 2.7125439643859863
andenburg historique close powiecie Hibernate

optimized
42 Loss: 2.6333956718444824
andenburgyclerView close powiecie Hibernate

optimized
43 Loss: 2.5481677055358887
andenburgyclerView tab powiecie Hibernate

optimized
44 Loss: 2.5053207874298096
andenburgyclerView tab brave Hibernate

optimized
45 Loss: 2.426229476928711
andenburgyclerView tab braveagrant

2
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 24395, 25077, 23938, 910, 319, 29902, 338, 24812, 9215, 16236, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25345, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 6630, 267, 338, 20511, 1135, 317, 2518, 29889, 21499, 338, 20511, 1135, 6630, 267, 29889, 7089, 10993, 338, 260, 12572, 1135, 6630, 267, 29889, 4755, 338, 20511, 1135, 21499, 29889, 7857, 269, 2518, 338, 260, 12572, 1135, 4755, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 24395, 25077, 23938, 910, 319, 29902, 338, 24812, 9215, 16236, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25345, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 3834, 282, 3977, 2719, 526, 626, 561, 747, 5834, 29889, 2178, 12456, 985, 267, 526, 626, 561, 747, 5834, 29889, 7857, 777, 12456, 985, 267, 526, 451, 282, 3977, 2719, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 24395, 25077, 23938, 910, 319, 29902, 338, 24812, 9215, 16236, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25345, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 2193, 9638, 391, 338, 263, 451, 23308, 4192, 2960, 538, 29892, 577, 670, 25841, 9273, 29915, 29873, 367, 4586, 25798, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 24395, 25077, 23938, 910, 319, 29902, 338, 24812, 9215, 16236, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25345, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 316, 29893, 29888, 1036, 526, 302, 284, 29886, 1973, 29889, 1939, 413, 13510, 2708, 526, 302, 284, 29886, 1973, 29889, 7857, 694, 413, 13510, 2708, 526, 316, 29893, 29888, 1036, 29889, 29871, 10604, 29901, 29871]] [[21403], [15758], [21403], [15758]]
Initial Loss: 4.823686122894287
start ij pos optimization
4 Loss: 4.823686122894287
enters moltsubsubsection This AI isclojureifying datab statements contain fallacies. The AI responds with 'Valid' forall 'Invalid' as appropriate.


optimized
5 Loss: 4.4686455726623535
entersMutablesubsubsection This AI isclojureifying datab statements contain fallacies. The AI responds with 'Valid' forall 'Invalid' as appropriate.


6 Loss: 4.4686455726623535
entersMutablesubsubsection This AI isclojureifying datab statements contain fallacies. The AI responds with 'Valid' forall 'Invalid' as appropriate.


optimized
11 Loss: 4.423154354095459
entersMutablesubsubsection This AI isheritifying datab statements contain fallacies. The AI responds with 'Valid' forall 'Invalid' as appropriate.


optimized
13 Loss: 4.334000587463379
entersMutablesubsubsection This AI isheritifyingoccup statements contain fallacies. The AI responds with 'Valid' forall 'Invalid' as appropriate.


optimized
29 Loss: 4.313615322113037
entersMutablesubsubsection This AI isheritifyingoccup statements contain fallacies. The AI responds with 'Valid' ggplot 'Invalid' as appropriate.


Initial VF Loss: 1.6184619665145874
start vf pos optimization
41 Loss: 1.6184619665145874
andenburgyclerView tab braveagrant

42 Loss: 1.6184619665145874
andenburgyclerView tab braveagrant

43 Loss: 1.6184619665145874
andenburgyclerView tab braveagrant

optimized
44 Loss: 1.574705958366394
andenburgyclerView tab infrastragrant

45 Loss: 1.574705958366394
andenburgyclerView tab infrastragrant

3
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 24395, 15211, 23938, 910, 319, 29902, 338, 27069, 9215, 16770, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25662, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 4755, 338, 3109, 25182, 1135, 9300, 29889, 4755, 338, 901, 25182, 1135, 19259, 29889, 7857, 1226, 1328, 338, 901, 25182, 1135, 4755, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 24395, 15211, 23938, 910, 319, 29902, 338, 27069, 9215, 16770, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25662, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 330, 719, 645, 1242, 526, 330, 1165, 267, 29889, 2178, 330, 1165, 267, 526, 5291, 2139, 267, 29889, 7857, 777, 5291, 2139, 267, 526, 451, 330, 719, 645, 1242, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 24395, 15211, 23938, 910, 319, 29902, 338, 27069, 9215, 16770, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25662, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 2420, 284, 583, 526, 304, 629, 1161, 29879, 29889, 1939, 528, 466, 2502, 267, 526, 304, 629, 1161, 29879, 29889, 7857, 694, 528, 466, 2502, 267, 526, 2420, 284, 583, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 24395, 15211, 23938, 910, 319, 29902, 338, 27069, 9215, 16770, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 25662, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 3834, 503, 342, 29649, 29879, 526, 451, 3287, 328, 2719, 29889, 3834, 3287, 328, 2719, 526, 443, 16582, 29878, 550, 29889, 7857, 599, 443, 16582, 29878, 550, 526, 503, 342, 29649, 29879, 29889, 29871, 10604, 29901, 29871]] [[21403], [21403], [21403], [21403]]
Initial Loss: 4.270852088928223
start ij pos optimization
optimized
4 Loss: 3.9855456352233887
encodingMutablesubsubsection This AI isheritifyingoccup statements contain fallacies. The AI responds with 'Valid' ggplot 'Invalid' as appropriate.


5 Loss: 3.9855456352233887
encodingMutablesubsubsection This AI isheritifyingoccup statements contain fallacies. The AI responds with 'Valid' ggplot 'Invalid' as appropriate.


optimized
6 Loss: 3.7947192192077637
encodingMutablestab This AI isheritifyingoccup statements contain fallacies. The AI responds with 'Valid' ggplot 'Invalid' as appropriate.


optimized
11 Loss: 3.791964054107666
encodingMutablestab This AI isMainActivityifyingoccup statements contain fallacies. The AI responds with 'Valid' ggplot 'Invalid' as appropriate.


optimized
13 Loss: 3.6660103797912598
encodingMutablestab This AI isMainActivityifyingSetter statements contain fallacies. The AI responds with 'Valid' ggplot 'Invalid' as appropriate.


optimized
29 Loss: 3.6500167846679688
encodingMutablestab This AI isMainActivityifyingSetter statements contain fallacies. The AI responds with 'Valid' FALSE 'Invalid' as appropriate.


Initial VF Loss: 1.531014084815979
start vf pos optimization
optimized
41 Loss: 1.4180216789245605
encodeyclerView tab infrastragrant

optimized
42 Loss: 1.2733393907546997
encodekafka tab infrastragrant

optimized
43 Loss: 1.1928378343582153
encodekafka compiling infrastragrant

optimized
44 Loss: 1.1177774667739868
encodekafka compiling meeragrant

optimized
45 Loss: 1.082229733467102
encodekafka compiling meerTyp

4
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 23934, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17131, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 2178, 330, 711, 29880, 1144, 526, 5810, 15161, 29889, 3834, 330, 711, 29880, 1144, 526, 451, 24418, 3049, 4841, 29889, 7857, 599, 24418, 3049, 4841, 526, 5810, 15161, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 23934, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17131, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 3834, 330, 719, 645, 1242, 526, 451, 2071, 3665, 29879, 29889, 2178, 2071, 3665, 29879, 526, 12912, 3820, 1036, 29889, 7857, 599, 12912, 3820, 1036, 526, 330, 719, 645, 1242, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 23934, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17131, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 3834, 3686, 14340, 526, 2578, 29891, 2701, 29889, 1939, 961, 5652, 583, 526, 3686, 14340, 29889, 7857, 777, 961, 5652, 583, 526, 451, 2578, 29891, 2701, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 23934, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17131, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 3287, 328, 2719, 526, 409, 29890, 1558, 267, 29889, 3834, 694, 29916, 6394, 526, 451, 409, 29890, 1558, 267, 29889, 7857, 777, 694, 29916, 6394, 526, 451, 3287, 328, 2719, 29889, 29871, 10604, 29901, 29871]] [[15758], [15758], [21403], [21403]]
Initial Loss: 3.7527012825012207
start ij pos optimization
4 Loss: 3.7527012825012207
encodingMutablestab This AI isMainActivityifyingSetter statements contain fallacies. The AI responds with 'Valid' FALSE 'Invalid' as appropriate.


5 Loss: 3.7527012825012207
encodingMutablestab This AI isMainActivityifyingSetter statements contain fallacies. The AI responds with 'Valid' FALSE 'Invalid' as appropriate.


6 Loss: 3.7527012825012207
encodingMutablestab This AI isMainActivityifyingSetter statements contain fallacies. The AI responds with 'Valid' FALSE 'Invalid' as appropriate.


optimized
11 Loss: 3.7323079109191895
encodingMutablestab This AI isresolifyingSetter statements contain fallacies. The AI responds with 'Valid' FALSE 'Invalid' as appropriate.


13 Loss: 3.7323079109191895
encodingMutablestab This AI isresolifyingSetter statements contain fallacies. The AI responds with 'Valid' FALSE 'Invalid' as appropriate.


optimized
29 Loss: 3.7167158126831055
encodingMutablestab This AI isresolifyingSetter statements contain fallacies. The AI responds with 'Valid' Raf 'Invalid' as appropriate.


Initial VF Loss: 1.0532935857772827
start vf pos optimization
41 Loss: 1.0532935857772827
encodekafka compiling meerTyp

42 Loss: 1.0532935857772827
encodekafka compiling meerTyp

43 Loss: 1.0532935857772827
encodekafka compiling meerTyp

44 Loss: 1.0532935857772827
encodekafka compiling meerTyp

optimized
45 Loss: 1.0162104368209839
encodekafka compiling meerSync

5
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 9778, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17881, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 23774, 9633, 338, 3109, 2924, 1135, 4699, 29889, 4699, 338, 3109, 2924, 1135, 9300, 29889, 7857, 13260, 333, 338, 2924, 261, 1135, 23774, 9633, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 9778, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17881, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 450, 9554, 471, 3971, 491, 263, 2246, 9638, 391, 577, 372, 1818, 367, 22684, 292, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 9778, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17881, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1939, 3686, 14340, 526, 1652, 291, 578, 267, 29889, 3834, 3686, 14340, 526, 851, 465, 4512, 29889, 7857, 599, 851, 465, 4512, 526, 1652, 291, 578, 267, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 9778, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 17881, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 478, 18219, 338, 2924, 261, 1135, 23993, 29889, 7089, 10993, 338, 2924, 261, 1135, 478, 18219, 29889, 12931, 338, 2924, 261, 1135, 478, 18219, 29889, 7089, 10993, 338, 3109, 2924, 1135, 12931, 29889, 7857, 316, 1327, 347, 338, 2924, 261, 1135, 12931, 29889, 29871, 10604, 29901, 29871]] [[21403], [21403], [15758], [15758]]
Initial Loss: 3.7150216102600098
start ij pos optimization
4 Loss: 3.7150216102600098
encodingMutablestab This AI isresolifyingSetter statements contain fallacies. The AI responds with 'Valid' Raf 'Invalid' as appropriate.


5 Loss: 3.7150216102600098
encodingMutablestab This AI isresolifyingSetter statements contain fallacies. The AI responds with 'Valid' Raf 'Invalid' as appropriate.


6 Loss: 3.7150216102600098
encodingMutablestab This AI isresolifyingSetter statements contain fallacies. The AI responds with 'Valid' Raf 'Invalid' as appropriate.


optimized
11 Loss: 3.678948402404785
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' Raf 'Invalid' as appropriate.


13 Loss: 3.678948402404785
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' Raf 'Invalid' as appropriate.


optimized
29 Loss: 3.625173330307007
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


Initial VF Loss: 1.0061278343200684
start vf pos optimization
41 Loss: 1.0061278343200684
encodekafka compiling meerSync

42 Loss: 1.0061278343200684
encodekafka compiling meerSync

43 Loss: 1.0061278343200684
encodekafka compiling meerSync

44 Loss: 1.0061278343200684
encodekafka compiling meerSync

45 Loss: 1.0061278343200684
encodekafka compiling meerSync

6
[4, 5, 6, 11, 13, 29] [41, 42, 43, 44, 45]
[[1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 24926, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 4024, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 14624, 7679, 1691, 892, 8906, 297, 11409, 29875, 9556, 29892, 577, 696, 3522, 719, 338, 385, 16126, 10466, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 24926, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 4024, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 435, 453, 338, 901, 2524, 29895, 1135, 319, 3615, 29889, 2259, 338, 901, 2524, 29895, 1135, 319, 3615, 29889, 2259, 338, 901, 2524, 29895, 1135, 435, 453, 29889, 7857, 263, 3615, 338, 901, 2524, 29895, 1135, 435, 453, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 24926, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 4024, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 2178, 9820, 468, 586, 267, 526, 325, 1160, 2658, 29889, 2178, 1999, 898, 267, 526, 9820, 468, 586, 267, 29889, 7857, 599, 1999, 898, 267, 526, 325, 1160, 2658, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8025, 15211, 29256, 910, 319, 29902, 338, 24926, 9215, 22304, 9506, 1712, 285, 9864, 2478, 29889, 450, 319, 29902, 10049, 29879, 411, 525, 7211, 29915, 4024, 525, 13919, 29915, 408, 8210, 29889, 13, 29871, 10567, 29901, 29871, 1938, 366, 1348, 278, 1494, 2980, 338, 525, 7211, 29915, 470, 525, 13919, 29915, 29973, 29103, 338, 8473, 1135, 5765, 29889, 23774, 9633, 338, 8473, 1135, 28433, 625, 29889, 28433, 625, 338, 8473, 1135, 5765, 29889, 7857, 432, 2108, 9633, 338, 8473, 1135, 5765, 29889, 29871, 10604, 29901, 29871]] [[21403], [21403], [21403], [21403]]
Initial Loss: 3.633826732635498
start ij pos optimization
4 Loss: 3.633826732635498
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


5 Loss: 3.633826732635498
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


6 Loss: 3.633826732635498
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


11 Loss: 3.633826732635498
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


13 Loss: 3.633826732635498
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


29 Loss: 3.633826732635498
encodingMutablestab This AI isinitializeifyingSetter statements contain fallacies. The AI responds with 'Valid' fac 'Invalid' as appropriate.


Initial VF Loss: 1.0061278343200684
start vf pos optimization

No improvement, ending iteration
41 Loss: 1.0061278343200684
encodekafka compiling meerSync

**********navigate**********
0
[4, 5, 6, 16, 18, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 304, 278, 6257, 1298, 29973, 10604, 5852, 470, 7700, 29889, 29871, 10567, 29901, 29871, 9603, 2175, 29889, 11190, 29871, 29929, 6576, 29889, 11190, 29871, 29906, 6576, 29889, 11190, 29871, 29945, 6576, 29889, 9603, 1492, 29889, 9603, 1492, 29889, 11190, 29871, 29945, 6576, 29889, 11190, 29871, 29896, 29900, 6576, 29889, 11190, 29871, 29896, 4331, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 304, 278, 6257, 1298, 29973, 10604, 5852, 470, 7700, 29889, 29871, 10567, 29901, 29871, 9603, 2175, 29889, 11190, 29871, 29953, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29946, 6576, 29889, 11190, 29871, 29906, 6576, 29889, 9603, 2175, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 304, 278, 6257, 1298, 29973, 10604, 5852, 470, 7700, 29889, 29871, 10567, 29901, 29871, 11190, 29871, 29906, 6576, 29889, 11190, 29871, 29945, 6576, 29889, 11190, 29871, 29929, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29953, 6576, 29889, 11190, 29871, 29896, 29900, 6576, 29889, 9603, 2820, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 304, 278, 6257, 1298, 29973, 10604, 5852, 470, 7700, 29889, 29871, 10567, 29901, 29871, 11190, 29871, 29953, 6576, 29889, 9603, 2175, 29889, 9603, 2175, 29889, 11190, 29871, 29941, 6576, 29889, 11190, 29871, 29906, 6576, 29889, 11190, 29871, 29947, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29955, 6576, 29889, 29871, 10604, 29901, 29871]] [[7700], [7700], [7700], [7700]]
Initial Loss: 10.843689918518066
start ij pos optimization
optimized
4 Loss: 5.933004856109619
Jes sechsVor If you follow these instructions, do you return to the starting point? Output True or False.

optimized
5 Loss: 4.4120659828186035
JesrvVor If you follow these instructions, do you return to the starting point? Output True or False.

optimized
6 Loss: 4.176086902618408
JesrvIAB If you follow these instructions, do you return to the starting point? Output True or False.

optimized
16 Loss: 4.072717666625977
JesrvIAB If you follow these instructions, do you return donde the starting point? Output True or False.

optimized
18 Loss: 4.00509786605835
JesrvIAB If you follow these instructions, do you return donde themathcal point? Output True or False.

optimized
25 Loss: 3.8746352195739746
JesrvIAB If you follow these instructions, do you return donde themathcal point? Output True or Falsepragma

Initial VF Loss: 0.8077096343040466
start vf pos optimization
optimized
30 Loss: 0.6533367037773132
JohdefinedLprev西

optimized
31 Loss: 0.5269506573677063
Joh overridLprev西

optimized
32 Loss: 0.46591076254844666
Joh overridpsilonprev西

optimized
33 Loss: 0.37780794501304626
Joh overridpsilonSomething西

34 Loss: 0.37780794501304626
Joh overridpsilonSomething西

1
[4, 5, 6, 16, 18, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 8524, 15291, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 8334, 278, 1942, 1298, 29973, 10604, 5852, 470, 7700, 28436, 29871, 10567, 29901, 29871, 11190, 29871, 29953, 6576, 29889, 11190, 29871, 29946, 6576, 29889, 11190, 29871, 29946, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15291, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 8334, 278, 1942, 1298, 29973, 10604, 5852, 470, 7700, 28436, 29871, 10567, 29901, 29871, 11190, 29871, 29896, 4331, 29889, 9603, 2175, 29889, 11190, 29871, 29941, 6576, 29889, 11190, 29871, 29946, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15291, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 8334, 278, 1942, 1298, 29973, 10604, 5852, 470, 7700, 28436, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29955, 6576, 6375, 29889, 11190, 29871, 29929, 6576, 1250, 1328, 29889, 11190, 29871, 29955, 6576, 6375, 29889, 11190, 29871, 29947, 6576, 1250, 1328, 29889, 11190, 29871, 29896, 29900, 6576, 6375, 29889, 11190, 29871, 29945, 6576, 1250, 1328, 29889, 11190, 29871, 29906, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15291, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 8334, 278, 1942, 1298, 29973, 10604, 5852, 470, 7700, 28436, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29947, 6576, 1250, 1328, 29889, 11190, 29871, 29906, 6576, 1250, 1328, 29889, 11190, 29871, 29896, 29900, 6576, 6375, 29889, 29871, 10604, 29901, 29871]] [[5852], [5852], [5852], [7700]]
Initial Loss: 3.655884265899658
start ij pos optimization
4 Loss: 3.655884265899658
JesrvIAB If you follow these instructions, do you return donde themathcal point? Output True or Falsepragma

optimized
5 Loss: 3.6316351890563965
JespdIAB If you follow these instructions, do you return donde themathcal point? Output True or Falsepragma

6 Loss: 3.6316351890563965
JespdIAB If you follow these instructions, do you return donde themathcal point? Output True or Falsepragma

optimized
16 Loss: 3.623873233795166
JespdIAB If you follow these instructions, do you return gdzie themathcal point? Output True or Falsepragma

optimized
18 Loss: 3.6234724521636963
JespdIAB If you follow these instructions, do you return gdzie the Elis point? Output True or Falsepragma

optimized
25 Loss: 3.569713592529297
JespdIAB If you follow these instructions, do you return gdzie the Elis point? Output True or Falserx

Initial VF Loss: 0.5633444786071777
start vf pos optimization
optimized
30 Loss: 0.47483453154563904
Jose overridpsilonSomething西

optimized
31 Loss: 0.4210052490234375
JoseObjectspsilonSomething西

optimized
32 Loss: 0.35726165771484375
JoseObjects JohanSomething西

33 Loss: 0.35726165771484375
JoseObjects JohanSomething西

34 Loss: 0.35726165771484375
JoseObjects JohanSomething西

2
[4, 5, 6, 16, 18, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 23104, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 17697, 29871, 10567, 29901, 29871, 11190, 29871, 29946, 6576, 29889, 11190, 29871, 29929, 6576, 29889, 9603, 2175, 29889, 11190, 29871, 29955, 6576, 29889, 11190, 29871, 29947, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 23104, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 17697, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29896, 4331, 6375, 29889, 11190, 29871, 29896, 29900, 6576, 6375, 29889, 11190, 29871, 29955, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 23104, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 17697, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29941, 6576, 6375, 29889, 11190, 29871, 29929, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 23104, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 17697, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29955, 6576, 2175, 29889, 11190, 29871, 29929, 6576, 1250, 1328, 29889, 11190, 29871, 29945, 6576, 1492, 29889, 11190, 29871, 29945, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871]] [[7700], [5852], [7700], [7700]]
Initial Loss: 3.7571282386779785
start ij pos optimization
4 Loss: 3.7571282386779785
JespdIAB If you follow these instructions, do you return gdzie the Elis point? Output True or Falserx

5 Loss: 3.7571282386779785
JespdIAB If you follow these instructions, do you return gdzie the Elis point? Output True or Falserx

6 Loss: 3.7571282386779785
JespdIAB If you follow these instructions, do you return gdzie the Elis point? Output True or Falserx

optimized
16 Loss: 3.6786036491394043
JespdIAB If you follow these instructions, do you return Pologne the Elis point? Output True or Falserx

18 Loss: 3.6786036491394043
JespdIAB If you follow these instructions, do you return Pologne the Elis point? Output True or Falserx

optimized
25 Loss: 3.6384973526000977
JespdIAB If you follow these instructions, do you return Pologne the Elis point? Output True or Falseclojure

Initial VF Loss: 0.2507301867008209
start vf pos optimization
optimized
30 Loss: 0.24857060611248016
PsiObjects JohanSomething西

optimized
31 Loss: 0.2448088526725769
PsiOverride JohanSomething西

32 Loss: 0.2448088526725769
PsiOverride JohanSomething西

33 Loss: 0.2448088526725769
PsiOverride JohanSomething西

34 Loss: 0.2448088526725769
PsiOverride JohanSomething西

3
[4, 5, 6, 16, 18, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 24812, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29941, 6576, 1250, 1328, 29889, 11190, 29871, 29955, 6576, 2175, 29889, 11190, 29871, 29896, 29900, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 24812, 29871, 10567, 29901, 29871, 9603, 1492, 29889, 9603, 1492, 29889, 9603, 2820, 29889, 9603, 2175, 29889, 11190, 29871, 29946, 6576, 29889, 11190, 29871, 29896, 29900, 6576, 29889, 11190, 29871, 29947, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 24812, 29871, 10567, 29901, 29871, 11190, 29871, 29941, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29947, 6576, 29889, 9603, 2820, 29889, 9603, 1492, 29889, 9603, 2175, 29889, 11190, 29871, 29945, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 23731, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 24812, 29871, 10567, 29901, 29871, 11190, 29871, 29941, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29941, 6576, 29889, 9603, 1492, 29889, 29871, 10604, 29901, 29871]] [[5852], [7700], [5852], [5852]]
Initial Loss: 3.839726448059082
start ij pos optimization
4 Loss: 3.839726448059082
JespdIAB If you follow these instructions, do you return Pologne the Elis point? Output True or Falseclojure

5 Loss: 3.839726448059082
JespdIAB If you follow these instructions, do you return Pologne the Elis point? Output True or Falseclojure

optimized
6 Loss: 3.816891670227051
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or Falseclojure

16 Loss: 3.816891670227051
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or Falseclojure

18 Loss: 3.816891670227051
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or Falseclojure

optimized
25 Loss: 3.8083925247192383
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or FalseNaN

Initial VF Loss: 0.31603434681892395
start vf pos optimization
optimized
30 Loss: 0.2881895899772644
DelOverride JohanSomething西

optimized
31 Loss: 0.26141324639320374
DelinnerHTML JohanSomething西

optimized
32 Loss: 0.25009629130363464
DelinnerHTML JorgeSomething西

33 Loss: 0.25009629130363464
DelinnerHTML JorgeSomething西

34 Loss: 0.25009629130363464
DelinnerHTML JorgeSomething西

4
[4, 5, 6, 16, 18, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 19377, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29906, 6576, 1250, 1328, 29889, 11190, 29871, 29947, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 19377, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29896, 4331, 6375, 29889, 11190, 29871, 29896, 29900, 6576, 6375, 29889, 11190, 29871, 29953, 6576, 1250, 1328, 29889, 11190, 29871, 29955, 6576, 1250, 1328, 29889, 11190, 29871, 29896, 4331, 2175, 29889, 11190, 29871, 29896, 29900, 6576, 1492, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 19377, 29871, 10567, 29901, 29871, 11190, 29871, 29953, 6576, 29889, 11190, 29871, 29946, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29941, 6576, 29889, 11190, 29871, 29955, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 21279, 1298, 29973, 10604, 5852, 470, 7700, 19377, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29953, 6576, 6375, 29889, 11190, 29871, 29953, 6576, 1250, 1328, 29889, 29871, 10604, 29901, 29871]] [[7700], [7700], [5852], [5852]]
Initial Loss: 3.424790382385254
start ij pos optimization
4 Loss: 3.424790382385254
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or FalseNaN

5 Loss: 3.424790382385254
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or FalseNaN

6 Loss: 3.424790382385254
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or FalseNaN

16 Loss: 3.424790382385254
JespdLENGTH If you follow these instructions, do you return Pologne the Elis point? Output True or FalseNaN

optimized
18 Loss: 3.374741315841675
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or FalseNaN

optimized
25 Loss: 3.3049702644348145
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

Initial VF Loss: 0.13600118458271027
start vf pos optimization
optimized
30 Loss: 0.12408477067947388
inputinnerHTML JorgeSomething西

optimized
31 Loss: 0.11474604159593582
inputOnClickListener JorgeSomething西

32 Loss: 0.11474604159593582
inputOnClickListener JorgeSomething西

optimized
33 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西

34 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西

5
[4, 5, 6, 16, 18, 25] [30, 31, 32, 33, 34]
[[1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 17438, 1298, 29973, 10604, 5852, 470, 7700, 11725, 29871, 10567, 29901, 29871, 11190, 29871, 29953, 6576, 29889, 11190, 29871, 29945, 6576, 29889, 9603, 2820, 29889, 11190, 29871, 29896, 4331, 29889, 11190, 29871, 29896, 29900, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 17438, 1298, 29973, 10604, 5852, 470, 7700, 11725, 29871, 10567, 29901, 29871, 11190, 29871, 29941, 6576, 29889, 9603, 1492, 29889, 9603, 1492, 29889, 11190, 29871, 29896, 4331, 29889, 11190, 29871, 29906, 6576, 29889, 9603, 2820, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 17438, 1298, 29973, 10604, 5852, 470, 7700, 11725, 29871, 10567, 29901, 29871, 11190, 29871, 29941, 6576, 29889, 9603, 1492, 29889, 11190, 29871, 29955, 6576, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 8524, 15926, 19433, 960, 366, 1101, 1438, 11994, 29892, 437, 366, 736, 17486, 278, 17438, 1298, 29973, 10604, 5852, 470, 7700, 11725, 29871, 10567, 29901, 29871, 29849, 3700, 6375, 29889, 11190, 29871, 29929, 6576, 2175, 29889, 11190, 29871, 29945, 6576, 1492, 29889, 11190, 29871, 29906, 6576, 2175, 29889, 11190, 29871, 29906, 6576, 1492, 29889, 11190, 29871, 29953, 6576, 6375, 29889, 11190, 29871, 29896, 29900, 6576, 1250, 1328, 29889, 11190, 29871, 29896, 4331, 6375, 29889, 11190, 29871, 29953, 6576, 2175, 29889, 29871, 10604, 29901, 29871]] [[7700], [5852], [5852], [7700]]
Initial Loss: 3.4499716758728027
start ij pos optimization
4 Loss: 3.4499716758728027
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

5 Loss: 3.4499716758728027
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

6 Loss: 3.4499716758728027
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

16 Loss: 3.4499716758728027
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

18 Loss: 3.4499716758728027
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

25 Loss: 3.4499716758728027
JespdLENGTH If you follow these instructions, do you return Pologne theisce point? Output True or Falsesubseteq

Initial VF Loss: 0.11032730340957642
start vf pos optimization
30 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西

31 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西

32 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西

33 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西


No improvement, ending iteration
34 Loss: 0.11032730340957642
inputOnClickListener Jorge Things西

**********ruin_names**********
0
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 310, 278, 1494, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 1024, 29973, 13, 29871, 10567, 29901, 29871, 432, 6547, 1460, 2355, 670, 13736, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 310, 278, 1494, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 1024, 29973, 13, 29871, 10567, 29901, 29871, 278, 1058, 29991, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 310, 278, 1494, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 1024, 29973, 13, 29871, 10567, 29901, 29871, 278, 7339, 29885, 720, 414, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 310, 278, 1494, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 1024, 29973, 13, 29871, 10567, 29901, 29871, 451, 1259, 17306, 29871, 10604, 29901, 29871]] [[289, 9424], [2654, 7375, 521, 2638, 772, 22437], [330, 3069, 301, 504, 414], [7695, 411, 278, 24706]]
Initial Loss: 8.839975357055664
start ij pos optimization
optimized
4 Loss: 3.327723979949951
Ja sechsVor Which of the following is a humorous edit of this artist or movie name?


optimized
5 Loss: 2.1382269859313965
JaegaVor Which of the following is a humorous edit of this artist or movie name?


optimized
6 Loss: 1.9988682270050049
JaegaSearch Which of the following is a humorous edit of this artist or movie name?


optimized
10 Loss: 1.8027328252792358
JaegaSearch Which of the dom is a humorous edit of this artist or movie name?


17 Loss: 1.8027328252792358
JaegaSearch Which of the dom is a humorous edit of this artist or movie name?


optimized
21 Loss: 1.7213737964630127
JaegaSearch Which of the dom is a humorous edit of this artist or moviejboss?


Initial VF Loss: 0.6903090476989746
start vf pos optimization
optimized
28 Loss: 0.6419163346290588
MoviedefinedLprev西

optimized
29 Loss: 0.6033570170402527
Movie PrzLprev西

optimized
30 Loss: 0.5487501621246338
Movie PrzIMAprev西

31 Loss: 0.5487501621246338
Movie PrzIMAprev西

optimized
32 Loss: 0.5200305581092834
Movie PrzIMAprevgex

1
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14021, 2442, 7974, 8449, 310, 278, 2432, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 22788, 29973, 13, 29871, 10567, 29901, 29871, 29871, 29945, 29900, 1644, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 7974, 8449, 310, 278, 2432, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 22788, 29973, 13, 29871, 10567, 29901, 29871, 278, 285, 4615, 3957, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 7974, 8449, 310, 278, 2432, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 22788, 29973, 13, 29871, 10567, 29901, 29871, 278, 289, 19536, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 7974, 8449, 310, 278, 2432, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 22788, 29973, 13, 29871, 10567, 29901, 29871, 278, 25695, 12544, 29871, 10604, 29901, 29871]] [[679, 528, 13163], [16835, 285, 466, 1537], [4307, 17540, 310, 25352, 983], [282, 790]]
Initial Loss: 1.704788088798523
start ij pos optimization
4 Loss: 1.704788088798523
JaegaSearch Which of the dom is a humorous edit of this artist or moviejboss?


5 Loss: 1.704788088798523
JaegaSearch Which of the dom is a humorous edit of this artist or moviejboss?


optimized
6 Loss: 1.6756149530410767
JaegaCUR Which of the dom is a humorous edit of this artist or moviejboss?


optimized
10 Loss: 1.6294387578964233
JaegaCUR Which of the sta is a humorous edit of this artist or moviejboss?


17 Loss: 1.6294387578964233
JaegaCUR Which of the sta is a humorous edit of this artist or moviejboss?


optimized
21 Loss: 1.6129364967346191
JaegaCUR Which of the sta is a humorous edit of this artist or movie trab?


Initial VF Loss: 0.4324370324611664
start vf pos optimization
28 Loss: 0.4324370324611664
Movie PrzIMAprevgex

29 Loss: 0.4324370324611664
Movie PrzIMAprevgex

30 Loss: 0.4324370324611664
Movie PrzIMAprevgex

optimized
31 Loss: 0.36845871806144714
Movie PrzIMA Waybackgex

32 Loss: 0.36845871806144714
Movie PrzIMA Waybackgex

2
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14021, 2442, 22484, 8449, 310, 278, 9523, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 5807, 6926, 373, 263, 10694, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 22484, 8449, 310, 278, 9523, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 29871, 29896, 29900, 2440, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 22484, 8449, 310, 278, 9523, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 278, 10974, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 22484, 8449, 310, 278, 9523, 338, 263, 3165, 20657, 3863, 310, 445, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 260, 11017, 12086, 29871, 10604, 29901, 29871]] [[5054, 3768, 363, 263, 289, 1633], [6013, 10993, 5905, 24956], [4023, 719, 11009, 860, 29892, 27236, 29889], [432, 6547, 1460, 364, 1161]]
Initial Loss: 1.2657331228256226
start ij pos optimization
4 Loss: 1.2657331228256226
JaegaCUR Which of the sta is a humorous edit of this artist or movie trab?


5 Loss: 1.2657331228256226
JaegaCUR Which of the sta is a humorous edit of this artist or movie trab?


optimized
6 Loss: 1.2085462808609009
JaegaSSN Which of the sta is a humorous edit of this artist or movie trab?


optimized
10 Loss: 1.1525893211364746
JaegaSSN Which of theSdk is a humorous edit of this artist or movie trab?


optimized
17 Loss: 1.1430002450942993
JaegaSSN Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


21 Loss: 1.1430002450942993
JaegaSSN Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


Initial VF Loss: 0.27828818559646606
start vf pos optimization
28 Loss: 0.27828818559646606
Movie PrzIMA Waybackgex

optimized
29 Loss: 0.26410770416259766
Movie FCIMA Waybackgex

30 Loss: 0.26410770416259766
Movie FCIMA Waybackgex

31 Loss: 0.26410770416259766
Movie FCIMA Waybackgex

32 Loss: 0.26410770416259766
Movie FCIMA Waybackgex

3
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14021, 2442, 13429, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 260, 11017, 12086, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 13429, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 278, 7339, 22212, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 13429, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 282, 799, 29880, 14322, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 13429, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 278, 4966, 29871, 10604, 29901, 29871]] [[24866], [278, 1248, 568], [281, 682, 285, 18966], [278, 767, 411, 278, 22843, 289, 348]]
Initial Loss: 1.2362757921218872
start ij pos optimization
4 Loss: 1.2362757921218872
JaegaSSN Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


5 Loss: 1.2362757921218872
JaegaSSN Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


optimized
6 Loss: 1.2102428674697876
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


10 Loss: 1.2102428674697876
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


17 Loss: 1.2102428674697876
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


21 Loss: 1.2102428674697876
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


Initial VF Loss: 0.2511047124862671
start vf pos optimization
28 Loss: 0.2511047124862671
Movie FCIMA Waybackgex

optimized
29 Loss: 0.2500017583370209
Movie MotIMA Waybackgex

optimized
30 Loss: 0.24379761517047882
Movie Mot trava Waybackgex

31 Loss: 0.24379761517047882
Movie Mot trava Waybackgex

32 Loss: 0.24379761517047882
Movie Mot trava Waybackgex

4
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 5810, 29129, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 278, 4595, 8619, 13198, 16730, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 590, 6534, 11379, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 29019, 338, 263, 3165, 20657, 3863, 310, 21294, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 805, 625, 14000, 29871, 10604, 29901, 29871]] [[1922], [4307, 17540, 310, 25352, 983], [278, 4698, 713, 298, 711], [380, 2235, 292, 15883]]
Initial Loss: 1.3198816776275635
start ij pos optimization
4 Loss: 1.3198816776275635
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


5 Loss: 1.3198816776275635
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


6 Loss: 1.3198816776275635
JaegaGC Which of theSdk is a humorous edit ofhtaccess artist or movie trab?


optimized
10 Loss: 1.3127321004867554
JaegaGC Which of the Source is a humorous edit ofhtaccess artist or movie trab?


optimized
17 Loss: 1.2768012285232544
JaegaGC Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


21 Loss: 1.2768012285232544
JaegaGC Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


Initial VF Loss: 0.2841179668903351
start vf pos optimization
optimized
28 Loss: 0.2683493494987488
Rad Mot trava Waybackgex

optimized
29 Loss: 0.2574315071105957
Rad Iss trava Waybackgex

30 Loss: 0.2574315071105957
Rad Iss trava Waybackgex

optimized
31 Loss: 0.2516392767429352
Rad Iss trava distgex

optimized
32 Loss: 0.24164725840091705
Rad Iss trava distgc

5
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 29871, 29947, 17967, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 1364, 513, 1358, 29915, 29879, 1051, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 1067, 2491, 404, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 14021, 2442, 8766, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 10565, 29973, 13, 29871, 10567, 29901, 29871, 1424, 22394, 278, 29871, 29896, 29941, 386, 29871, 10604, 29901, 29871]] [[2916, 669, 278, 2090, 9574, 264], [29363, 7664], [5810, 281, 5708], [263, 1776, 304, 263, 12920, 453]]
Initial Loss: 3.9720265865325928
start ij pos optimization
optimized
4 Loss: 2.5188074111938477
orthogonalegaGC Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


5 Loss: 2.5188074111938477
orthogonalegaGC Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


optimized
6 Loss: 2.402207851409912
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


10 Loss: 2.402207851409912
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


17 Loss: 2.402207851409912
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movie trab?


optimized
21 Loss: 2.280832290649414
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movietbody?


Initial VF Loss: 1.1663168668746948
start vf pos optimization
optimized
28 Loss: 1.109403371810913
Rud Iss trava distgc

optimized
29 Loss: 1.0638108253479004
Rud equilibrium trava distgc

optimized
30 Loss: 0.9688937067985535
Rud equilibrium worship distgc

optimized
31 Loss: 0.8847551941871643
Rud equilibrium worship Bischofgc

optimized
32 Loss: 0.7806234955787659
Rud equilibrium worship Bischofningar

6
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 15370, 29973, 13, 29871, 10567, 29901, 29871, 367, 369, 368, 22696, 5614, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 15370, 29973, 13, 29871, 10567, 29901, 29871, 1374, 728, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 15370, 29973, 13, 29871, 10567, 29901, 29871, 1321, 5617, 1111, 4684, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 7562, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 15370, 29973, 13, 29871, 10567, 29901, 29871, 4628, 302, 5666, 790, 375, 29871, 10604, 29901, 29871]] [[260, 29889, 29872, 29889, 29878, 29889, 29881, 29889], [716, 413, 4841, 373, 278, 12006], [1809, 262, 29915, 297, 278, 5796, 262], [278, 4654, 23432]]
Initial Loss: 1.5123181343078613
start ij pos optimization
4 Loss: 1.5123181343078613
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movietbody?


5 Loss: 1.5123181343078613
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movietbody?


6 Loss: 1.5123181343078613
orthogonalega multip Which of the Source is a humorous edit ofdocumentclass artist or movietbody?


optimized
10 Loss: 1.5014896392822266
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movietbody?


17 Loss: 1.5014896392822266
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movietbody?


optimized
21 Loss: 1.4938209056854248
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


Initial VF Loss: 0.7603211998939514
start vf pos optimization
optimized
28 Loss: 0.6922141909599304
Cra equilibrium worship Bischofningar

29 Loss: 0.6922141909599304
Cra equilibrium worship Bischofningar

30 Loss: 0.6922141909599304
Cra equilibrium worship Bischofningar

31 Loss: 0.6922141909599304
Cra equilibrium worship Bischofningar

optimized
32 Loss: 0.6642909646034241
Cra equilibrium worship Bischof Kraft

7
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 1283, 4278, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 270, 945, 2497, 756, 5161, 264, 515, 278, 15258, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 278, 1757, 1058, 380, 598, 472, 748, 1446, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 278, 4654, 767, 29871, 10604, 29901, 29871]] [[263, 412, 297, 278, 16188], [278, 9883, 29879, 310, 639, 1270], [6345, 9115, 29872], [620, 261, 7869, 289, 12099]]
Initial Loss: 1.5362768173217773
start ij pos optimization
4 Loss: 1.5362768173217773
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


5 Loss: 1.5362768173217773
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


6 Loss: 1.5362768173217773
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


10 Loss: 1.5362768173217773
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


17 Loss: 1.5362768173217773
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


21 Loss: 1.5362768173217773
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


Initial VF Loss: 0.6642909646034241
start vf pos optimization
optimized
28 Loss: 0.6199309825897217
luc equilibrium worship Bischof Kraft

29 Loss: 0.6199309825897217
luc equilibrium worship Bischof Kraft

optimized
30 Loss: 0.5905421376228333
luc equilibrium Luther Bischof Kraft

optimized
31 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft

32 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft

8
[4, 5, 6, 10, 17, 21] [28, 29, 30, 31, 32]
[[1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 15409, 322, 278, 367, 579, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 7953, 285, 1141, 2153, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 1302, 384, 29873, 2234, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 28143, 2442, 6674, 8449, 310, 278, 6688, 338, 263, 3165, 20657, 3863, 310, 18329, 7664, 470, 14064, 22547, 29973, 13, 29871, 10567, 29901, 29871, 260, 1245, 29879, 29871, 10604, 29901, 29871]] [[282, 799, 29880, 16366], [263, 2846, 9687, 1757], [22549, 347, 321, 309, 728], [282, 10467]]
Initial Loss: 1.6791454553604126
start ij pos optimization
4 Loss: 1.6791454553604126
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


5 Loss: 1.6791454553604126
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


6 Loss: 1.6791454553604126
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


10 Loss: 1.6791454553604126
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


17 Loss: 1.6791454553604126
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


21 Loss: 1.6791454553604126
orthogonalega multip Which of thespringframework is a humorous edit ofdocumentclass artist or movie arbeitete?


Initial VF Loss: 0.5783374905586243
start vf pos optimization
28 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft

29 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft

30 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft

31 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft


No improvement, ending iteration
32 Loss: 0.5783374905586243
luc equilibrium Luther Leist Kraft

**********winowhy**********
0
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 3529, 1234, 278, 1494, 5155, 1048, 607, 3838, 3058, 11504, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 910, 7250, 29892, 3650, 1032, 4240, 263, 11982, 20610, 373, 278, 25695, 29892, 322, 1925, 263, 304, 29891, 29871, 7353, 297, 278, 9939, 19372, 29892, 541, 445, 17724, 278, 260, 680, 29871, 18232, 287, 372, 1623, 29889, 450, 525, 277, 29915, 14637, 304, 278, 11982, 20610, 1363, 372, 947, 1106, 763, 263, 11982, 20610, 29889, 313, 1124, 597, 1636, 29889, 29888, 1406, 29878, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 3529, 1234, 278, 1494, 5155, 1048, 607, 3838, 3058, 11504, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 20413, 297, 4485, 29915, 29879, 8471, 5716, 3697, 385, 288, 557, 5447, 29889, 739, 338, 304, 278, 1492, 310, 278, 3143, 4878, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 20413, 1363, 739, 338, 304, 278, 1492, 310, 263, 3699, 1363, 278, 20413, 297, 4485, 29915, 29879, 8471, 5716, 3697, 385, 288, 557, 5447, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 3529, 1234, 278, 1494, 5155, 1048, 607, 3838, 3058, 11504, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 8955, 2879, 15593, 287, 278, 10819, 310, 278, 716, 14064, 29889, 2688, 892, 1407, 1302, 3372, 1230, 29892, 577, 278, 15593, 1833, 287, 363, 263, 1472, 931, 29889, 450, 525, 15597, 29915, 14637, 304, 278, 10819, 1363, 450, 8955, 2879, 5131, 304, 15593, 278, 10819, 29889, 450, 10819, 750, 263, 7348, 29889, 450, 10819, 15502, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 3529, 1234, 278, 1494, 5155, 1048, 607, 3838, 3058, 11504, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 7991, 784, 23384, 373, 278, 2625, 20919, 29889, 1105, 265, 540, 4446, 8965, 6421, 304, 1371, 29889, 940, 471, 1407, 15041, 29889, 450, 525, 3868, 29915, 14637, 304, 1559, 29880, 1363, 7991, 784, 23384, 577, 540, 723, 367, 278, 697, 1058, 471, 4486, 29889, 29871, 10604, 29901, 29871]] [[10240], [10240], [10240], [10240]]
Initial Loss: 11.689098358154297
start ij pos optimization
optimized
4 Loss: 7.617778778076172
posit sechsVor Please answer the following questions about which words certain pronouns refer to. Output correct or incorrect.


optimized
5 Loss: 5.718320846557617
posit6Vor Please answer the following questions about which words certain pronouns refer to. Output correct or incorrect.


6 Loss: 5.718320846557617
posit6Vor Please answer the following questions about which words certain pronouns refer to. Output correct or incorrect.


optimized
10 Loss: 5.57810640335083
posit6Vor Please answer the pandas questions about which words certain pronouns refer to. Output correct or incorrect.


13 Loss: 5.57810640335083
posit6Vor Please answer the pandas questions about which words certain pronouns refer to. Output correct or incorrect.


optimized
16 Loss: 5.510825157165527
posit6Vor Please answer the pandas questions about which words certain aproouns refer to. Output correct or incorrect.


Initial VF Loss: 1.7527521848678589
start vf pos optimization
optimized
32 Loss: 1.4475173950195312
directlydefinedLprev西

optimized
33 Loss: 1.1600171327590942
directly DetroitLprev西

optimized
34 Loss: 1.0618711709976196
directly Detroit findetprev西

optimized
35 Loss: 0.9928371906280518
directly Detroit findetAv西

optimized
36 Loss: 0.8518238663673401
directly Detroit findetAv tempor

1
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 13686, 29953, 14147, 3529, 1234, 278, 11701, 5155, 1048, 607, 3838, 3058, 11712, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 20413, 297, 4485, 29915, 29879, 8471, 5716, 3697, 385, 288, 557, 5447, 29889, 739, 338, 304, 278, 1492, 310, 278, 3143, 4878, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 20413, 1363, 372, 338, 373, 278, 3143, 4878, 29892, 541, 445, 338, 263, 1580, 2785, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 13686, 29953, 14147, 3529, 1234, 278, 11701, 5155, 1048, 607, 3838, 3058, 11712, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 512, 278, 14280, 29892, 278, 5447, 8379, 1623, 322, 8095, 287, 1549, 278, 17526, 310, 590, 29871, 3699, 29889, 2567, 29892, 306, 505, 304, 679, 372, 6206, 29889, 450, 525, 277, 29915, 14637, 304, 278, 5447, 1363, 372, 338, 263, 5447, 29892, 541, 306, 1016, 29915, 29873, 1073, 363, 1854, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 13686, 29953, 14147, 3529, 1234, 278, 11701, 5155, 1048, 607, 3838, 3058, 11712, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 3685, 1898, 304, 10675, 263, 7623, 310, 1183, 561, 2018, 29879, 411, 29735, 29892, 541, 896, 9698, 701, 3063, 901, 763, 29416, 414, 29889, 450, 525, 19562, 29915, 14637, 304, 278, 1183, 561, 2018, 29879, 1363, 2296, 561, 2018, 29879, 297, 4235, 19436, 8182, 12117, 11460, 263, 29871, 620, 1590, 284, 29876, 346, 304, 29416, 414, 448, 29735, 437, 451, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 13686, 29953, 14147, 3529, 1234, 278, 11701, 5155, 1048, 607, 3838, 3058, 11712, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 2259, 10372, 6682, 304, 5967, 29892, 577, 385, 7234, 2678, 540, 2175, 29889, 450, 525, 354, 29915, 14637, 304, 11118, 1363, 6682, 304, 5967, 577, 2259, 10372, 29889, 29871, 10604, 29901, 29871]] [[10240], [10240], [10240], [1959]]
Initial Loss: 5.614570617675781
start ij pos optimization
optimized
4 Loss: 5.0283026695251465
Wu6Vor Please answer the pandas questions about which words certain aproouns refer to. Output correct or incorrect.


5 Loss: 5.0283026695251465
Wu6Vor Please answer the pandas questions about which words certain aproouns refer to. Output correct or incorrect.


optimized
6 Loss: 4.815547943115234
Wu6NaN Please answer the pandas questions about which words certain aproouns refer to. Output correct or incorrect.


10 Loss: 4.815547943115234
Wu6NaN Please answer the pandas questions about which words certain aproouns refer to. Output correct or incorrect.


optimized
13 Loss: 4.763001441955566
Wu6NaN Please answer the pandas questions aboutdestroy words certain aproouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.689238548278809
Wu6NaN Please answer the pandas questions aboutdestroy words certain throwouns refer to. Output correct or incorrect.


Initial VF Loss: 2.4141838550567627
start vf pos optimization
optimized
32 Loss: 1.8920737504959106
coordin Detroit findetAv tempor

optimized
33 Loss: 1.558428406715393
coordin reproduce findetAv tempor

optimized
34 Loss: 1.148895263671875
coordin reproduce OrigAv tempor

optimized
35 Loss: 1.1095263957977295
coordin reproduce OrigStr tempor

optimized
36 Loss: 0.9383077621459961
coordin reproduce OrigStr sys

2
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 11701, 5155, 1048, 20524, 3838, 3058, 3183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 3685, 14455, 1716, 670, 385, 29895, 793, 322, 540, 29915, 29879, 22049, 411, 2181, 329, 6609, 29889, 1205, 263, 4098, 470, 577, 515, 1286, 896, 881, 367, 19039, 29889, 450, 525, 19562, 29915, 14637, 304, 278, 2181, 329, 6609, 1363, 278, 767, 338, 263, 525, 4287, 29886, 5893, 29915, 322, 278, 525, 354, 29915, 338, 5517, 304, 2737, 304, 278, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 11701, 5155, 1048, 20524, 3838, 3058, 3183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 4001, 372, 471, 1153, 2827, 29892, 306, 8988, 278, 19656, 297, 590, 1250, 4058, 304, 3013, 372, 15589, 29889, 450, 525, 277, 29915, 14637, 304, 278, 19656, 1363, 19656, 526, 1781, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 11701, 5155, 1048, 20524, 3838, 3058, 3183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 8507, 1804, 7943, 278, 2594, 1171, 322, 7737, 2955, 11183, 670, 4069, 12917, 450, 525, 22880, 29915, 14637, 304, 432, 326, 1363, 8507, 1754, 278, 7182, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 11701, 5155, 1048, 20524, 3838, 3058, 3183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 10447, 18232, 287, 373, 25914, 29915, 29879, 3050, 29892, 541, 727, 471, 694, 1234, 29889, 2296, 471, 714, 29889, 450, 525, 13468, 29915, 14637, 304, 2858, 273, 1363, 1183, 338, 25914, 29915, 29879, 9883, 29889, 29871, 10604, 29901, 29871]] [[1959], [1959], [1959], [10240]]
Initial Loss: 4.458093643188477
start ij pos optimization
4 Loss: 4.458093643188477
Wu6NaN Please answer the pandas questions aboutdestroy words certain throwouns refer to. Output correct or incorrect.


5 Loss: 4.458093643188477
Wu6NaN Please answer the pandas questions aboutdestroy words certain throwouns refer to. Output correct or incorrect.


6 Loss: 4.458093643188477
Wu6NaN Please answer the pandas questions aboutdestroy words certain throwouns refer to. Output correct or incorrect.


optimized
10 Loss: 4.408108711242676
Wu6NaN Please answer thedfrac questions aboutdestroy words certain throwouns refer to. Output correct or incorrect.


13 Loss: 4.408108711242676
Wu6NaN Please answer thedfrac questions aboutdestroy words certain throwouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.366880893707275
Wu6NaN Please answer thedfrac questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


Initial VF Loss: 1.058556079864502
start vf pos optimization
optimized
32 Loss: 0.9398964047431946
isol reproduce OrigStr sys

33 Loss: 0.9398964047431946
isol reproduce OrigStr sys

optimized
34 Loss: 0.9007253646850586
isol reproduce DefineStr sys

optimized
35 Loss: 0.8653224110603333
isol reproduce Define String sys

36 Loss: 0.8653224110603333
isol reproduce Define String sys

3
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 10779, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 365, 2354, 12707, 304, 3872, 1056, 29892, 16679, 902, 26702, 29889, 450, 525, 2276, 29915, 14637, 304, 23371, 1363, 1183, 29915, 29879, 278, 697, 1058, 14455, 278, 24779, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 10779, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 306, 1925, 278, 274, 1296, 3448, 297, 278, 337, 1341, 4087, 1061, 29889, 739, 756, 263, 3287, 310, 454, 29888, 517, 874, 297, 372, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 337, 1341, 4087, 1061, 1363, 274, 6926, 526, 451, 1754, 411, 454, 29888, 517, 874, 29892, 322, 454, 29888, 517, 874, 526, 8126, 297, 278, 337, 1341, 4087, 1061, 29892, 277, 338, 278, 337, 1341, 333, 914, 1061, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 10779, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 12001, 20654, 5648, 1550, 5122, 3512, 714, 304, 15649, 4071, 2265, 583, 29889, 2860, 385, 7234, 540, 2355, 701, 29889, 450, 525, 354, 29915, 14637, 304, 285, 1127, 1363, 5122, 338, 2307, 701, 1363, 540, 3512, 304, 278, 3787, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 19377, 3529, 1234, 278, 10779, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 270, 6038, 338, 274, 1188, 3192, 411, 11315, 29889, 739, 756, 304, 367, 5941, 287, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 270, 6038, 1363, 450, 11315, 338, 825, 338, 274, 21027, 278, 270, 6038, 29889, 29871, 10604, 29901, 29871]] [[1959], [1959], [1959], [10240]]
Initial Loss: 4.6728291511535645
start ij pos optimization
4 Loss: 4.6728291511535645
Wu6NaN Please answer thedfrac questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


5 Loss: 4.6728291511535645
Wu6NaN Please answer thedfrac questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


optimized
6 Loss: 4.463176250457764
Wu6print Please answer thedfrac questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


optimized
10 Loss: 4.322983741760254
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


13 Loss: 4.322983741760254
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


16 Loss: 4.322983741760254
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


Initial VF Loss: 1.1650559902191162
start vf pos optimization
optimized
32 Loss: 1.1552371978759766
topological reproduce Define String sys

optimized
33 Loss: 1.0224448442459106
topological Lind Define String sys

34 Loss: 1.0224448442459106
topological Lind Define String sys

35 Loss: 1.0224448442459106
topological Lind Define String sys

36 Loss: 1.0224448442459106
topological Lind Define String sys

4
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 20413, 297, 4485, 29915, 29879, 8471, 5716, 3697, 385, 288, 557, 5447, 29889, 739, 338, 304, 278, 1492, 310, 278, 3143, 4878, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 20413, 1363, 3143, 1206, 322, 278, 20413, 526, 278, 2712, 297, 278, 5716, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 1932, 278, 21955, 943, 310, 278, 11118, 2355, 304, 278, 4726, 12713, 29892, 896, 892, 18014, 304, 1284, 393, 278, 5716, 471, 2989, 310, 23995, 1237, 29889, 2688, 892, 1407, 1568, 297, 278, 13638, 29889, 450, 525, 15597, 29915, 14637, 304, 278, 23995, 1237, 1363, 278, 11118, 947, 451, 9619, 403, 393, 599, 13736, 1914, 414, 6036, 1009, 3974, 279, 1516, 29892, 541, 871, 393, 896, 367, 3734, 304, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 11203, 521, 1463, 278, 6635, 29892, 607, 6350, 701, 263, 5447, 29889, 739, 25993, 472, 278, 5970, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 11203, 1363, 278, 6635, 471, 278, 758, 29891, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 20524, 3838, 3058, 23978, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 7991, 12530, 363, 20283, 29915, 29879, 12755, 9793, 29889, 940, 338, 1407, 28656, 29889, 450, 525, 3868, 29915, 14637, 304, 1373, 3197, 1363, 2534, 670, 9793, 12530, 29892, 9344, 1207, 1075, 28656, 29889, 29871, 10604, 29901, 29871]] [[1959], [1959], [1959], [10240]]
Initial Loss: 4.239377021789551
start ij pos optimization
4 Loss: 4.239377021789551
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


5 Loss: 4.239377021789551
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


6 Loss: 4.239377021789551
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


10 Loss: 4.239377021789551
Wu6print Please answer the seq questions aboutdestroy words certainDragouns refer to. Output correct or incorrect.


optimized
13 Loss: 4.228421211242676
Wu6print Please answer the seq questions about disapp words certainDragouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.211672782897949
Wu6print Please answer the seq questions about disapp words certain Sortouns refer to. Output correct or incorrect.


Initial VF Loss: 1.0732253789901733
start vf pos optimization
optimized
32 Loss: 1.0449655055999756
retra Lind Define String sys

optimized
33 Loss: 0.993039071559906
retra coordinates Define String sys

optimized
34 Loss: 0.9808474183082581
retra coordinates Create String sys

35 Loss: 0.9808474183082581
retra coordinates Create String sys

36 Loss: 0.9808474183082581
retra coordinates Create String sys

5
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 8796, 3838, 3058, 20025, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 3685, 3614, 5176, 4413, 515, 11783, 29892, 1363, 540, 471, 19888, 304, 7726, 372, 20501, 2705, 29889, 450, 525, 354, 29915, 14637, 304, 3514, 1363, 540, 5131, 304, 367, 2000, 11783, 29892, 322, 451, 525, 24083, 742, 408, 471, 7829, 491, 5765, 29915, 29879, 5637, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 8796, 3838, 3058, 20025, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 12001, 471, 7424, 304, 1065, 278, 270, 728, 29893, 1161, 261, 29892, 541, 540, 1925, 372, 1283, 29892, 29871, 1363, 540, 5131, 304, 6505, 5648, 29889, 1205, 278, 1510, 6077, 714, 304, 367, 289, 8253, 29892, 577, 540, 3939, 670, 3458, 322, 6077, 372, 373, 29889, 450, 525, 277, 29915, 14637, 304, 278, 270, 728, 29893, 1161, 261, 1363, 372, 756, 263, 5648, 29892, 541, 372, 29915, 29879, 1950, 393, 278, 525, 277, 29915, 338, 278, 471, 2790, 4933, 1363, 310, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 8796, 3838, 3058, 20025, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 6682, 4502, 278, 3748, 19415, 304, 2259, 1363, 670, 2507, 471, 2446, 29889, 450, 525, 22880, 29915, 14637, 304, 432, 6547, 1363, 278, 2507, 310, 11118, 338, 975, 577, 540, 4846, 372, 304, 432, 6547, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 29624, 29953, 2158, 3529, 1234, 278, 19359, 5155, 1048, 8796, 3838, 3058, 20025, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 10974, 24383, 599, 310, 278, 20676, 5144, 29889, 2688, 892, 1811, 304, 5040, 278, 15721, 11302, 297, 278, 18403, 29889, 450, 525, 15597, 29915, 14637, 304, 278, 10974, 1363, 278, 2654, 881, 2737, 304, 278, 20676, 5144, 29889, 29871, 10604, 29901, 29871]] [[10240], [1959], [10240], [1959]]
Initial Loss: 5.326710224151611
start ij pos optimization
optimized
4 Loss: 4.491439342498779
ALL6print Please answer the seq questions about disapp words certain Sortouns refer to. Output correct or incorrect.


5 Loss: 4.491439342498779
ALL6print Please answer the seq questions about disapp words certain Sortouns refer to. Output correct or incorrect.


6 Loss: 4.491439342498779
ALL6print Please answer the seq questions about disapp words certain Sortouns refer to. Output correct or incorrect.


optimized
10 Loss: 4.436087131500244
ALL6print Please answer the substring questions about disapp words certain Sortouns refer to. Output correct or incorrect.


optimized
13 Loss: 4.408428192138672
ALL6print Please answer the substring questions about pleasant words certain Sortouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.389869689941406
ALL6print Please answer the substring questions about pleasant words certainWORouns refer to. Output correct or incorrect.


Initial VF Loss: 1.3555536270141602
start vf pos optimization
optimized
32 Loss: 1.1412416696548462
reproduce coordinates Create String sys

optimized
33 Loss: 1.010923147201538
reproduce dispose Create String sys

optimized
34 Loss: 0.8988613486289978
reproduce disposeViewById String sys

35 Loss: 0.8988613486289978
reproduce disposeViewById String sys

36 Loss: 0.8988613486289978
reproduce disposeViewById String sys

6
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 15149, 29953, 2158, 3529, 1234, 278, 28228, 5155, 1048, 21246, 3838, 3058, 11686, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 3974, 1527, 11977, 1434, 278, 10974, 1363, 896, 892, 6421, 515, 577, 2215, 3448, 29889, 450, 525, 19562, 29915, 14637, 304, 278, 10974, 1363, 278, 3974, 1527, 892, 451, 2221, 304, 671, 1009, 11979, 672, 304, 6159, 278, 17526, 310, 278, 5214, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15149, 29953, 2158, 3529, 1234, 278, 28228, 5155, 1048, 21246, 3838, 3058, 11686, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 18299, 10680, 1363, 323, 18711, 7656, 29915, 29873, 3544, 670, 304, 29891, 29889, 450, 525, 22880, 29915, 14637, 304, 289, 9403, 1363, 887, 5251, 18299, 338, 10901, 292, 1363, 323, 18711, 2113, 29915, 29873, 6232, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15149, 29953, 2158, 3529, 1234, 278, 28228, 5155, 1048, 21246, 3838, 3058, 11686, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 20413, 297, 4485, 29915, 29879, 8471, 5716, 3697, 385, 288, 557, 5447, 29889, 739, 338, 304, 278, 1492, 310, 278, 3143, 4878, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 20413, 1363, 310, 278, 5447, 322, 278, 1426, 29889, 8439, 526, 263, 2846, 916, 9282, 304, 278, 5447, 297, 278, 3143, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15149, 29953, 2158, 3529, 1234, 278, 28228, 5155, 1048, 21246, 3838, 3058, 11686, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 9267, 2305, 1369, 304, 1303, 3739, 29915, 29879, 8277, 322, 508, 29915, 29873, 1925, 963, 1623, 29889, 2688, 526, 5972, 1363, 3739, 15873, 577, 1532, 29889, 450, 525, 15597, 29915, 14637, 304, 3300, 352, 29915, 29879, 8277, 1363, 896, 526, 577, 1532, 3971, 29889, 3739, 29915, 29879, 8277, 884, 4612, 263, 3287, 310, 5962, 29889, 29871, 10604, 29901, 29871]] [[1959], [1959], [10240], [10240]]
Initial Loss: 5.608257293701172
start ij pos optimization
optimized
4 Loss: 5.085301876068115
Dan6print Please answer the substring questions about pleasant words certainWORouns refer to. Output correct or incorrect.


optimized
5 Loss: 5.04054069519043
Dan silverprint Please answer the substring questions about pleasant words certainWORouns refer to. Output correct or incorrect.


optimized
6 Loss: 4.918525695800781
Dan silverjunit Please answer the substring questions about pleasant words certainWORouns refer to. Output correct or incorrect.


optimized
10 Loss: 4.835657596588135
Dan silverjunit Please answer the dataframe questions about pleasant words certainWORouns refer to. Output correct or incorrect.


optimized
13 Loss: 4.76804780960083
Dan silverjunit Please answer the dataframe questions about Dir words certainWORouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.702601432800293
Dan silverjunit Please answer the dataframe questions about Dir words certain Bildouns refer to. Output correct or incorrect.


Initial VF Loss: 2.0345747470855713
start vf pos optimization
optimized
32 Loss: 1.6011205911636353
Dance disposeViewById String sys

optimized
33 Loss: 1.3269904851913452
Dance comprendViewById String sys

optimized
34 Loss: 1.2146291732788086
Dance comprend nur String sys

optimized
35 Loss: 1.0933030843734741
Dance comprend nur Pet sys

36 Loss: 1.0933030843734741
Dance comprend nur Pet sys

7
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 3951, 13283, 18491, 3529, 1234, 278, 12205, 5155, 1048, 19378, 3838, 3058, 11679, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 10447, 18232, 287, 373, 25914, 29915, 29879, 3050, 541, 1183, 1258, 451, 679, 385, 1234, 29889, 450, 525, 11360, 29915, 14637, 304, 432, 1662, 1363, 896, 750, 1063, 7875, 1951, 278, 5046, 310, 4832, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 18491, 3529, 1234, 278, 12205, 5155, 1048, 19378, 3838, 3058, 11679, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 306, 7446, 1127, 4094, 515, 278, 18046, 280, 964, 278, 18002, 2745, 372, 471, 4069, 29889, 450, 525, 277, 29915, 14637, 304, 278, 18046, 280, 1363, 310, 278, 525, 277, 29915, 297, 278, 7256, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 18491, 3529, 1234, 278, 12205, 5155, 1048, 19378, 3838, 3058, 11679, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 1334, 750, 24936, 304, 2058, 14591, 310, 1749, 9763, 15670, 373, 599, 278, 521, 7121, 297, 278, 12990, 2105, 1974, 29892, 541, 727, 892, 3763, 2086, 1784, 310, 963, 869, 450, 525, 386, 331, 29915, 14637, 304, 521, 7121, 1363, 2086, 1784, 521, 7121, 723, 1207, 372, 2898, 363, 502, 304, 1925, 19656, 411, 19228, 5253, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 18491, 3529, 1234, 278, 12205, 5155, 1048, 19378, 3838, 3058, 11679, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 2688, 12672, 385, 7475, 13561, 29892, 541, 263, 1014, 1582, 2996, 964, 278, 29871, 5073, 322, 306, 8496, 29915, 29873, 8293, 372, 869, 450, 525, 277, 29915, 14637, 304, 278, 7475, 13561, 1363, 372, 29915, 29879, 263, 716, 697, 29892, 541, 565, 372, 29915, 29879, 1641, 12672, 287, 306, 508, 29915, 29873, 8293, 372, 29889, 29871, 10604, 29901, 29871]] [[1959], [10240], [1959], [1959]]
Initial Loss: 4.622708320617676
start ij pos optimization
4 Loss: 4.622708320617676
Dan silverjunit Please answer the dataframe questions about Dir words certain Bildouns refer to. Output correct or incorrect.


5 Loss: 4.622708320617676
Dan silverjunit Please answer the dataframe questions about Dir words certain Bildouns refer to. Output correct or incorrect.


optimized
6 Loss: 4.621854782104492
Dan silveranni Please answer the dataframe questions about Dir words certain Bildouns refer to. Output correct or incorrect.


optimized
10 Loss: 4.617081165313721
Dan silveranni Please answer the Warsza questions about Dir words certain Bildouns refer to. Output correct or incorrect.


13 Loss: 4.617081165313721
Dan silveranni Please answer the Warsza questions about Dir words certain Bildouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.586128234863281
Dan silveranni Please answer the Warsza questions about Dir words certain polouns refer to. Output correct or incorrect.


Initial VF Loss: 0.8941399455070496
start vf pos optimization
32 Loss: 0.8941399455070496
Dance comprend nur Pet sys

optimized
33 Loss: 0.8681556582450867
Dance kann nur Pet sys

optimized
34 Loss: 0.8498666286468506
Dance kann nicht Pet sys

optimized
35 Loss: 0.8371520042419434
Dance kann nicht pos sys

36 Loss: 0.8371520042419434
Dance kann nicht pos sys

8
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 3951, 13283, 9889, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 1248, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 11131, 29915, 29879, 22169, 508, 1603, 16646, 1075, 472, 22556, 29892, 1584, 2466, 540, 338, 29871, 29941, 29900, 2440, 20023, 29889, 450, 525, 354, 29915, 14637, 304, 2958, 29872, 1363, 11131, 338, 20023, 541, 508, 2317, 670, 22169, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 9889, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 1248, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 4335, 4846, 23438, 263, 13777, 304, 3762, 577, 540, 7656, 29915, 29873, 505, 304, 7899, 7432, 29889, 450, 525, 354, 29915, 14637, 304, 6454, 1363, 540, 338, 278, 697, 1058, 26603, 23438, 304, 278, 3762, 29892, 541, 525, 386, 331, 29915, 1033, 2737, 304, 278, 2305, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 9889, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 1248, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 306, 1898, 304, 10675, 263, 7623, 310, 385, 22624, 538, 29892, 411, 9336, 787, 297, 278, 454, 3712, 10697, 29892, 29871, 541, 896, 2996, 714, 3063, 901, 763, 4382, 6710, 1248, 267, 29889, 450, 525, 19562, 29915, 14637, 304, 454, 3712, 10697, 1363, 450, 9336, 787, 526, 901, 528, 10501, 763, 3578, 8227, 5824, 1135, 278, 10697, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 9889, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 1248, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 2259, 10372, 6682, 304, 5967, 29892, 577, 385, 7234, 2678, 540, 2175, 29889, 450, 525, 354, 29915, 14637, 304, 11118, 1363, 2259, 22399, 6682, 304, 5967, 29889, 29871, 10604, 29901, 29871]] [[1959], [1959], [10240], [10240]]
Initial Loss: 4.556852340698242
start ij pos optimization
4 Loss: 4.556852340698242
Dan silveranni Please answer the Warsza questions about Dir words certain polouns refer to. Output correct or incorrect.


5 Loss: 4.556852340698242
Dan silveranni Please answer the Warsza questions about Dir words certain polouns refer to. Output correct or incorrect.


optimized
6 Loss: 4.503839492797852
Dan silverormal Please answer the Warsza questions about Dir words certain polouns refer to. Output correct or incorrect.


10 Loss: 4.503839492797852
Dan silverormal Please answer the Warsza questions about Dir words certain polouns refer to. Output correct or incorrect.


13 Loss: 4.503839492797852
Dan silverormal Please answer the Warsza questions about Dir words certain polouns refer to. Output correct or incorrect.


optimized
16 Loss: 4.480052471160889
Dan silverormal Please answer the Warsza questions about Dir words certainodenouns refer to. Output correct or incorrect.


Initial VF Loss: 0.9540731310844421
start vf pos optimization
optimized
32 Loss: 0.8705722689628601
Rom kann nicht pos sys

optimized
33 Loss: 0.8656437397003174
Rom Vill nicht pos sys

optimized
34 Loss: 0.8041319251060486
Rom Vill ikke pos sys

35 Loss: 0.8041319251060486
Rom Vill ikke pos sys

36 Loss: 0.8041319251060486
Rom Vill ikke pos sys

9
[4, 5, 6, 10, 13, 16] [32, 33, 34, 35, 36]
[[1, 2184, 29901, 29871, 3951, 13283, 2759, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 13183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 450, 11203, 521, 1463, 278, 6635, 29892, 607, 6350, 701, 263, 5447, 29889, 739, 25993, 472, 278, 2246, 29889, 450, 525, 3112, 29915, 14637, 304, 278, 6635, 1363, 739, 25993, 472, 278, 2246, 29889, 1576, 11203, 521, 1463, 278, 6635, 29892, 607, 6350, 701, 263, 5447, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 2759, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 13183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 3685, 14455, 1716, 670, 385, 29895, 793, 322, 540, 29915, 29879, 22049, 411, 2181, 329, 6609, 29889, 1205, 263, 4098, 470, 577, 515, 1286, 896, 881, 367, 19039, 29889, 450, 525, 19562, 29915, 14637, 304, 278, 2181, 329, 6609, 1363, 278, 767, 338, 263, 525, 4287, 29886, 5893, 29915, 322, 278, 525, 354, 29915, 338, 5517, 304, 2737, 304, 278, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 2759, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 13183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 512, 278, 7256, 310, 278, 714, 17433, 13135, 29892, 278, 17251, 4687, 20327, 29892, 322, 372, 7572, 2745, 29871, 29896, 29900, 29889, 450, 525, 277, 29915, 14637, 304, 278, 17251, 1363, 278, 17251, 4687, 20327, 29892, 322, 372, 7572, 2745, 29871, 29896, 29900, 29889, 797, 278, 7256, 310, 278, 714, 17433, 13135, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 3951, 13283, 2759, 3529, 1234, 278, 12999, 5155, 1048, 19378, 3838, 3058, 13183, 1309, 29879, 2737, 304, 29889, 10604, 1959, 470, 10240, 29889, 13, 29871, 10567, 29901, 29871, 12001, 471, 7424, 304, 1065, 278, 270, 728, 29893, 1161, 261, 29892, 541, 540, 1925, 372, 1283, 29892, 29871, 1363, 540, 5131, 304, 6505, 5648, 29889, 1205, 278, 1510, 6077, 714, 304, 367, 289, 8253, 29892, 577, 540, 3939, 670, 3458, 322, 6077, 372, 1283, 29889, 450, 525, 277, 29915, 14637, 304, 278, 9631, 1363, 16999, 1525, 22962, 16786, 7495, 5195, 29943, 1001, 7495, 6093, 5648, 28657, 29950, 29956, 3289, 4448, 29889, 29871, 10604, 29901, 29871]] [[10240], [1959], [10240], [1959]]
Initial Loss: 9.344714164733887
start ij pos optimization
optimized
4 Loss: 7.171706199645996
by silverormal Please answer the Warsza questions about Dir words certainodenouns refer to. Output correct or incorrect.


optimized
5 Loss: 6.7420501708984375
byoopormal Please answer the Warsza questions about Dir words certainodenouns refer to. Output correct or incorrect.


optimized
6 Loss: 5.7864909172058105
byooparticles Please answer the Warsza questions about Dir words certainodenouns refer to. Output correct or incorrect.


optimized
10 Loss: 5.622935771942139
byooparticles Please answer theeness questions about Dir words certainodenouns refer to. Output correct or incorrect.


optimized
13 Loss: 5.488864898681641
byooparticles Please answer theeness questions about European words certainodenouns refer to. Output correct or incorrect.


16 Loss: 5.488864898681641
byooparticles Please answer theeness questions about European words certainodenouns refer to. Output correct or incorrect.


Initial VF Loss: 1.6358832120895386
start vf pos optimization
optimized
32 Loss: 1.1696486473083496
enabled Vill ikke pos sys

optimized
33 Loss: 1.0205779075622559
enabled Vel ikke pos sys

optimized
34 Loss: 0.9480963349342346
enabled Vel exclude pos sys

optimized
35 Loss: 0.9332560896873474
enabled Vel exclude contr sys

optimized
36 Loss: 0.8558292388916016
enabled Vel exclude contr StringBuilder

**********epistemic_reasoning**********
0
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 13355, 1598, 278, 8220, 1546, 278, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 358, 4286, 10604, 875, 737, 358, 470, 1661, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 1976, 335, 737, 12326, 29879, 393, 1913, 18556, 18553, 393, 263, 767, 338, 1886, 3241, 670, 7751, 714, 472, 7205, 29889, 28984, 720, 6656, 29901, 1913, 18556, 18553, 393, 263, 767, 338, 1886, 3241, 670, 7751, 714, 472, 7205, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 13355, 1598, 278, 8220, 1546, 278, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 358, 4286, 10604, 875, 737, 358, 470, 1661, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 26422, 5936, 7093, 393, 21499, 15894, 393, 263, 767, 8743, 6699, 411, 1023, 17354, 26361, 29889, 28984, 720, 6656, 29901, 21499, 15894, 393, 263, 767, 8743, 6699, 411, 1023, 17354, 26361, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 13355, 1598, 278, 8220, 1546, 278, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 358, 4286, 10604, 875, 737, 358, 470, 1661, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5322, 5936, 7093, 393, 263, 22556, 4847, 297, 7254, 3273, 29879, 322, 263, 4796, 528, 2728, 3907, 385, 946, 3663, 573, 1250, 3179, 24500, 7113, 278, 22556, 8287, 29889, 28984, 720, 6656, 29901, 5322, 5936, 7093, 393, 263, 2022, 338, 13587, 263, 22556, 1153, 3522, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 13355, 1598, 278, 8220, 1546, 278, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 358, 4286, 10604, 875, 737, 358, 470, 1661, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 16543, 433, 22405, 393, 1913, 18556, 2274, 29879, 393, 1757, 1708, 18881, 29889, 28984, 720, 6656, 29901, 16543, 433, 22405, 393, 1757, 1708, 18881, 29889, 29871, 10604, 29901, 29871]] [[875, 737, 358], [1661, 29899, 296, 737, 358], [875, 737, 358], [875, 737, 358]]
Initial Loss: 10.36913013458252
start ij pos optimization
optimized
4 Loss: 6.101581573486328
unlike sechsVor Identify the relation between the following premises and hypotheses, choosing from the options 'entailment' or 'non-entailment'. Output entailment or non-entailment.


optimized
5 Loss: 4.818073749542236
unlikeallasVor Identify the relation between the following premises and hypotheses, choosing from the options 'entailment' or 'non-entailment'. Output entailment or non-entailment.


optimized
6 Loss: 4.354637622833252
unlikeallasgradle Identify the relation between the following premises and hypotheses, choosing from the options 'entailment' or 'non-entailment'. Output entailment or non-entailment.


optimized
12 Loss: 4.339688777923584
unlikeallasgradle Identify the relation betweensvg following premises and hypotheses, choosing from the options 'entailment' or 'non-entailment'. Output entailment or non-entailment.


optimized
35 Loss: 4.298126220703125
unlikeallasgradle Identify the relation betweensvg following premises and hypotheses, choosing from the options 'entailment' or 'non-entail tek'. Output entailment or non-entailment.


optimized
42 Loss: 4.273383617401123
unlikeallasgradle Identify the relation betweensvg following premises and hypotheses, choosing from the options 'entailment' or 'non-entail tek'. Output entailment or Primera-entailment.


Initial VF Loss: 3.770472764968872
start vf pos optimization
optimized
53 Loss: 3.1584136486053467
aufgrunddefinedLprev西

optimized
54 Loss: 3.0007030963897705
aufgrundconnLprev西

optimized
55 Loss: 2.9283430576324463
aufgrundconnBprev西

optimized
56 Loss: 2.8521177768707275
aufgrundconnB dashed西

optimized
57 Loss: 2.8254377841949463
aufgrundconnB dashed notable

1
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 25531, 15892, 13196, 13355, 1598, 278, 8220, 1546, 15120, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 20996, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 19802, 423, 22405, 393, 26422, 12326, 29879, 393, 278, 2022, 338, 5183, 263, 3143, 29889, 28984, 720, 6656, 29901, 19802, 423, 22405, 393, 278, 2022, 338, 5183, 263, 3143, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25531, 15892, 13196, 13355, 1598, 278, 8220, 1546, 15120, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 20996, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 6123, 15894, 393, 4667, 1339, 17180, 393, 385, 27008, 368, 767, 338, 1560, 6504, 1550, 16246, 297, 4565, 310, 263, 1948, 310, 269, 8887, 508, 29879, 29889, 28984, 720, 6656, 29901, 6123, 15894, 393, 385, 27008, 368, 767, 338, 1560, 6504, 1550, 16246, 297, 4565, 310, 263, 1948, 310, 269, 8887, 508, 29879, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25531, 15892, 13196, 13355, 1598, 278, 8220, 1546, 15120, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 20996, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 319, 1564, 15894, 393, 21499, 1339, 17180, 393, 263, 3273, 29899, 2350, 2859, 767, 297, 263, 6501, 3949, 283, 1579, 482, 28015, 300, 13582, 278, 872, 29916, 3021, 650, 373, 263, 11952, 11155, 1550, 2305, 1106, 373, 297, 278, 3239, 29889, 28984, 720, 6656, 29901, 21499, 1339, 17180, 393, 263, 3273, 29899, 2350, 2859, 767, 297, 263, 6501, 3949, 283, 1579, 482, 28015, 300, 13582, 278, 872, 29916, 3021, 650, 373, 263, 11952, 11155, 1550, 2305, 1106, 373, 297, 278, 3239, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25531, 15892, 13196, 13355, 1598, 278, 8220, 1546, 15120, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 20996, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5322, 15894, 393, 697, 9613, 767, 338, 13407, 322, 380, 4362, 1283, 964, 278, 5418, 297, 4565, 310, 777, 23381, 6314, 292, 14884, 29889, 28984, 720, 6656, 29901, 5322, 15894, 393, 278, 767, 338, 9613, 29889, 29871, 10604, 29901, 29871]] [[1661, 29899, 296, 737, 358], [875, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358]]
Initial Loss: 5.407138824462891
start ij pos optimization
4 Loss: 5.407138824462891
unlikeallasgradle Identify the relation betweensvg following premises and hypotheses, choosing from the options 'entailment' or 'non-entail tek'. Output entailment or Primera-entailment.


optimized
5 Loss: 5.169942378997803
unlikelicagradle Identify the relation betweensvg following premises and hypotheses, choosing from the options 'entailment' or 'non-entail tek'. Output entailment or Primera-entailment.


optimized
6 Loss: 5.053933143615723
unlikelicamart Identify the relation betweensvg following premises and hypotheses, choosing from the options 'entailment' or 'non-entail tek'. Output entailment or Primera-entailment.


optimized
12 Loss: 5.020386219024658
unlikelicamart Identify the relation between AWS following premises and hypotheses, choosing from the options 'entailment' or 'non-entail tek'. Output entailment or Primera-entailment.


optimized
35 Loss: 5.011176586151123
unlikelicamart Identify the relation between AWS following premises and hypotheses, choosing from the options 'entailment' or 'non-entail prov'. Output entailment or Primera-entailment.


42 Loss: 5.011176586151123
unlikelicamart Identify the relation between AWS following premises and hypotheses, choosing from the options 'entailment' or 'non-entail prov'. Output entailment or Primera-entailment.


Initial VF Loss: 2.814568281173706
start vf pos optimization
optimized
53 Loss: 2.563107490539551
pilconnB dashed notable

optimized
54 Loss: 2.4571104049682617
pilivanB dashed notable

optimized
55 Loss: 2.4028313159942627
pilivanallas dashed notable

optimized
56 Loss: 2.2827537059783936
pilivanallas phr notable

57 Loss: 2.2827537059783936
pilivanallas phr notable

2
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 25531, 10123, 28402, 13355, 1598, 278, 8220, 1546, 15540, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 1326, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 1913, 18556, 12326, 29879, 393, 2259, 1083, 13415, 393, 263, 767, 338, 413, 388, 5086, 297, 12164, 19922, 29889, 28984, 720, 6656, 29901, 2259, 1083, 13415, 393, 263, 767, 338, 413, 388, 5086, 297, 12164, 19922, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25531, 10123, 28402, 13355, 1598, 278, 8220, 1546, 15540, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 1326, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 4755, 22405, 393, 4667, 5936, 7093, 393, 278, 2319, 8023, 338, 2734, 1549, 263, 17455, 29891, 4038, 29889, 28984, 720, 6656, 29901, 4755, 22405, 393, 278, 2319, 8023, 338, 2734, 1549, 263, 17455, 29891, 4038, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25531, 10123, 28402, 13355, 1598, 278, 8220, 1546, 15540, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 1326, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 319, 1564, 22405, 393, 5322, 2274, 29879, 393, 1023, 5866, 526, 16246, 472, 263, 1591, 29892, 697, 338, 13587, 263, 24354, 322, 1790, 2278, 338, 8743, 373, 278, 11904, 29889, 28984, 720, 6656, 29901, 319, 1564, 22405, 393, 1023, 5866, 526, 16246, 472, 263, 1591, 29892, 697, 338, 13587, 263, 24354, 322, 1790, 2278, 338, 8743, 373, 278, 11904, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25531, 10123, 28402, 13355, 1598, 278, 8220, 1546, 15540, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 1326, 4286, 10604, 875, 737, 358, 470, 22915, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 16543, 433, 1339, 17180, 393, 21499, 15894, 393, 263, 2318, 310, 413, 4841, 1708, 373, 263, 2927, 1319, 3829, 29889, 28984, 720, 6656, 29901, 21499, 15894, 393, 263, 2318, 310, 413, 4841, 1708, 373, 263, 2927, 1319, 3829, 29889, 29871, 10604, 29901, 29871]] [[875, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358], [875, 737, 358]]
Initial Loss: 4.8599042892456055
start ij pos optimization
optimized
4 Loss: 3.6102447509765625
wraplicamart Identify the relation between AWS following premises and hypotheses, choosing from the options 'entailment' or 'non-entail prov'. Output entailment or Primera-entailment.


optimized
5 Loss: 3.459260940551758
wrap floatingmart Identify the relation between AWS following premises and hypotheses, choosing from the options 'entailment' or 'non-entail prov'. Output entailment or Primera-entailment.


optimized
6 Loss: 3.399428367614746
wrap floatinggar Identify the relation between AWS following premises and hypotheses, choosing from the options 'entailment' or 'non-entail prov'. Output entailment or Primera-entailment.


optimized
12 Loss: 3.2841365337371826
wrap floatinggar Identify the relation between CGFloat following premises and hypotheses, choosing from the options 'entailment' or 'non-entail prov'. Output entailment or Primera-entailment.


optimized
35 Loss: 3.2624175548553467
wrap floatinggar Identify the relation between CGFloat following premises and hypotheses, choosing from the options 'entailment' or 'non-entailSTART'. Output entailment or Primera-entailment.


optimized
42 Loss: 3.2329602241516113
wrap floatinggar Identify the relation between CGFloat following premises and hypotheses, choosing from the options 'entailment' or 'non-entailSTART'. Output entailment or batt-entailment.


Initial VF Loss: 2.3249247074127197
start vf pos optimization
optimized
53 Loss: 1.8395694494247437
fixivanallas phr notable

optimized
54 Loss: 1.5538195371627808
fixegrallas phr notable

optimized
55 Loss: 1.4455684423446655
fixegragh phr notable

optimized
56 Loss: 1.2793835401535034
fixegragh exem notable

optimized
57 Loss: 1.014282464981079
fixegragh exem sym

3
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 12244, 16526, 5397, 13355, 1598, 278, 8220, 1546, 29239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 25826, 4286, 10604, 875, 737, 358, 470, 8957, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 19802, 423, 1339, 17180, 393, 6123, 1339, 17180, 393, 1244, 338, 385, 7475, 13561, 363, 26077, 1048, 278, 25695, 29889, 28984, 720, 6656, 29901, 6123, 1339, 17180, 393, 1244, 338, 385, 7475, 13561, 363, 26077, 1048, 278, 25695, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16526, 5397, 13355, 1598, 278, 8220, 1546, 29239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 25826, 4286, 10604, 875, 737, 358, 470, 8957, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 6123, 9906, 393, 26422, 12326, 29879, 393, 263, 767, 297, 263, 7632, 16779, 338, 3063, 472, 263, 19716, 29889, 28984, 720, 6656, 29901, 26422, 12326, 29879, 393, 263, 767, 297, 263, 7632, 16779, 338, 3063, 472, 263, 19716, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16526, 5397, 13355, 1598, 278, 8220, 1546, 29239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 25826, 4286, 10604, 875, 737, 358, 470, 8957, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 4667, 24298, 1983, 393, 263, 767, 8026, 670, 4123, 8023, 1708, 3730, 964, 278, 4799, 13407, 373, 263, 25695, 29889, 28984, 720, 6656, 29901, 7298, 873, 29876, 24298, 1983, 393, 263, 26507, 338, 8743, 373, 278, 25695, 411, 263, 8023, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16526, 5397, 13355, 1598, 278, 8220, 1546, 29239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 25826, 4286, 10604, 875, 737, 358, 470, 8957, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 19802, 423, 12326, 29879, 393, 1976, 335, 737, 24298, 1983, 393, 263, 4796, 11203, 338, 2734, 373, 263, 7679, 29891, 25695, 29889, 28984, 720, 6656, 29901, 19802, 423, 12326, 29879, 393, 263, 4796, 11203, 338, 2734, 373, 263, 7679, 29891, 25695, 29889, 29871, 10604, 29901, 29871]] [[875, 737, 358], [875, 737, 358], [1661, 29899, 296, 737, 358], [875, 737, 358]]
Initial Loss: 3.3757846355438232
start ij pos optimization
4 Loss: 3.3757846355438232
wrap floatinggar Identify the relation between CGFloat following premises and hypotheses, choosing from the options 'entailment' or 'non-entailSTART'. Output entailment or batt-entailment.


optimized
5 Loss: 3.340250015258789
wrapemogar Identify the relation between CGFloat following premises and hypotheses, choosing from the options 'entailment' or 'non-entailSTART'. Output entailment or batt-entailment.


optimized
6 Loss: 3.2122764587402344
wrapemovars Identify the relation between CGFloat following premises and hypotheses, choosing from the options 'entailment' or 'non-entailSTART'. Output entailment or batt-entailment.


optimized
12 Loss: 3.18686842918396
wrapemovars Identify the relation between zug following premises and hypotheses, choosing from the options 'entailment' or 'non-entailSTART'. Output entailment or batt-entailment.


optimized
35 Loss: 3.15637469291687
wrapemovars Identify the relation between zug following premises and hypotheses, choosing from the options 'entailment' or 'non-entail FALSE'. Output entailment or batt-entailment.


optimized
42 Loss: 3.1275782585144043
wrapemovars Identify the relation between zug following premises and hypotheses, choosing from the options 'entailment' or 'non-entail FALSE'. Output entailment or gover-entailment.


Initial VF Loss: 1.9998291730880737
start vf pos optimization
optimized
53 Loss: 1.787116289138794
generateegragh exem sym

optimized
54 Loss: 1.686009407043457
generate pandasagh exem sym

optimized
55 Loss: 1.4847302436828613
generate pandas interpreter exem sym

56 Loss: 1.4847302436828613
generate pandas interpreter exem sym

57 Loss: 1.4847302436828613
generate pandas interpreter exem sym

4
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 12244, 15810, 16908, 13355, 1598, 278, 8220, 1546, 18570, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 17131, 4286, 10604, 875, 737, 358, 470, 14765, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 4699, 5936, 7093, 393, 5322, 22405, 393, 263, 767, 297, 263, 1045, 290, 13777, 20968, 281, 2495, 29879, 29889, 28984, 720, 6656, 29901, 5322, 22405, 393, 4699, 5936, 7093, 393, 263, 767, 297, 263, 1045, 290, 13777, 20968, 281, 2495, 29879, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 15810, 16908, 13355, 1598, 278, 8220, 1546, 18570, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 17131, 4286, 10604, 875, 737, 358, 470, 14765, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 1913, 18556, 1339, 17180, 393, 3196, 16157, 29879, 1106, 373, 1550, 263, 4123, 7826, 13582, 297, 263, 8287, 22754, 29889, 28984, 720, 6656, 29901, 6123, 1339, 17180, 393, 263, 4123, 7826, 338, 8743, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 15810, 16908, 13355, 1598, 278, 8220, 1546, 18570, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 17131, 4286, 10604, 875, 737, 358, 470, 14765, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 21499, 22405, 393, 6123, 5936, 7093, 393, 263, 8023, 338, 13407, 297, 263, 11565, 2805, 8536, 25936, 411, 4094, 29889, 28984, 720, 6656, 29901, 21499, 22405, 393, 263, 8023, 338, 13407, 297, 263, 11565, 2805, 8536, 25936, 411, 4094, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 15810, 16908, 13355, 1598, 278, 8220, 1546, 18570, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 17131, 4286, 10604, 875, 737, 358, 470, 14765, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 16543, 433, 2274, 29879, 393, 19802, 423, 22405, 393, 278, 26703, 411, 278, 2654, 2174, 333, 528, 2728, 322, 4628, 282, 1934, 338, 13590, 304, 263, 4123, 11379, 13587, 263, 7254, 4138, 29889, 28984, 720, 6656, 29901, 19802, 423, 22405, 393, 16543, 433, 2274, 29879, 393, 278, 26703, 411, 278, 2654, 2174, 333, 528, 2728, 322, 4628, 282, 1934, 338, 13590, 304, 263, 4123, 11379, 13587, 263, 7254, 4138, 29889, 29871, 10604, 29901, 29871]] [[1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358]]
Initial Loss: 4.812499523162842
start ij pos optimization
4 Loss: 4.812499523162842
wrapemovars Identify the relation between zug following premises and hypotheses, choosing from the options 'entailment' or 'non-entail FALSE'. Output entailment or gover-entailment.


optimized
5 Loss: 3.9482274055480957
wrapmetricvars Identify the relation between zug following premises and hypotheses, choosing from the options 'entailment' or 'non-entail FALSE'. Output entailment or gover-entailment.


optimized
6 Loss: 3.6808743476867676
wrapmetricriver Identify the relation between zug following premises and hypotheses, choosing from the options 'entailment' or 'non-entail FALSE'. Output entailment or gover-entailment.


optimized
12 Loss: 3.6285295486450195
wrapmetricriver Identify the relation between Warszawa following premises and hypotheses, choosing from the options 'entailment' or 'non-entail FALSE'. Output entailment or gover-entailment.


optimized
35 Loss: 3.504953622817993
wrapmetricriver Identify the relation between Warszawa following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or gover-entailment.


optimized
42 Loss: 3.416865587234497
wrapmetricriver Identify the relation between Warszawa following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment oronomie-entailment.


Initial VF Loss: 1.3565648794174194
start vf pos optimization
optimized
53 Loss: 1.2222497463226318
gex pandas interpreter exem sym

54 Loss: 1.2222497463226318
gex pandas interpreter exem sym

optimized
55 Loss: 1.0689176321029663
gex pandasromagnet exem sym

56 Loss: 1.0689176321029663
gex pandasromagnet exem sym

optimized
57 Loss: 0.893096923828125
gex pandasromagnet exem wrap

5
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 12244, 16414, 3511, 13355, 1598, 278, 8220, 1546, 19879, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 25751, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 319, 1564, 12326, 29879, 393, 26422, 22405, 393, 263, 17354, 11203, 6057, 1549, 263, 17455, 29891, 1746, 29889, 28984, 720, 6656, 29901, 26422, 22405, 393, 263, 17354, 11203, 6057, 1549, 263, 17455, 29891, 1746, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 3511, 13355, 1598, 278, 8220, 1546, 19879, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 25751, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 12537, 12326, 29879, 393, 4667, 22405, 393, 1023, 5866, 13748, 26935, 322, 13563, 1550, 16246, 373, 263, 9654, 300, 2978, 263, 7679, 29891, 19055, 29889, 28984, 720, 6656, 29901, 12537, 12326, 29879, 393, 1023, 5866, 13748, 26935, 322, 13563, 1550, 16246, 373, 263, 9654, 300, 2978, 263, 7679, 29891, 19055, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 3511, 13355, 1598, 278, 8220, 1546, 19879, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 25751, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 6936, 24298, 1983, 393, 4667, 1339, 17180, 393, 1023, 5866, 297, 27683, 292, 480, 1169, 1708, 373, 278, 25695, 29889, 28984, 720, 6656, 29901, 4667, 1339, 17180, 393, 6936, 24298, 1983, 393, 1023, 5866, 297, 27683, 292, 480, 1169, 1708, 373, 278, 25695, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 3511, 13355, 1598, 278, 8220, 1546, 19879, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 25751, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 319, 1564, 12326, 29879, 393, 5011, 1339, 17180, 393, 385, 27008, 368, 2315, 591, 4362, 263, 288, 9258, 7933, 528, 2728, 322, 2654, 322, 4796, 17820, 287, 21783, 265, 338, 5096, 292, 923, 968, 29889, 28984, 720, 6656, 29901, 5011, 1339, 17180, 393, 385, 27008, 368, 2315, 591, 4362, 263, 288, 9258, 7933, 528, 2728, 322, 2654, 322, 4796, 17820, 287, 21783, 265, 338, 5096, 292, 923, 968, 29889, 29871, 10604, 29901, 29871]] [[1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358], [875, 737, 358], [875, 737, 358]]
Initial Loss: 3.362588405609131
start ij pos optimization
4 Loss: 3.362588405609131
wrapmetricriver Identify the relation between Warszawa following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment oronomie-entailment.


5 Loss: 3.362588405609131
wrapmetricriver Identify the relation between Warszawa following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment oronomie-entailment.


optimized
6 Loss: 3.2001774311065674
wrapmetricbundle Identify the relation between Warszawa following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment oronomie-entailment.


optimized
12 Loss: 3.153616428375244
wrapmetricbundle Identify the relation between hanno following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment oronomie-entailment.


35 Loss: 3.153616428375244
wrapmetricbundle Identify the relation between hanno following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment oronomie-entailment.


optimized
42 Loss: 3.126971483230591
wrapmetricbundle Identify the relation between hanno following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


Initial VF Loss: 0.6426370739936829
start vf pos optimization
53 Loss: 0.6426370739936829
gex pandasromagnet exem wrap

54 Loss: 0.6426370739936829
gex pandasromagnet exem wrap

optimized
55 Loss: 0.5903822183609009
gex pandas asym exem wrap

optimized
56 Loss: 0.585895299911499
gex pandas asymWorkbook wrap

57 Loss: 0.585895299911499
gex pandas asymWorkbook wrap

6
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 15239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5011, 15894, 393, 12537, 15894, 393, 263, 767, 297, 263, 4628, 3056, 29892, 13407, 373, 278, 11952, 1550, 8743, 385, 12646, 11210, 322, 23623, 29889, 28984, 720, 6656, 29901, 5011, 15894, 393, 263, 767, 297, 263, 4628, 3056, 29892, 13407, 373, 278, 11952, 1550, 8743, 385, 12646, 11210, 322, 23623, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 15239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 6123, 9906, 393, 2259, 1339, 17180, 393, 263, 6114, 297, 4628, 17042, 2039, 1623, 278, 11952, 297, 4565, 310, 263, 2646, 600, 1573, 10090, 29889, 28984, 720, 6656, 29901, 2259, 1339, 17180, 393, 263, 6114, 297, 4628, 17042, 2039, 1623, 278, 11952, 297, 4565, 310, 263, 2646, 600, 1573, 10090, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 15239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5322, 15894, 393, 16543, 433, 18553, 393, 263, 767, 338, 1791, 292, 297, 263, 2319, 4840, 411, 263, 3056, 975, 670, 2343, 1550, 278, 2217, 4094, 11950, 338, 1671, 292, 297, 278, 3239, 29889, 28984, 720, 6656, 29901, 5322, 15894, 393, 263, 767, 338, 1791, 292, 297, 263, 2319, 4840, 411, 263, 3056, 975, 670, 2343, 1550, 278, 2217, 4094, 11950, 338, 1671, 292, 297, 278, 3239, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 15239, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 19802, 423, 1339, 17180, 393, 6936, 9906, 393, 263, 14263, 28877, 297, 385, 24841, 322, 4796, 260, 29899, 845, 2728, 322, 4628, 3273, 29879, 338, 269, 2158, 292, 1623, 278, 5702, 29889, 28984, 720, 6656, 29901, 6936, 9906, 393, 263, 14263, 28877, 297, 385, 24841, 322, 4796, 260, 29899, 845, 2728, 322, 4628, 3273, 29879, 338, 269, 2158, 292, 1623, 278, 5702, 29889, 29871, 10604, 29901, 29871]] [[1661, 29899, 296, 737, 358], [875, 737, 358], [875, 737, 358], [1661, 29899, 296, 737, 358]]
Initial Loss: 3.287559747695923
start ij pos optimization
4 Loss: 3.287559747695923
wrapmetricbundle Identify the relation between hanno following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


5 Loss: 3.287559747695923
wrapmetricbundle Identify the relation between hanno following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


6 Loss: 3.287559747695923
wrapmetricbundle Identify the relation between hanno following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


optimized
12 Loss: 3.209721565246582
wrapmetricbundle Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


35 Loss: 3.209721565246582
wrapmetricbundle Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


42 Loss: 3.209721565246582
wrapmetricbundle Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


Initial VF Loss: 0.6957524418830872
start vf pos optimization
optimized
53 Loss: 0.6557808518409729
gc pandas asymWorkbook wrap

optimized
54 Loss: 0.604946494102478
gcwp asymWorkbook wrap

55 Loss: 0.604946494102478
gcwp asymWorkbook wrap

56 Loss: 0.604946494102478
gcwp asymWorkbook wrap

57 Loss: 0.604946494102478
gcwp asymWorkbook wrap

7
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5765, 5936, 7093, 393, 4699, 1339, 17180, 393, 263, 4123, 767, 338, 8743, 263, 7254, 11210, 29889, 28984, 720, 6656, 29901, 4699, 1339, 17180, 393, 5765, 5936, 7093, 393, 263, 4123, 767, 338, 8743, 263, 7254, 11210, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 2259, 12326, 29879, 393, 319, 1564, 9906, 393, 263, 6114, 297, 7254, 282, 1934, 322, 263, 3578, 29899, 9539, 2246, 3430, 1623, 472, 902, 1361, 1550, 13407, 2978, 263, 26616, 16749, 534, 2707, 322, 22047, 491, 17439, 4518, 5962, 29889, 28984, 720, 6656, 29901, 319, 1564, 9906, 393, 263, 6114, 297, 7254, 282, 1934, 322, 263, 3578, 29899, 9539, 2246, 3430, 1623, 472, 902, 1361, 1550, 13407, 2978, 263, 26616, 16749, 534, 2707, 322, 22047, 491, 17439, 4518, 5962, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 7298, 873, 29876, 1339, 17180, 393, 1976, 335, 737, 1339, 17180, 393, 2211, 2305, 297, 9090, 526, 714, 1867, 943, 322, 526, 5366, 1747, 263, 9088, 607, 338, 714, 310, 278, 7623, 29889, 28984, 720, 6656, 29901, 7298, 873, 29876, 1339, 17180, 393, 2211, 2305, 297, 9090, 526, 714, 1867, 943, 322, 526, 5366, 1747, 263, 9088, 607, 338, 714, 310, 278, 7623, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 12244, 16414, 16718, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 7917, 4286, 10604, 875, 737, 358, 470, 11446, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5765, 2274, 29879, 393, 319, 1564, 22405, 393, 263, 767, 591, 4362, 263, 1423, 14561, 528, 2728, 29892, 907, 314, 14726, 322, 22556, 17394, 267, 269, 1169, 373, 263, 3856, 305, 29889, 28984, 720, 6656, 29901, 319, 1564, 22405, 393, 263, 767, 591, 4362, 263, 1423, 14561, 528, 2728, 29892, 907, 314, 14726, 322, 22556, 17394, 267, 269, 1169, 373, 263, 3856, 305, 29889, 29871, 10604, 29901, 29871]] [[875, 737, 358], [875, 737, 358], [875, 737, 358], [875, 737, 358]]
Initial Loss: 4.480989933013916
start ij pos optimization
optimized
4 Loss: 4.402564525604248
zakmetricbundle Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


5 Loss: 4.402564525604248
zakmetricbundle Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


optimized
6 Loss: 3.6457901000976562
zakmetricindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


12 Loss: 3.6457901000976562
zakmetricindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail listade'. Output entailment or apps-entailment.


optimized
35 Loss: 3.6335160732269287
zakmetricindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail figura'. Output entailment or apps-entailment.


optimized
42 Loss: 3.5542802810668945
zakmetricindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail figura'. Output entailment or zap-entailment.


Initial VF Loss: 2.0862483978271484
start vf pos optimization
optimized
53 Loss: 1.8867831230163574
festivwp asymWorkbook wrap

optimized
54 Loss: 1.5629452466964722
festiv Larry asymWorkbook wrap

optimized
55 Loss: 1.3861722946166992
festiv Larry skupWorkbook wrap

optimized
56 Loss: 1.184341549873352
festiv Larry skup breakfast wrap

optimized
57 Loss: 1.151072382926941
festiv Larry skup breakfast Comment

8
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 15117, 16414, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 27316, 4286, 10604, 875, 737, 358, 470, 13792, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5011, 24298, 1983, 393, 6123, 15894, 393, 1023, 1757, 297, 480, 1169, 13407, 297, 4565, 310, 263, 3593, 29892, 697, 338, 591, 4362, 263, 12807, 29889, 28984, 720, 6656, 29901, 6123, 15894, 393, 1023, 1757, 297, 480, 1169, 13407, 297, 4565, 310, 263, 3593, 29892, 697, 338, 591, 4362, 263, 12807, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15117, 16414, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 27316, 4286, 10604, 875, 737, 358, 470, 13792, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 1913, 18556, 24298, 1983, 393, 263, 767, 591, 4362, 322, 8811, 528, 2728, 338, 373, 278, 5962, 297, 263, 5503, 29899, 786, 2602, 29892, 1550, 263, 767, 297, 9090, 10674, 1446, 17620, 1075, 29889, 28984, 720, 6656, 29901, 19122, 423, 24298, 1983, 393, 727, 338, 263, 528, 2728, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15117, 16414, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 27316, 4286, 10604, 875, 737, 358, 470, 13792, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5322, 1339, 17180, 393, 4755, 1339, 17180, 393, 263, 1410, 29891, 338, 15661, 304, 2189, 263, 2071, 403, 3377, 8938, 1550, 12500, 292, 975, 760, 310, 263, 4796, 5214, 297, 385, 4218, 304, 2982, 373, 278, 18387, 5377, 29889, 28984, 720, 6656, 29901, 5322, 1339, 17180, 393, 263, 1410, 29891, 338, 15661, 304, 2189, 263, 2071, 403, 3377, 8938, 1550, 12500, 292, 975, 760, 310, 263, 4796, 5214, 297, 385, 4218, 304, 2982, 373, 278, 18387, 5377, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15117, 16414, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 27316, 4286, 10604, 875, 737, 358, 470, 13792, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 319, 1564, 12326, 29879, 393, 1913, 18556, 15894, 393, 263, 767, 297, 263, 4628, 24296, 322, 3056, 322, 263, 6114, 297, 263, 7254, 24296, 411, 282, 682, 3056, 15007, 845, 7297, 292, 373, 278, 2625, 310, 263, 6520, 411, 263, 5040, 4366, 297, 278, 3239, 29889, 28984, 720, 6656, 29901, 319, 1564, 12326, 29879, 393, 263, 767, 297, 263, 4628, 24296, 322, 3056, 322, 263, 6114, 297, 263, 7254, 24296, 411, 282, 682, 3056, 15007, 845, 7297, 292, 373, 278, 2625, 310, 263, 6520, 411, 263, 5040, 4366, 297, 278, 3239, 29889, 29871, 10604, 29901, 29871]] [[1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358]]
Initial Loss: 4.113555908203125
start ij pos optimization
4 Loss: 4.113555908203125
zakmetricindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail figura'. Output entailment or zap-entailment.


optimized
5 Loss: 4.106459617614746
zak masindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail figura'. Output entailment or zap-entailment.


6 Loss: 4.106459617614746
zak masindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail figura'. Output entailment or zap-entailment.


12 Loss: 4.106459617614746
zak masindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail figura'. Output entailment or zap-entailment.


optimized
35 Loss: 4.0671210289001465
zak masindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or zap-entailment.


optimized
42 Loss: 3.97148060798645
zak masindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Zach-entailment.


Initial VF Loss: 1.301047444343567
start vf pos optimization
optimized
53 Loss: 1.2410470247268677
legacy Larry skup breakfast Comment

optimized
54 Loss: 1.2090219259262085
legacy Warren skup breakfast Comment

optimized
55 Loss: 0.9660089612007141
legacy Warren klub breakfast Comment

optimized
56 Loss: 0.8796691298484802
legacy Warren klub compet Comment

57 Loss: 0.8796691298484802
legacy Warren klub compet Comment

9
[4, 5, 6, 12, 35, 42] [53, 54, 55, 56, 57]
[[1, 2184, 29901, 29871, 15117, 5516, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 10571, 4286, 10604, 875, 737, 358, 470, 29103, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 1976, 335, 737, 24298, 1983, 393, 5765, 12326, 29879, 393, 4123, 528, 2728, 2222, 767, 322, 408, 713, 6114, 12500, 701, 515, 263, 4091, 340, 7679, 472, 278, 19055, 411, 25462, 2730, 4395, 297, 278, 3239, 29889, 28984, 720, 6656, 29901, 5765, 12326, 29879, 393, 1976, 335, 737, 24298, 1983, 393, 4123, 528, 2728, 2222, 767, 322, 408, 713, 6114, 12500, 701, 515, 263, 4091, 340, 7679, 472, 278, 19055, 411, 25462, 2730, 4395, 297, 278, 3239, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15117, 5516, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 10571, 4286, 10604, 875, 737, 358, 470, 29103, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 319, 1564, 22405, 393, 4344, 472, 2462, 18020, 8743, 373, 28774, 29892, 322, 1248, 267, 29892, 697, 3847, 13407, 322, 13587, 902, 2278, 322, 697, 15703, 338, 16246, 373, 278, 3856, 305, 21217, 278, 4045, 1708, 29889, 28984, 720, 6656, 29901, 5765, 22405, 393, 4344, 526, 8743, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15117, 5516, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 10571, 4286, 10604, 875, 737, 358, 470, 29103, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 5322, 22405, 393, 4699, 1339, 17180, 393, 263, 767, 4392, 1475, 263, 4768, 446, 2645, 263, 29413, 14686, 29889, 28984, 720, 6656, 29901, 5322, 22405, 393, 263, 767, 4392, 1475, 263, 4768, 446, 2645, 263, 29413, 14686, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 15117, 5516, 14108, 13355, 1598, 278, 8220, 1546, 7917, 1494, 5188, 4637, 322, 13752, 21523, 29892, 23906, 515, 278, 3987, 525, 296, 737, 358, 29915, 470, 525, 5464, 29899, 296, 737, 10571, 4286, 10604, 875, 737, 358, 470, 29103, 29899, 296, 737, 358, 29889, 13, 29871, 10567, 29901, 29871, 6097, 895, 29901, 16543, 433, 24298, 1983, 393, 14099, 2259, 15612, 475, 373, 263, 5193, 1510, 29889, 28984, 720, 6656, 29901, 16543, 433, 24298, 1983, 393, 432, 6547, 15612, 475, 338, 373, 263, 5193, 1510, 29889, 29871, 10604, 29901, 29871]] [[875, 737, 358], [875, 737, 358], [1661, 29899, 296, 737, 358], [1661, 29899, 296, 737, 358]]
Initial Loss: 3.96592116355896
start ij pos optimization
4 Loss: 3.96592116355896
zak masindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Zach-entailment.


optimized
5 Loss: 3.304558515548706
zakbuffindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Zach-entailment.


6 Loss: 3.304558515548706
zakbuffindi Identify the relation between listade following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Zach-entailment.


optimized
12 Loss: 3.2492294311523438
zakbuffindi Identify the relation between mezi following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Zach-entailment.


35 Loss: 3.2492294311523438
zakbuffindi Identify the relation between mezi following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Zach-entailment.


optimized
42 Loss: 3.232893466949463
zakbuffindi Identify the relation between mezi following premises and hypotheses, choosing from the options 'entailment' or 'non-entail pela'. Output entailment or Steven-entailment.


Initial VF Loss: 1.0858553647994995
start vf pos optimization
optimized
53 Loss: 0.7962409853935242
Zak Warren klub compet Comment

optimized
54 Loss: 0.7329613566398621
Zak Loren klub compet Comment

55 Loss: 0.7329613566398621
Zak Loren klub compet Comment

optimized
56 Loss: 0.6868994235992432
Zak Loren klub footballer Comment

optimized
57 Loss: 0.6052356958389282
Zak Loren klub footballerTeam

**********snarks**********
0
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 3229, 338, 22887, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 15011, 29892, 372, 29915, 29879, 14909, 15590, 304, 972, 29891, 4856, 263, 8825, 472, 263, 12355, 292, 3942, 1363, 310, 278, 2927, 310, 1009, 19309, 29889, 313, 29890, 29897, 15011, 29892, 372, 29915, 29879, 14909, 8177, 12906, 681, 304, 972, 29891, 4856, 263, 8825, 472, 263, 12355, 292, 3942, 1363, 310, 278, 2927, 310, 1009, 19309, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 3229, 338, 22887, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 450, 1855, 1020, 3192, 29891, 1244, 338, 393, 4856, 338, 1321, 5414, 263, 5227, 566, 313, 29890, 29897, 450, 1855, 1020, 3192, 29891, 1244, 338, 393, 4856, 338, 1321, 5414, 263, 19928, 574, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 3229, 338, 22887, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1724, 263, 20695, 29892, 2362, 6393, 26142, 362, 29889, 313, 29890, 29897, 1724, 263, 29191, 29892, 2362, 6393, 26142, 362, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 3229, 338, 22887, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 2193, 29915, 29879, 871, 1048, 395, 29900, 29889, 29896, 29945, 639, 17967, 363, 263, 1109, 29892, 7970, 15590, 26413, 21544, 29889, 313, 29890, 29897, 2193, 29915, 29879, 871, 1048, 395, 29896, 29900, 639, 17967, 363, 263, 1109, 29892, 7970, 15590, 26413, 21544, 29889, 29871, 10604, 29901, 29871]] [[313, 29874, 29897], [313, 29874, 29897], [313, 29890, 29897], [313, 29890, 29897]]
Initial Loss: 10.593002319335938
start ij pos optimization
optimized
4 Loss: 5.497505187988281
ens sechsVor Which statement is sarcastic? Output (a) or (b).


optimized
5 Loss: 3.870544195175171
ens wrappedVor Which statement is sarcastic? Output (a) or (b).


optimized
6 Loss: 3.3884472846984863
ens wrappedBinding Which statement is sarcastic? Output (a) or (b).


optimized
8 Loss: 3.3062455654144287
ens wrappedBinding Which executes is sarcastic? Output (a) or (b).


optimized
10 Loss: 3.2438738346099854
ens wrappedBinding Which executes ismaticallycastic? Output (a) or (b).


18 Loss: 3.2438738346099854
ens wrappedBinding Which executes ismaticallycastic? Output (a) or (b).


Initial VF Loss: 1.739688515663147
start vf pos optimization
optimized
27 Loss: 1.4388341903686523
railwaydefinedLprev西

optimized
28 Loss: 1.2727575302124023
railwayDataSetLprev西

optimized
29 Loss: 1.05666983127594
railwayDataSet claprev西

optimized
30 Loss: 1.0463122129440308
railwayDataSet clapkg西

optimized
31 Loss: 0.9359468817710876
railwayDataSet clapkgaddClass

1
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5662, 21021, 9270, 8449, 24138, 338, 20300, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1205, 393, 1033, 2360, 3799, 297, 16832, 988, 7047, 2360, 4439, 12171, 29889, 313, 29890, 29897, 1205, 393, 1033, 2360, 3799, 297, 16832, 988, 7047, 4049, 4439, 12171, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 21021, 9270, 8449, 24138, 338, 20300, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 7569, 650, 9906, 393, 16245, 749, 310, 278, 4307, 5566, 6394, 23196, 515, 1494, 278, 4307, 29889, 313, 29890, 29897, 7569, 650, 9906, 16245, 749, 310, 278, 4307, 5566, 6394, 366, 515, 1494, 278, 4307, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 21021, 9270, 8449, 24138, 338, 20300, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 18637, 925, 367, 9796, 769, 366, 2113, 29915, 29873, 367, 316, 13120, 15128, 29889, 313, 29890, 29897, 18637, 925, 367, 9796, 393, 366, 2113, 29915, 29873, 367, 316, 13120, 15128, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 21021, 9270, 8449, 24138, 338, 20300, 4384, 293, 29973, 10604, 313, 29874, 29897, 470, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 15011, 29892, 540, 29915, 29879, 9436, 263, 2084, 7492, 304, 2326, 1076, 6233, 2729, 373, 670, 10225, 29880, 5402, 1708, 322, 278, 2114, 393, 540, 29915, 29879, 2646, 1327, 292, 7375, 26361, 472, 4203, 931, 856, 313, 29890, 29897, 15011, 29892, 540, 29915, 29879, 9436, 16955, 304, 2326, 1076, 6233, 2729, 373, 670, 10225, 29880, 5402, 1708, 322, 278, 2114, 393, 540, 29915, 29879, 2646, 1327, 292, 7375, 26361, 472, 4203, 931, 856, 29871, 10604, 29901, 29871]] [[313, 29890, 29897], [313, 29890, 29897], [313, 29874, 29897], [313, 29890, 29897]]
Initial Loss: 4.163372993469238
start ij pos optimization
4 Loss: 4.163372993469238
ens wrappedBinding Which executes ismaticallycastic? Output (a) or (b).


optimized
5 Loss: 4.036445617675781
ens bassBinding Which executes ismaticallycastic? Output (a) or (b).


optimized
6 Loss: 3.6748852729797363
ens bass nin Which executes ismaticallycastic? Output (a) or (b).


optimized
8 Loss: 3.6646416187286377
ens bass nin WhichExecutor ismaticallycastic? Output (a) or (b).


optimized
10 Loss: 3.567863702774048
ens bass nin WhichExecutor is toggcastic? Output (a) or (b).


optimized
18 Loss: 3.5302586555480957
ens bass nin WhichExecutor is toggcastic? Output (a) Mongo (b).


Initial VF Loss: 1.6297675371170044
start vf pos optimization
optimized
27 Loss: 1.356899619102478
escDataSet clapkgaddClass

optimized
28 Loss: 1.2798781394958496
esc sequ clapkgaddClass

optimized
29 Loss: 1.2414906024932861
esc sequcreatepkgaddClass

optimized
30 Loss: 1.1922162771224976
esc sequcreatecpaddClass

optimized
31 Loss: 1.1539599895477295
esc sequcreatecpcollection

2
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5662, 12760, 17081, 8449, 13366, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 18294, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 2138, 391, 3819, 297, 278, 13225, 29915, 29879, 6035, 728, 1860, 29973, 1724, 437, 366, 1348, 445, 338, 7424, 304, 367, 29892, 22661, 29973, 313, 29890, 29897, 2138, 391, 3819, 297, 278, 13225, 29915, 29879, 6035, 728, 1860, 29973, 1724, 437, 366, 1348, 445, 338, 7424, 304, 367, 29892, 14731, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12760, 17081, 8449, 13366, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 18294, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 319, 10742, 310, 13752, 837, 423, 322, 270, 4708, 886, 674, 367, 263, 2107, 982, 304, 1369, 278, 1629, 29889, 313, 29890, 29897, 319, 10742, 310, 13752, 837, 423, 322, 270, 4708, 886, 674, 367, 263, 16403, 982, 304, 1369, 278, 1629, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12760, 17081, 8449, 13366, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 18294, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 306, 29915, 29885, 1854, 366, 7656, 29915, 29873, 505, 9488, 6446, 21732, 565, 263, 15703, 22630, 366, 29889, 313, 29890, 29897, 306, 29915, 29885, 1854, 366, 723, 505, 9488, 6446, 21732, 565, 263, 15703, 22630, 366, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12760, 17081, 8449, 13366, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 18294, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 317, 484, 5086, 714, 310, 263, 5874, 24454, 411, 18215, 640, 4201, 392, 3508, 29915, 29873, 2675, 304, 367, 4780, 29889, 313, 29890, 29897, 317, 484, 5086, 714, 310, 263, 5874, 24454, 411, 18215, 640, 4201, 392, 3508, 29915, 29873, 2675, 304, 367, 27302, 29889, 29871, 10604, 29901, 29871]] [[313, 29890, 29897], [313, 29890, 29897], [313, 29874, 29897], [313, 29874, 29897]]
Initial Loss: 3.553943634033203
start ij pos optimization
4 Loss: 3.553943634033203
ens bass nin WhichExecutor is toggcastic? Output (a) Mongo (b).


5 Loss: 3.553943634033203
ens bass nin WhichExecutor is toggcastic? Output (a) Mongo (b).


optimized
6 Loss: 3.32437801361084
ens bassspaces WhichExecutor is toggcastic? Output (a) Mongo (b).


optimized
8 Loss: 3.2381980419158936
ens bassspaces Whichnavbar is toggcastic? Output (a) Mongo (b).


10 Loss: 3.2381980419158936
ens bassspaces Whichnavbar is toggcastic? Output (a) Mongo (b).


optimized
18 Loss: 3.2142741680145264
ens bassspaces Whichnavbar is toggcastic? Output (a) semantic (b).


Initial VF Loss: 1.14975106716156
start vf pos optimization
27 Loss: 1.14975106716156
esc sequcreatecpcollection

optimized
28 Loss: 1.0178508758544922
esc wscreatecpcollection

optimized
29 Loss: 0.9164150357246399
esc wsxspacecpcollection

optimized
30 Loss: 0.8988632559776306
esc wsxspace cpcollection

optimized
31 Loss: 0.8170434832572937
esc wsxspace cp Systems

3
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5662, 12760, 22854, 8449, 21890, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28837, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 10458, 29886, 29892, 590, 395, 29896, 29900, 29900, 29900, 11232, 279, 9008, 756, 4319, 16988, 2834, 29892, 4140, 306, 29915, 645, 925, 505, 304, 736, 372, 29889, 313, 29890, 29897, 10458, 29886, 29892, 590, 395, 29896, 29900, 29900, 29900, 11232, 279, 9008, 756, 4319, 16988, 2834, 29892, 4140, 306, 29915, 645, 925, 505, 304, 16766, 2475, 372, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12760, 22854, 8449, 21890, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28837, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 450, 1023, 11015, 4480, 297, 1196, 338, 2086, 1472, 363, 592, 29892, 306, 1348, 474, 29915, 645, 925, 5967, 313, 29890, 29897, 450, 1023, 7234, 4480, 297, 1196, 338, 2086, 1472, 363, 592, 29892, 306, 1348, 474, 29915, 645, 925, 5967, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12760, 22854, 8449, 21890, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28837, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1105, 21210, 573, 15613, 2723, 567, 297, 263, 13225, 411, 29871, 29906, 10907, 313, 29890, 29897, 1105, 21210, 573, 15613, 2723, 567, 297, 263, 13225, 411, 29871, 29953, 29900, 10907, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12760, 22854, 8449, 21890, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28837, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 2138, 391, 3819, 297, 278, 13225, 29915, 29879, 6035, 728, 1860, 29973, 1724, 437, 366, 1348, 445, 338, 7424, 304, 367, 29892, 22661, 29973, 313, 29890, 29897, 2138, 391, 3819, 297, 278, 13225, 29915, 29879, 6035, 728, 1860, 29973, 1724, 437, 366, 1348, 445, 338, 7424, 304, 367, 29892, 14731, 29973, 29871, 10604, 29901, 29871]] [[313, 29890, 29897], [313, 29874, 29897], [313, 29890, 29897], [313, 29874, 29897]]
Initial Loss: 3.3517727851867676
start ij pos optimization
4 Loss: 3.3517727851867676
ens bassspaces Whichnavbar is toggcastic? Output (a) semantic (b).


optimized
5 Loss: 3.310877799987793
ensrizspaces Whichnavbar is toggcastic? Output (a) semantic (b).


optimized
6 Loss: 3.288024663925171
ensrizuga Whichnavbar is toggcastic? Output (a) semantic (b).


optimized
8 Loss: 3.233473300933838
ensrizuga Whichudio is toggcastic? Output (a) semantic (b).


10 Loss: 3.233473300933838
ensrizuga Whichudio is toggcastic? Output (a) semantic (b).


optimized
18 Loss: 3.224031925201416
ensrizuga Whichudio is toggcastic? Output (a)pragma (b).


Initial VF Loss: 0.692646324634552
start vf pos optimization
optimized
27 Loss: 0.5898880362510681
regex wsxspace cp Systems

optimized
28 Loss: 0.4735300540924072
regex newlinexspace cp Systems

29 Loss: 0.4735300540924072
regex newlinexspace cp Systems

30 Loss: 0.4735300540924072
regex newlinexspace cp Systems

31 Loss: 0.4735300540924072
regex newlinexspace cp Systems

4
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5662, 7485, 26281, 8449, 2881, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 2193, 29915, 29879, 920, 278, 8986, 1736, 29892, 372, 29915, 29879, 263, 3652, 310, 14379, 29889, 313, 29890, 29897, 2193, 29915, 29879, 920, 278, 8986, 1736, 29892, 372, 29915, 29879, 263, 3652, 310, 23131, 267, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 7485, 26281, 8449, 2881, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 15011, 474, 4555, 1073, 988, 2305, 679, 278, 12990, 5946, 304, 1348, 896, 508, 10021, 2750, 263, 4655, 17266, 362, 29889, 313, 29890, 29897, 15011, 306, 1016, 29915, 29873, 1073, 988, 2305, 679, 278, 12990, 5946, 304, 1348, 896, 508, 10107, 327, 2750, 263, 4655, 17266, 362, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 7485, 26281, 8449, 2881, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1105, 896, 2355, 1075, 363, 19214, 304, 278, 383, 12809, 29892, 322, 896, 864, 1075, 304, 1243, 1598, 1286, 29973, 7311, 670, 1734, 338, 9436, 7088, 451, 577, 1568, 856, 313, 29890, 29897, 1105, 896, 2355, 1075, 363, 19214, 304, 278, 383, 12809, 29892, 322, 896, 864, 1075, 304, 1243, 1598, 1286, 29973, 7311, 670, 1734, 338, 9436, 7088, 577, 1568, 856, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 7485, 26281, 8449, 2881, 338, 17304, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1205, 393, 1033, 2360, 3799, 297, 16832, 988, 7047, 2360, 4439, 12171, 29889, 313, 29890, 29897, 1205, 393, 1033, 2360, 3799, 297, 16832, 988, 7047, 4049, 4439, 12171, 29889, 29871, 10604, 29901, 29871]] [[313, 29874, 29897], [313, 29874, 29897], [313, 29890, 29897], [313, 29890, 29897]]
Initial Loss: 3.274843215942383
start ij pos optimization
4 Loss: 3.274843215942383
ensrizuga Whichudio is toggcastic? Output (a)pragma (b).


optimized
5 Loss: 3.2482123374938965
ensiculuga Whichudio is toggcastic? Output (a)pragma (b).


optimized
6 Loss: 3.117435932159424
ensicultera Whichudio is toggcastic? Output (a)pragma (b).


8 Loss: 3.117435932159424
ensicultera Whichudio is toggcastic? Output (a)pragma (b).


optimized
10 Loss: 3.0483744144439697
ensicultera Whichudio is instanceofcastic? Output (a)pragma (b).


18 Loss: 3.0483744144439697
ensicultera Whichudio is instanceofcastic? Output (a)pragma (b).


Initial VF Loss: 0.3527020514011383
start vf pos optimization
optimized
27 Loss: 0.33058467507362366
Lucy newlinexspace cp Systems

optimized
28 Loss: 0.32691121101379395
Lucyogonalxspace cp Systems

29 Loss: 0.32691121101379395
Lucyogonalxspace cp Systems

optimized
30 Loss: 0.3241218328475952
Lucyogonalxspace volunte Systems

optimized
31 Loss: 0.29150551557540894
Lucyogonalxspace volunteSystem

5
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 2881, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 26965, 451, 15649, 738, 15483, 3926, 1363, 297, 263, 2846, 2440, 1554, 2253, 674, 367, 5492, 6824, 313, 29890, 29897, 26965, 451, 15649, 738, 429, 272, 2966, 424, 15483, 3926, 1363, 297, 263, 2846, 2440, 1554, 2253, 674, 367, 5492, 6824, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 2881, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 317, 484, 5086, 714, 310, 263, 5874, 24454, 411, 18215, 640, 4201, 392, 3508, 29915, 29873, 2675, 304, 367, 4780, 29889, 313, 29890, 29897, 317, 484, 5086, 714, 310, 263, 5874, 24454, 411, 18215, 640, 4201, 392, 3508, 29915, 29873, 2675, 304, 367, 27302, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 2881, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 9070, 4874, 29892, 1583, 29899, 5064, 287, 2264, 29901, 525, 14606, 881, 5019, 2367, 263, 528, 277, 1048, 4856, 1683, 29915, 29879, 21737, 565, 366, 29915, 276, 2805, 825, 366, 864, 714, 310, 263, 6434, 17901, 313, 29890, 29897, 9070, 4874, 29892, 1176, 359, 537, 29901, 525, 14606, 881, 5019, 2367, 263, 528, 277, 1048, 4856, 1683, 29915, 29879, 21737, 565, 366, 29915, 276, 2805, 825, 366, 864, 714, 310, 263, 6434, 17901, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 2881, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 28436, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 317, 468, 1927, 285, 2722, 10664, 297, 9922, 535, 1395, 559, 10083, 443, 354, 4298, 29891, 29889, 313, 29890, 29897, 317, 468, 1927, 285, 2722, 10664, 297, 9922, 535, 1395, 559, 10083, 628, 14803, 29889, 29871, 10604, 29901, 29871]] [[313, 29874, 29897], [313, 29874, 29897], [313, 29874, 29897], [313, 29874, 29897]]
Initial Loss: 3.236954689025879
start ij pos optimization
4 Loss: 3.236954689025879
ensicultera Whichudio is instanceofcastic? Output (a)pragma (b).


5 Loss: 3.236954689025879
ensicultera Whichudio is instanceofcastic? Output (a)pragma (b).


6 Loss: 3.236954689025879
ensicultera Whichudio is instanceofcastic? Output (a)pragma (b).


optimized
8 Loss: 3.1283397674560547
ensicultera Which xmlns is instanceofcastic? Output (a)pragma (b).


optimized
10 Loss: 3.0296008586883545
ensicultera Which xmlns is classNamecastic? Output (a)pragma (b).


optimized
18 Loss: 2.961848497390747
ensicultera Which xmlns is classNamecastic? Output (a) anglais (b).


Initial VF Loss: 0.9355692267417908
start vf pos optimization
optimized
27 Loss: 0.8534447550773621
weisogonalxspace volunteSystem

28 Loss: 0.8534447550773621
weisogonalxspace volunteSystem

29 Loss: 0.8534447550773621
weisogonalxspace volunteSystem

optimized
30 Loss: 0.7285315990447998
weisogonalxspace distribSystem

31 Loss: 0.7285315990447998
weisogonalxspace distribSystem

6
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 9463, 338, 22030, 4384, 293, 29973, 10604, 313, 29874, 29897, 16464, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 319, 7631, 1370, 411, 472, 3203, 29871, 29945, 29900, 29900, 29892, 29900, 29900, 29900, 4892, 29879, 338, 18853, 304, 263, 9045, 29891, 1261, 25804, 29889, 313, 29890, 29897, 319, 7631, 1370, 411, 472, 3203, 29871, 29945, 29900, 29900, 29892, 29900, 29900, 29900, 4892, 29879, 338, 1439, 29878, 2073, 284, 304, 263, 9045, 29891, 1261, 25804, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 9463, 338, 22030, 4384, 293, 29973, 10604, 313, 29874, 29897, 16464, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 9070, 4874, 29892, 5683, 4646, 11719, 373, 263, 11118, 3971, 5742, 5764, 24189, 491, 697, 6263, 29889, 1128, 563, 331, 8415, 2454, 29889, 313, 29890, 29897, 9070, 4874, 29892, 5683, 4646, 11719, 373, 263, 11118, 3971, 5742, 5764, 24189, 491, 697, 6263, 29889, 1128, 1261, 8415, 2454, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 9463, 338, 22030, 4384, 293, 29973, 10604, 313, 29874, 29897, 16464, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 22738, 29892, 670, 12579, 1171, 8158, 3508, 29915, 29873, 278, 871, 12579, 1171, 10929, 29889, 29871, 313, 29890, 29897, 22738, 29892, 670, 12579, 1171, 8158, 338, 278, 871, 12579, 1171, 10929, 29889, 29871, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5662, 12906, 10120, 8449, 9463, 338, 22030, 4384, 293, 29973, 10604, 313, 29874, 29897, 16464, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 940, 3282, 29915, 29873, 20616, 29892, 540, 871, 5065, 3192, 29936, 14909, 1422, 29889, 313, 29890, 29897, 940, 3282, 29915, 29873, 20616, 29892, 540, 871, 5644, 11932, 29936, 14909, 1422, 29889, 29871, 10604, 29901, 29871]] [[313, 29890, 29897], [313, 29890, 29897], [313, 29890, 29897], [313, 29890, 29897]]
Initial Loss: 3.515420913696289
start ij pos optimization
optimized
4 Loss: 3.3357763290405273
densicultera Which xmlns is classNamecastic? Output (a) anglais (b).


5 Loss: 3.3357763290405273
densicultera Which xmlns is classNamecastic? Output (a) anglais (b).


6 Loss: 3.3357763290405273
densicultera Which xmlns is classNamecastic? Output (a) anglais (b).


optimized
8 Loss: 3.266162872314453
densicultera Whichhspace is classNamecastic? Output (a) anglais (b).


optimized
10 Loss: 3.1610586643218994
densicultera Whichhspace is instanceofcastic? Output (a) anglais (b).


optimized
18 Loss: 3.0344760417938232
densicultera Whichhspace is instanceofcastic? Output (a) carte (b).


Initial VF Loss: 0.7265207171440125
start vf pos optimization
optimized
27 Loss: 0.5951772332191467
recentogonalxspace distribSystem

optimized
28 Loss: 0.5069723129272461
recent newerxspace distribSystem

29 Loss: 0.5069723129272461
recent newerxspace distribSystem

optimized
30 Loss: 0.4198044240474701
recent newerxspace densitySystem

optimized
31 Loss: 0.3866311311721802
recent newerxspace densityMember

7
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 6245, 12906, 10120, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 20206, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 450, 21517, 29901, 1235, 29915, 29879, 925, 14034, 2305, 8743, 8287, 322, 2367, 278, 3362, 28739, 263, 3147, 11461, 1432, 1629, 29889, 313, 29890, 29897, 450, 21517, 29901, 1235, 29915, 29879, 925, 14034, 2305, 8743, 8287, 322, 2367, 278, 29314, 263, 3147, 11461, 1432, 1629, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6245, 12906, 10120, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 20206, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1105, 565, 727, 526, 901, 17208, 29892, 901, 2305, 508, 679, 8261, 1492, 29973, 313, 29890, 29897, 1105, 565, 727, 526, 901, 17208, 29892, 901, 2305, 508, 679, 658, 550, 1492, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6245, 12906, 10120, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 20206, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 887, 2099, 596, 3815, 1258, 278, 1556, 18658, 29892, 769, 366, 925, 1258, 278, 2186, 13031, 29889, 11562, 19583, 2479, 310, 3815, 19911, 29889, 313, 29890, 29897, 887, 2099, 596, 3815, 1258, 278, 1556, 18658, 29892, 769, 366, 925, 1258, 278, 2186, 13031, 29889, 11562, 19583, 2479, 310, 5375, 19911, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6245, 12906, 10120, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 20206, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 21588, 29875, 10068, 6368, 29892, 10083, 8872, 14803, 313, 29890, 29897, 21588, 29875, 10068, 6368, 29892, 10083, 25204, 29871, 10604, 29901, 29871]] [[313, 29874, 29897], [313, 29874, 29897], [313, 29874, 29897], [313, 29890, 29897]]
Initial Loss: 2.967554807662964
start ij pos optimization
4 Loss: 2.967554807662964
densicultera Whichhspace is instanceofcastic? Output (a) carte (b).


5 Loss: 2.967554807662964
densicultera Whichhspace is instanceofcastic? Output (a) carte (b).


optimized
6 Loss: 2.782071352005005
densiculurrent Whichhspace is instanceofcastic? Output (a) carte (b).


8 Loss: 2.782071352005005
densiculurrent Whichhspace is instanceofcastic? Output (a) carte (b).


10 Loss: 2.782071352005005
densiculurrent Whichhspace is instanceofcastic? Output (a) carte (b).


optimized
18 Loss: 2.7598016262054443
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


Initial VF Loss: 0.2382441610097885
start vf pos optimization
optimized
27 Loss: 0.20834356546401978
Wagner newerxspace densityMember

optimized
28 Loss: 0.14344647526741028
Wagner grammarxspace densityMember

optimized
29 Loss: 0.13637594878673553
Wagner grammar jelent densityMember

30 Loss: 0.13637594878673553
Wagner grammar jelent densityMember

31 Loss: 0.13637594878673553
Wagner grammar jelent densityMember

8
[4, 5, 6, 8, 10, 18] [27, 28, 29, 30, 31]
[[1, 2184, 29901, 29871, 6245, 12906, 1264, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 5923, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 13932, 278, 8580, 727, 29915, 29879, 694, 4094, 322, 694, 12646, 537, 29889, 15658, 292, 372, 338, 1316, 263, 15040, 4337, 29991, 313, 29890, 29897, 13932, 278, 8580, 727, 29915, 29879, 694, 4094, 322, 694, 12646, 537, 29889, 15658, 292, 372, 338, 1316, 263, 16403, 4337, 29991, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6245, 12906, 1264, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 5923, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 3869, 29892, 1363, 2534, 20017, 322, 1044, 3598, 5925, 292, 963, 338, 263, 12176, 19863, 29889, 313, 29890, 29897, 3869, 29892, 1363, 2534, 20017, 322, 1044, 3598, 5925, 292, 963, 338, 263, 12176, 5376, 29889, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6245, 12906, 1264, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 5923, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 1724, 1033, 10075, 367, 13978, 573, 1048, 20382, 4955, 29915, 29879, 14176, 9657, 1061, 29973, 313, 29890, 29897, 1724, 1033, 10075, 367, 2743, 1048, 20382, 4955, 29915, 29879, 14176, 9657, 1061, 29973, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 6245, 12906, 1264, 8449, 14158, 338, 28919, 4384, 293, 29973, 10604, 313, 29874, 29897, 5923, 313, 29890, 467, 13, 29871, 10567, 29901, 29871, 313, 29874, 29897, 306, 2326, 29876, 6909, 363, 15613, 29973, 9954, 592, 701, 29991, 313, 29890, 29897, 306, 14074, 6909, 363, 15613, 29973, 9954, 592, 701, 29991, 29871, 10604, 29901, 29871]] [[313, 29890, 29897], [313, 29890, 29897], [313, 29890, 29897], [313, 29890, 29897]]
Initial Loss: 2.952950954437256
start ij pos optimization
4 Loss: 2.952950954437256
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


5 Loss: 2.952950954437256
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


6 Loss: 2.952950954437256
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


8 Loss: 2.952950954437256
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


10 Loss: 2.952950954437256
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


18 Loss: 2.952950954437256
densiculurrent Whichhspace is instanceofcastic? Output (a) existing (b).


Initial VF Loss: 0.13637594878673553
start vf pos optimization
27 Loss: 0.13637594878673553
Wagner grammar jelent densityMember

28 Loss: 0.13637594878673553
Wagner grammar jelent densityMember

29 Loss: 0.13637594878673553
Wagner grammar jelent densityMember


No improvement, ending iteration
30 Loss: 0.13637594878673553
Wagner grammar jelent densityMember

**********hyperbaton**********
0
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 10604, 263, 470, 289, 29889, 13, 29871, 10567, 29901, 29871, 263, 376, 704, 1217, 29916, 2738, 12176, 5650, 13748, 292, 10992, 23090, 376, 289, 376, 704, 1217, 29916, 2738, 5650, 12176, 13748, 292, 10992, 23090, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 10604, 263, 470, 289, 29889, 13, 29871, 10567, 29901, 29871, 263, 376, 7684, 544, 1608, 4561, 4226, 29899, 2311, 19500, 14320, 29880, 3076, 2918, 3190, 29874, 293, 6635, 376, 289, 376, 4226, 29899, 2311, 3190, 29874, 293, 544, 1608, 4561, 14320, 29880, 3076, 2918, 7684, 19500, 6635, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 10604, 263, 470, 289, 29889, 13, 29871, 10567, 29901, 29871, 263, 376, 12297, 12917, 14320, 29880, 3076, 2918, 1993, 376, 289, 376, 12297, 14320, 29880, 3076, 2918, 12917, 1993, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 5640, 23320, 14147, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 10604, 263, 470, 289, 29889, 13, 29871, 10567, 29901, 29871, 263, 376, 298, 638, 292, 281, 1507, 21391, 1789, 7901, 1008, 376, 289, 376, 21391, 1789, 281, 1507, 298, 638, 292, 7901, 1008, 376, 1577, 29871, 10604, 29901, 29871]] [[263], [289], [263], [289]]
Initial Loss: 10.762519836425781
start ij pos optimization
optimized
4 Loss: 6.255025863647461
ea sechsVor Which sentence has the correct adjective order? Output a or b.


optimized
5 Loss: 4.913990020751953
eaibmVor Which sentence has the correct adjective order? Output a or b.


optimized
6 Loss: 4.828229904174805
eaibmToList Which sentence has the correct adjective order? Output a or b.


optimized
16 Loss: 4.4661970138549805
eaibmToList Which sentence has the correct adjective order? erfolgte a or b.


optimized
20 Loss: 4.248876094818115
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade


optimized
21 Loss: 3.9210166931152344
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade War

Initial VF Loss: 2.2997305393218994
start vf pos optimization
optimized
26 Loss: 1.8833348751068115
goldendefinedLprev西

optimized
27 Loss: 1.7040314674377441
goldenidiLprev西

28 Loss: 1.7040314674377441
goldenidiLprev西

29 Loss: 1.7040314674377441
goldenidiLprev西

optimized
30 Loss: 1.5839617252349854
goldenidiLprevnginx

1
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 3362, 29871, 10567, 29901, 29871, 263, 376, 3367, 6825, 7575, 24682, 12917, 2319, 11203, 376, 289, 376, 7575, 2319, 3367, 6825, 24682, 12917, 11203, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 3362, 29871, 10567, 29901, 29871, 263, 376, 28893, 18886, 681, 3190, 29874, 293, 26903, 936, 10345, 3082, 13283, 528, 7297, 376, 289, 376, 10345, 13283, 28893, 3190, 29874, 293, 26903, 936, 18886, 681, 3082, 528, 7297, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 3362, 29871, 10567, 29901, 29871, 263, 376, 2319, 12297, 3367, 6825, 3082, 13748, 292, 1601, 1989, 376, 289, 376, 3082, 12297, 3367, 6825, 13748, 292, 2319, 1601, 1989, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 3362, 29871, 10567, 29901, 29871, 263, 376, 14982, 29899, 1482, 17354, 5713, 2552, 605, 321, 1218, 6635, 376, 289, 376, 321, 1218, 17354, 5713, 2552, 605, 14982, 29899, 1482, 6635, 376, 1577, 29871, 10604, 29901, 29871]] [[263], [263], [263], [289]]
Initial Loss: 3.681273937225342
start ij pos optimization
4 Loss: 3.681273937225342
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade War

5 Loss: 3.681273937225342
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade War

6 Loss: 3.681273937225342
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade War

16 Loss: 3.681273937225342
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade War

optimized
20 Loss: 3.6651601791381836
eaibmToList Which sentence has the correct adjective order? erfolgte a or bizione War

21 Loss: 3.6651601791381836
eaibmToList Which sentence has the correct adjective order? erfolgte a or bizione War

Initial VF Loss: 1.6101040840148926
start vf pos optimization
26 Loss: 1.6101040840148926
goldenidiLprevnginx

optimized
27 Loss: 1.5972075462341309
goldenemiLprevnginx

28 Loss: 1.5972075462341309
goldenemiLprevnginx

optimized
29 Loss: 1.578398585319519
goldenemiLdescnginx

optimized
30 Loss: 1.5512347221374512
goldenemiLdescForKey

2
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 8447, 3362, 29871, 10567, 29901, 29871, 263, 376, 18886, 681, 11451, 2572, 23670, 282, 682, 24682, 22973, 1560, 17223, 10992, 23090, 376, 289, 376, 1560, 17223, 282, 682, 18886, 681, 11451, 2572, 23670, 24682, 22973, 10992, 23090, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 8447, 3362, 29871, 10567, 29901, 29871, 263, 376, 21391, 1789, 454, 1624, 17354, 377, 986, 1847, 889, 1607, 376, 289, 376, 17354, 21391, 1789, 454, 1624, 377, 986, 1847, 889, 1607, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 8447, 3362, 29871, 10567, 29901, 29871, 263, 376, 18886, 681, 26903, 936, 13328, 18444, 968, 11774, 376, 289, 376, 13328, 18886, 681, 26903, 936, 18444, 968, 11774, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 8447, 3362, 29871, 10567, 29901, 29871, 263, 376, 16749, 15058, 21577, 14982, 29899, 1482, 13977, 18444, 968, 16403, 7751, 376, 289, 376, 16403, 21577, 14982, 29899, 1482, 16749, 18444, 968, 13977, 15058, 7751, 376, 1577, 29871, 10604, 29901, 29871]] [[263], [289], [263], [289]]
Initial Loss: 3.7008860111236572
start ij pos optimization
4 Loss: 3.7008860111236572
eaibmToList Which sentence has the correct adjective order? erfolgte a or bizione War

5 Loss: 3.7008860111236572
eaibmToList Which sentence has the correct adjective order? erfolgte a or bizione War

6 Loss: 3.7008860111236572
eaibmToList Which sentence has the correct adjective order? erfolgte a or bizione War

16 Loss: 3.7008860111236572
eaibmToList Which sentence has the correct adjective order? erfolgte a or bizione War

optimized
20 Loss: 3.6650216579437256
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade War

optimized
21 Loss: 3.629208564758301
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

Initial VF Loss: 1.689245581626892
start vf pos optimization
optimized
26 Loss: 1.6785736083984375
sufemiLdescForKey

27 Loss: 1.6785736083984375
sufemiLdescForKey

28 Loss: 1.6785736083984375
sufemiLdescForKey

optimized
29 Loss: 1.6753301620483398
sufemiLijiForKey

30 Loss: 1.6753301620483398
sufemiLijiForKey

3
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 14982, 29899, 1482, 19308, 14883, 713, 8112, 10992, 23090, 376, 289, 376, 14982, 29899, 1482, 19308, 8112, 14883, 713, 10992, 23090, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 17354, 6005, 324, 968, 577, 384, 376, 289, 376, 6005, 324, 968, 17354, 577, 384, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 19308, 5807, 548, 14067, 24354, 376, 289, 376, 5807, 548, 14067, 19308, 24354, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29690, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 2319, 19308, 24841, 281, 1507, 24354, 376, 289, 376, 2319, 24841, 281, 1507, 19308, 24354, 376, 1577, 29871, 10604, 29901, 29871]] [[289], [289], [263], [263]]
Initial Loss: 3.670393466949463
start ij pos optimization
4 Loss: 3.670393466949463
eaibmToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

optimized
5 Loss: 3.6197257041931152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

6 Loss: 3.6197257041931152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

16 Loss: 3.6197257041931152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

20 Loss: 3.6197257041931152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

optimized
21 Loss: 3.607595920562744
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade literary

Initial VF Loss: 1.6871988773345947
start vf pos optimization
optimized
26 Loss: 1.6785376071929932
skuemiLijiForKey

optimized
27 Loss: 1.6381603479385376
skuistryLijiForKey

optimized
28 Loss: 1.5459399223327637
skuistry skyijiForKey

optimized
29 Loss: 1.4377840757369995
skuistry skySkForKey

30 Loss: 1.4377840757369995
skuistry skySkForKey

4
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 22937, 29871, 10567, 29901, 29871, 263, 376, 4802, 2030, 29899, 29888, 10904, 287, 13283, 1560, 17223, 10992, 23090, 376, 289, 376, 13283, 2030, 29899, 29888, 10904, 287, 4802, 1560, 17223, 10992, 23090, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 22937, 29871, 10567, 29901, 29871, 263, 376, 11451, 2572, 23670, 10637, 3708, 552, 19229, 2030, 29899, 29888, 10904, 287, 1559, 376, 289, 376, 2030, 29899, 29888, 10904, 287, 11451, 2572, 23670, 3708, 552, 10637, 19229, 1559, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 22937, 29871, 10567, 29901, 29871, 263, 376, 3190, 29874, 293, 13328, 498, 1794, 8112, 1560, 17223, 1601, 1989, 376, 289, 376, 3190, 29874, 293, 8112, 1560, 17223, 13328, 498, 1794, 1601, 1989, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 22937, 29871, 10567, 29901, 29871, 263, 376, 22277, 2738, 4796, 19229, 21391, 1789, 1601, 1989, 376, 289, 376, 22277, 2738, 4796, 21391, 1789, 19229, 1601, 1989, 376, 1577, 29871, 10604, 29901, 29871]] [[263], [263], [289], [289]]
Initial Loss: 3.7728018760681152
start ij pos optimization
4 Loss: 3.7728018760681152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade literary

5 Loss: 3.7728018760681152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade literary

6 Loss: 3.7728018760681152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade literary

16 Loss: 3.7728018760681152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade literary

20 Loss: 3.7728018760681152
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade literary

optimized
21 Loss: 3.6773393154144287
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

Initial VF Loss: 1.4704333543777466
start vf pos optimization
26 Loss: 1.4704333543777466
skuistry skySkForKey

27 Loss: 1.4704333543777466
skuistry skySkForKey

optimized
28 Loss: 1.4300585985183716
skuistry administratorSkForKey

29 Loss: 1.4300585985183716
skuistry administratorSkForKey

30 Loss: 1.4300585985183716
skuistry administratorSkForKey

5
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 3367, 6825, 24682, 8177, 12906, 681, 19500, 11203, 376, 289, 376, 8177, 12906, 681, 3367, 6825, 24682, 19500, 11203, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 2030, 13283, 544, 1608, 4561, 2654, 1190, 29888, 3377, 376, 289, 376, 2030, 544, 1608, 4561, 2654, 13283, 1190, 29888, 3377, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 28893, 19500, 6601, 376, 289, 376, 19500, 28893, 6601, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 29767, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 23982, 263, 470, 289, 7917, 25068, 29871, 10567, 29901, 29871, 263, 376, 8177, 12906, 681, 18350, 29899, 2311, 3275, 11774, 376, 289, 376, 18350, 29899, 2311, 3275, 8177, 12906, 681, 11774, 376, 1577, 29871, 10604, 29901, 29871]] [[289], [263], [263], [289]]
Initial Loss: 3.604984760284424
start ij pos optimization
4 Loss: 3.604984760284424
ea postalToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

optimized
5 Loss: 3.604661464691162
ea DNAToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

6 Loss: 3.604661464691162
ea DNAToList Which sentence has the correct adjective order? erfolgte a or b listade Arist

optimized
16 Loss: 3.576854705810547
ea DNAToList Which sentence has the correct adjective order? Pref a or b listade Arist

20 Loss: 3.576854705810547
ea DNAToList Which sentence has the correct adjective order? Pref a or b listade Arist

optimized
21 Loss: 3.5741190910339355
ea DNAToList Which sentence has the correct adjective order? Pref a or b listade noted

Initial VF Loss: 1.713547945022583
start vf pos optimization
optimized
26 Loss: 1.6049528121948242
svgistry administratorSkForKey

optimized
27 Loss: 1.5444880723953247
svg keys administratorSkForKey

optimized
28 Loss: 1.4566794633865356
svg keys unfoldSkForKey

optimized
29 Loss: 1.4424474239349365
svg keys unfold UnForKey

optimized
30 Loss: 1.4092735052108765
svg keys unfold Unxsl

6
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 25348, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 27611, 263, 470, 289, 7917, 11682, 29871, 10567, 29901, 29871, 263, 376, 28893, 10345, 14982, 29899, 1482, 21577, 19308, 5332, 10992, 23090, 376, 289, 376, 28893, 21577, 14982, 29899, 1482, 19308, 10345, 5332, 10992, 23090, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 25348, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 27611, 263, 470, 289, 7917, 11682, 29871, 10567, 29901, 29871, 263, 376, 28893, 3190, 29874, 293, 6862, 4796, 24777, 281, 1507, 13748, 292, 1559, 376, 289, 376, 28893, 24777, 4796, 281, 1507, 3190, 29874, 293, 13748, 292, 6862, 1559, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 25348, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 27611, 263, 470, 289, 7917, 11682, 29871, 10567, 29901, 29871, 263, 376, 12176, 20695, 24354, 376, 289, 376, 20695, 12176, 24354, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 25348, 21254, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 27611, 263, 470, 289, 7917, 11682, 29871, 10567, 29901, 29871, 263, 376, 3190, 29874, 293, 11451, 2572, 23670, 4796, 16704, 713, 298, 638, 292, 6601, 376, 289, 376, 11451, 2572, 23670, 3190, 29874, 293, 16704, 713, 298, 638, 292, 4796, 6601, 376, 1577, 29871, 10604, 29901, 29871]] [[289], [263], [263], [263]]
Initial Loss: 3.858964204788208
start ij pos optimization
4 Loss: 3.858964204788208
ea DNAToList Which sentence has the correct adjective order? Pref a or b listade noted

5 Loss: 3.858964204788208
ea DNAToList Which sentence has the correct adjective order? Pref a or b listade noted

optimized
6 Loss: 3.529261827468872
ea DNALinearLayout Which sentence has the correct adjective order? Pref a or b listade noted

optimized
16 Loss: 3.4545202255249023
ea DNALinearLayout Which sentence has the correct adjective order? Getting a or b listade noted

optimized
20 Loss: 3.435007333755493
ea DNALinearLayout Which sentence has the correct adjective order? Getting a or b Ende noted

optimized
21 Loss: 3.3958983421325684
ea DNALinearLayout Which sentence has the correct adjective order? Getting a or b Endeusepackage

Initial VF Loss: 1.71125328540802
start vf pos optimization
optimized
26 Loss: 1.6800258159637451
boldsymbol keys unfold Unxsl

optimized
27 Loss: 1.6240841150283813
boldsymbolrame unfold Unxsl

optimized
28 Loss: 1.5830793380737305
boldsymbolramesourceforge Unxsl

optimized
29 Loss: 1.5541173219680786
boldsymbolramesourceforge tensorflowxsl

optimized
30 Loss: 1.480258584022522
boldsymbolramesourceforge tensorflowScrollView

7
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 11248, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 24162, 263, 470, 289, 10720, 9096, 29871, 10567, 29901, 29871, 263, 376, 7145, 2311, 716, 17354, 528, 7297, 376, 289, 376, 716, 7145, 2311, 17354, 528, 7297, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 24162, 263, 470, 289, 10720, 9096, 29871, 10567, 29901, 29871, 263, 376, 2030, 10013, 11203, 376, 289, 376, 10013, 2030, 11203, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 24162, 263, 470, 289, 10720, 9096, 29871, 10567, 29901, 29871, 263, 376, 1634, 7273, 573, 2919, 12297, 6862, 17354, 6635, 376, 289, 376, 1634, 7273, 573, 12297, 6862, 17354, 2919, 6635, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 11248, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 24162, 263, 470, 289, 10720, 9096, 29871, 10567, 29901, 29871, 263, 376, 7254, 2030, 298, 638, 292, 1190, 29888, 3377, 376, 289, 376, 2030, 7254, 298, 638, 292, 1190, 29888, 3377, 376, 1577, 29871, 10604, 29901, 29871]] [[263], [289], [263], [263]]
Initial Loss: 3.026592254638672
start ij pos optimization
optimized
4 Loss: 2.371195077896118
Phi DNALinearLayout Which sentence has the correct adjective order? Getting a or b Endeusepackage

5 Loss: 2.371195077896118
Phi DNALinearLayout Which sentence has the correct adjective order? Getting a or b Endeusepackage

6 Loss: 2.371195077896118
Phi DNALinearLayout Which sentence has the correct adjective order? Getting a or b Endeusepackage

optimized
16 Loss: 2.2599077224731445
Phi DNALinearLayout Which sentence has the correct adjective order?footnote a or b Endeusepackage

optimized
20 Loss: 2.2084693908691406
Phi DNALinearLayout Which sentence has the correct adjective order?footnote a or b alorsusepackage

optimized
21 Loss: 2.057802200317383
Phi DNALinearLayout Which sentence has the correct adjective order?footnote a or b alorsInfl

Initial VF Loss: 1.1296725273132324
start vf pos optimization
optimized
26 Loss: 1.1269125938415527
MyClassramesourceforge tensorflowScrollView

optimized
27 Loss: 1.116452932357788
MyClass alphabetsourceforge tensorflowScrollView

28 Loss: 1.116452932357788
MyClass alphabetsourceforge tensorflowScrollView

optimized
29 Loss: 1.0992014408111572
MyClass alphabetsourceforge hitsScrollView

optimized
30 Loss: 1.066511869430542
MyClass alphabetsourceforge hits sys

8
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 9492, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 20273, 263, 470, 289, 8532, 15403, 29871, 10567, 29901, 29871, 263, 376, 12355, 873, 4802, 7705, 6825, 10992, 23090, 376, 289, 376, 4802, 7705, 6825, 12355, 873, 10992, 23090, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 9492, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 20273, 263, 470, 289, 8532, 15403, 29871, 10567, 29901, 29871, 263, 376, 22277, 2738, 7145, 2311, 716, 298, 638, 292, 7901, 1008, 376, 289, 376, 298, 638, 292, 22277, 2738, 7145, 2311, 716, 7901, 1008, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 9492, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 20273, 263, 470, 289, 8532, 15403, 29871, 10567, 29901, 29871, 263, 376, 16403, 4802, 2030, 29899, 29888, 10904, 287, 10345, 8112, 11203, 376, 289, 376, 4802, 10345, 2030, 29899, 29888, 10904, 287, 8112, 16403, 11203, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 9492, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 20273, 263, 470, 289, 8532, 15403, 29871, 10567, 29901, 29871, 263, 376, 12355, 873, 18350, 29899, 2311, 2030, 29899, 29888, 10904, 287, 19308, 24777, 19229, 6635, 376, 289, 376, 18350, 29899, 2311, 12355, 873, 2030, 29899, 29888, 10904, 287, 19308, 24777, 19229, 6635, 376, 1577, 29871, 10604, 29901, 29871]] [[289], [263], [289], [289]]
Initial Loss: 4.642584800720215
start ij pos optimization
optimized
4 Loss: 3.7054800987243652
intersect DNALinearLayout Which sentence has the correct adjective order?footnote a or b alorsInfl

5 Loss: 3.7054800987243652
intersect DNALinearLayout Which sentence has the correct adjective order?footnote a or b alorsInfl

6 Loss: 3.7054800987243652
intersect DNALinearLayout Which sentence has the correct adjective order?footnote a or b alorsInfl

optimized
16 Loss: 3.6342990398406982
intersect DNALinearLayout Which sentence has the correct adjective order? invoked a or b alorsInfl

optimized
20 Loss: 3.511850357055664
intersect DNALinearLayout Which sentence has the correct adjective order? invoked a or bdirInfl

optimized
21 Loss: 3.508406162261963
intersect DNALinearLayout Which sentence has the correct adjective order? invoked a or bdirAngle

Initial VF Loss: 1.3860104084014893
start vf pos optimization
optimized
26 Loss: 1.3016078472137451
dataset alphabetsourceforge hits sys

optimized
27 Loss: 1.2684051990509033
dataset vlsourceforge hits sys

optimized
28 Loss: 1.2003618478775024
dataset vl dataframe hits sys

optimized
29 Loss: 1.1106561422348022
dataset vl dataframe vr sys

30 Loss: 1.1106561422348022
dataset vl dataframe vr sys

9
[4, 5, 6, 16, 20, 21] [26, 27, 28, 29, 30]
[[1, 2184, 29901, 29871, 25869, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 22336, 263, 470, 289, 3972, 19582, 29871, 10567, 29901, 29871, 263, 376, 16403, 7933, 11774, 376, 289, 376, 7933, 16403, 11774, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25869, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 22336, 263, 470, 289, 3972, 19582, 29871, 10567, 29901, 29871, 263, 376, 716, 544, 1608, 4561, 4628, 889, 1607, 376, 289, 376, 544, 1608, 4561, 4628, 716, 889, 1607, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25869, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 22336, 263, 470, 289, 3972, 19582, 29871, 10567, 29901, 29871, 263, 376, 7575, 715, 6288, 4628, 1559, 376, 289, 376, 7575, 4628, 715, 6288, 1559, 376, 1577, 29871, 10604, 29901, 29871], [1, 2184, 29901, 29871, 25869, 25348, 15575, 8449, 10541, 756, 278, 1959, 594, 25674, 1797, 29973, 22336, 263, 470, 289, 3972, 19582, 29871, 10567, 29901, 29871, 263, 376, 7254, 12297, 377, 986, 1847, 5650, 21577, 11203, 376, 289, 376, 21577, 12297, 7254, 5650, 377, 986, 1847, 11203, 376, 1577, 29871, 10604, 29901, 29871]] [[289], [263], [289], [289]]
Initial Loss: 3.2789759635925293
start ij pos optimization
optimized
4 Loss: 3.15822696685791
Ont DNALinearLayout Which sentence has the correct adjective order? invoked a or bdirAngle

5 Loss: 3.15822696685791
Ont DNALinearLayout Which sentence has the correct adjective order? invoked a or bdirAngle

6 Loss: 3.15822696685791
Ont DNALinearLayout Which sentence has the correct adjective order? invoked a or bdirAngle

optimized
16 Loss: 3.104241371154785
Ont DNALinearLayout Which sentence has the correct adjective order? grep a or bdirAngle

optimized
20 Loss: 2.9646220207214355
Ont DNALinearLayout Which sentence has the correct adjective order? grep a or boptsAngle

optimized
21 Loss: 2.8851938247680664
Ont DNALinearLayout Which sentence has the correct adjective order? grep a or boptsbuntu

Initial VF Loss: 1.337166428565979
start vf pos optimization
optimized
26 Loss: 1.2617034912109375
Span vl dataframe vr sys

optimized
27 Loss: 1.0137799978256226
SpanRL dataframe vr sys

28 Loss: 1.0137799978256226
SpanRL dataframe vr sys

optimized
29 Loss: 0.961109459400177
SpanRL dataframe occurrence sys

optimized
30 Loss: 0.8671215176582336
SpanRL dataframe occurrence topology

